name: Bump Terraform Provider Version

on:
  workflow_dispatch:
    inputs:
      terraform_version:
        description: 'Terraform Provider Version (e.g., v0.24.5)'
        required: true
        type: string

env:
  BRANCH_PREFIX: "release-cp-"

jobs:
  bump-terraform-provider:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    
    steps:
      - name: Validate input version format
        run: |
          if [[ ! "${{ github.event.inputs.terraform_version }}" =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Error: Version must be in format vX.Y.Z (e.g., v0.24.5)"
            exit 1
          fi
          echo "VERSION=${{ github.event.inputs.terraform_version }}" >> $GITHUB_ENV
          # Remove 'v' prefix for version comparison
          echo "VERSION_NUMBER=${VERSION#v}" >> $GITHUB_ENV
          echo "BRANCH_NAME=${BRANCH_PREFIX}${{ github.event.inputs.terraform_version }}" >> $GITHUB_ENV

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Create and checkout new branch
        run: |
          git checkout -b "${{ env.BRANCH_NAME }}"
          echo "Created and switched to branch: ${{ env.BRANCH_NAME }}"

      - name: Update Terraform Provider Version in Makefile
        run: |
          # Update line 10 with the new version (remove 'v' prefix)
          sed -i "10s/export TERRAFORM_PROVIDER_VERSION := .*/export TERRAFORM_PROVIDER_VERSION := ${{ env.VERSION_NUMBER }}/" Makefile
          
          # Verify the change
          echo "Updated Makefile line 10:"
          sed -n '10p' Makefile
          
          # Check if the change was applied
          if grep -q "export TERRAFORM_PROVIDER_VERSION := ${{ env.VERSION_NUMBER }}" Makefile; then
            echo "‚úÖ Successfully updated TERRAFORM_PROVIDER_VERSION to ${{ env.VERSION_NUMBER }}"
          else
            echo "‚ùå Failed to update TERRAFORM_PROVIDER_VERSION"
            exit 1
          fi

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
          cache: true

      - name: Install goimports
        run: go install golang.org/x/tools/cmd/goimports@latest

      - name: Run make commands for provider generation
        run: |
          echo "Running make submodules..."
          make submodules
          
          echo "Running make vendor..."
          make vendor
          
          echo "Running make vendor.check..."
          make vendor.check
          
          echo "Running make generate..."
          make generate

      - name: Run go mod tidy
        run: go mod tidy

      - name: Run make reviewable and test
        run: |
          echo "Running make reviewable..."
          make reviewable
          
          echo "Running make test..."
          make test

      - name: Check for changes
        id: changes
        run: |
          if git diff --quiet; then
            echo "No changes detected after generation"
            echo "has_changes=false" >> $GITHUB_OUTPUT
          else
            echo "Changes detected after generation"
            echo "has_changes=true" >> $GITHUB_OUTPUT
          fi

      - name: Commit changes
        if: steps.changes.outputs.has_changes == 'true'
        run: |
          git add .
          git commit -m "Bump Terraform Provider version to ${{ env.VERSION }}
          
          - Updated TERRAFORM_PROVIDER_VERSION to ${{ env.VERSION_NUMBER }} in Makefile
          - Regenerated provider code and dependencies
          - Updated go modules and ran make reviewable test
          
          This automated update ensures compatibility with Terraform Provider ${{ env.VERSION }}"

      - name: Push branch
        if: steps.changes.outputs.has_changes == 'true'
        run: |
          git push origin "${{ env.BRANCH_NAME }}"
          echo "Pushed branch: ${{ env.BRANCH_NAME }}"

      - name: Create Pull Request
        if: steps.changes.outputs.has_changes == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const { data: pullRequest } = await github.rest.pulls.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `Bump Terraform Provider to ${{ env.VERSION }}`,
              head: '${{ env.BRANCH_NAME }}',
              base: 'main',
              body: `## üöÄ Terraform Provider Version Bump
              
              This PR automatically updates the Terraform Provider version to **${{ env.VERSION }}**.
              
              ### Changes Made:
              - ‚úÖ Updated \`TERRAFORM_PROVIDER_VERSION\` to \`${{ env.VERSION_NUMBER }}\` in Makefile (line 10)
              - ‚úÖ Ran \`go install golang.org/x/tools/cmd/goimports@latest\`
              - ‚úÖ Executed \`make submodules vendor vendor.check\`
              - ‚úÖ Regenerated provider with \`make generate\`
              - ‚úÖ Updated dependencies with \`go mod tidy\`
              - ‚úÖ Validated changes with \`make reviewable test\`
              
              ### Verification Steps:
              The following commands were executed successfully:
              \`\`\`bash
              go install golang.org/x/tools/cmd/goimports@latest
              make submodules vendor vendor.check
              make generate
              go mod tidy
              make reviewable test
              \`\`\`
              
              ### Review Checklist:
              - [ ] Verify the version update is correct
              - [ ] Check that all generated files are properly updated
              - [ ] Ensure tests pass
              - [ ] Validate no breaking changes introduced
              
              ---
              *This PR was automatically created by the \`Bump Terraform Provider Version\` workflow.*`
            });
            
            console.log(`Created PR #${pullRequest.number}: ${pullRequest.html_url}`);

      - name: Summary
        run: |
          if [[ "${{ steps.changes.outputs.has_changes }}" == "true" ]]; then
            echo "‚úÖ Successfully created branch '${{ env.BRANCH_NAME }}' and PR for Terraform Provider ${{ env.VERSION }}"
            echo "üîó Check the Pull Requests tab to review and merge the changes"
          else
            echo "‚ÑπÔ∏è  No changes were needed - the version might already be up to date"
          fi
