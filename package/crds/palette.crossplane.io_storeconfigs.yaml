---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  name: storeconfigs.palette.crossplane.io
spec:
  group: palette.crossplane.io
  names:
    categories:
    - crossplane
    - store
    - palette
    kind: StoreConfig
    listKind: StoreConfigList
    plural: storeconfigs
    singular: storeconfig
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    - jsonPath: .spec.type
      name: TYPE
      type: string
    - jsonPath: .spec.defaultScope
      name: DEFAULT-SCOPE
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: A StoreConfig configures how palette controller should store
          connection details.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: A StoreConfigSpec defines the desired state of a ProviderConfig.
            type: object
          status:
            description: A StoreConfigStatus represents the status of a StoreConfig.
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
