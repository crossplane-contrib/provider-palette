---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  name: customclouds.cluster.palette.m.crossplane.io
spec:
  group: cluster.palette.m.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - palette
    kind: CustomCloud
    listKind: CustomCloudList
    plural: customclouds
    singular: customcloud
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: CustomCloud is the Schema for the CustomClouds API. Resource
          for managing custom cloud clusters in Spectro Cloud through Palette.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: CustomCloudSpec defines the desired state of CustomCloud
            properties:
              forProvider:
                properties:
                  applySetting:
                    description: |-
                      (String) The setting to apply the cluster profile. DownloadAndInstall will download and install packs in one action. DownloadAndInstallLater will only download artifact and postpone install for later. Default value is DownloadAndInstall.
                      The setting to apply the cluster profile. `DownloadAndInstall` will download and install packs in one action. `DownloadAndInstallLater` will only download artifact and postpone install for later. Default value is `DownloadAndInstall`.
                    type: string
                  backupPolicy:
                    description: |-
                      (Block List, Max: 1) The backup policy for the cluster. If not specified, no backups will be taken. (see below for nested schema)
                      The backup policy for the cluster. If not specified, no backups will be taken.
                    items:
                      properties:
                        backupLocationId:
                          description: |-
                            (String) The ID of the backup location to use for the backup.
                            The ID of the backup location to use for the backup.
                          type: string
                        backupLocationIdRef:
                          description: Reference to a StorageLocation in backup to
                            populate backupLocationId.
                          properties:
                            name:
                              description: Name of the referenced object.
                              type: string
                            namespace:
                              description: Namespace of the referenced object
                              type: string
                            policy:
                              description: Policies for referencing.
                              properties:
                                resolution:
                                  default: Required
                                  description: |-
                                    Resolution specifies whether resolution of this reference is required.
                                    The default is 'Required', which means the reconcile will fail if the
                                    reference cannot be resolved. 'Optional' means this reference will be
                                    a no-op if it cannot be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: |-
                                    Resolve specifies when this reference should be resolved. The default
                                    is 'IfNotPresent', which will attempt to resolve the reference only when
                                    the corresponding field is not present. Use 'Always' to resolve the
                                    reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          required:
                          - name
                          type: object
                        backupLocationIdSelector:
                          description: Selector for a StorageLocation in backup to
                            populate backupLocationId.
                          properties:
                            matchControllerRef:
                              description: |-
                                MatchControllerRef ensures an object with the same controller reference
                                as the selecting object is selected.
                              type: boolean
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: MatchLabels ensures an object with matching
                                labels is selected.
                              type: object
                            namespace:
                              description: Namespace for the selector
                              type: string
                            policy:
                              description: Policies for selection.
                              properties:
                                resolution:
                                  default: Required
                                  description: |-
                                    Resolution specifies whether resolution of this reference is required.
                                    The default is 'Required', which means the reconcile will fail if the
                                    reference cannot be resolved. 'Optional' means this reference will be
                                    a no-op if it cannot be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: |-
                                    Resolve specifies when this reference should be resolved. The default
                                    is 'IfNotPresent', which will attempt to resolve the reference only when
                                    the corresponding field is not present. Use 'Always' to resolve the
                                    reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          type: object
                        clusterUids:
                          description: |-
                            (Set of String) The list of cluster UIDs to include in the backup. If include_all_clusters is set to true, then all clusters will be included.
                            The list of cluster UIDs to include in the backup. If `include_all_clusters` is set to `true`, then all clusters will be included.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                        expiryInHour:
                          description: |-
                            (Number) The number of hours after which the backup will be deleted. For example, if the expiry is set to 24, the backup will be deleted after 24 hours.
                            The number of hours after which the backup will be deleted. For example, if the expiry is set to 24, the backup will be deleted after 24 hours.
                          type: number
                        includeAllClusters:
                          description: |-
                            (Boolean) Whether to include all clusters in the backup. If set to false, only the clusters specified in cluster_uids will be included.
                            Whether to include all clusters in the backup. If set to false, only the clusters specified in `cluster_uids` will be included.
                          type: boolean
                        includeClusterResources:
                          description: |-
                            (Boolean) Indicates whether to include cluster resources in the backup. If set to false, only the cluster configuration and disks will be backed up. (Note: Starting with Palette version 4.6, the include_cluster_resources attribute will be deprecated, and a new attribute, include_cluster_resources_mode, will be introduced.)
                            Indicates whether to include cluster resources in the backup. If set to false, only the cluster configuration and disks will be backed up. (Note: Starting with Palette version 4.6, the include_cluster_resources attribute will be deprecated, and a new attribute, include_cluster_resources_mode, will be introduced.)
                          type: boolean
                        includeClusterResourcesMode:
                          description: |-
                            (String) Specifies whether to include the cluster resources in the backup. Supported values are always, never, and auto.
                            Specifies whether to include the cluster resources in the backup. Supported values are `always`, `never`, and `auto`.
                          type: string
                        includeDisks:
                          description: |-
                            (Boolean) Whether to include the disks in the backup. If set to false, only the cluster configuration will be backed up.
                            Whether to include the disks in the backup. If set to false, only the cluster configuration will be backed up.
                          type: boolean
                        namespaces:
                          description: |-
                            (Block List) The namespaces for the cluster. (see below for nested schema)
                            The list of Kubernetes namespaces to include in the backup. If not specified, all namespaces will be included.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                        prefix:
                          description: |-
                            -.
                            Prefix for the backup name. The backup name will be of the format <prefix>-<cluster-name>-<timestamp>.
                          type: string
                        schedule:
                          description: |-
                            (String) The schedule for the backup. The schedule is specified in cron format. For example, to run the backup every day at 1:00 AM, the schedule should be set to 0 1 * * *.
                            The schedule for the backup. The schedule is specified in cron format. For example, to run the backup every day at 1:00 AM, the schedule should be set to `0 1 * * *`.
                          type: string
                      type: object
                    type: array
                  cloud:
                    description: |-
                      (String) The cloud provider name.
                      The cloud provider name.
                    type: string
                  cloudAccountId:
                    description: |-
                      (String) The cloud account id to use for this cluster.
                      The cloud account id to use for this cluster.
                    type: string
                  cloudAccountIdRef:
                    description: Reference to a Custom in cloudaccount to populate
                      cloudAccountId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      namespace:
                        description: Namespace of the referenced object
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  cloudAccountIdSelector:
                    description: Selector for a Custom in cloudaccount to populate
                      cloudAccountId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      namespace:
                        description: Namespace for the selector
                        type: string
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  cloudConfig:
                    description: |-
                      (Block List, Min: 1, Max: 1) The Cloud environment configuration settings such as network parameters and encryption parameters that apply to this cluster. (see below for nested schema)
                      The Cloud environment configuration settings such as network parameters and encryption parameters that apply to this cluster.
                    items:
                      properties:
                        overrides:
                          additionalProperties:
                            type: string
                          description: |-
                            value pairs to override specific values in the YAML. Supports template variables, wildcard patterns, field pattern search, document-specific and global overrides.
                            Key-value pairs to override specific values in the YAML. Supports template variables, wildcard patterns, field pattern search, document-specific and global overrides.

                            Template variables: Simple identifiers that replace ${var}, {{var}}, or $var patterns in YAML (e.g., 'cluster_name' replaces ${cluster_name})
                            Wildcard patterns: Patterns starting with '*' that match field names containing the specified substring (e.g., '*cluster-api-autoscaler-node-group-max-size' matches any field containing 'cluster-api-autoscaler-node-group-max-size')
                            Field pattern search: Patterns that find and update ALL matching nested fields anywhere in YAML (e.g., 'replicas' updates any 'replicas' field, 'rootVolume.size' updates any 'rootVolume.size' pattern)
                            Document-specific syntax: 'Kind.path' (e.g., 'Cluster.metadata.labels', 'AWSCluster.spec.region')
                            Global path syntax: 'path' (e.g., 'metadata.name', 'spec.region')

                            Processing order: 1) Template substitution, 2) Wildcard patterns, 3) Field pattern search, 4) Path-based overrides. Supports dot notation for nested paths and array indexing with [index]. Values are strings but support JSON syntax for arrays/objects.
                          type: object
                          x-kubernetes-map-type: granular
                        values:
                          description: |-
                            (String) The values of the cloud config. The values are specified in YAML format.
                            The values of the cloud config. The values are specified in YAML format.
                          type: string
                      type: object
                    type: array
                  clusterProfile:
                    description: (Block List) (see below for nested schema)
                    items:
                      properties:
                        id:
                          description: |-
                            (String) The ID of this resource.
                            The ID of the cluster profile.
                          type: string
                        idRef:
                          description: Reference to a Profile in cluster to populate
                            id.
                          properties:
                            name:
                              description: Name of the referenced object.
                              type: string
                            namespace:
                              description: Namespace of the referenced object
                              type: string
                            policy:
                              description: Policies for referencing.
                              properties:
                                resolution:
                                  default: Required
                                  description: |-
                                    Resolution specifies whether resolution of this reference is required.
                                    The default is 'Required', which means the reconcile will fail if the
                                    reference cannot be resolved. 'Optional' means this reference will be
                                    a no-op if it cannot be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: |-
                                    Resolve specifies when this reference should be resolved. The default
                                    is 'IfNotPresent', which will attempt to resolve the reference only when
                                    the corresponding field is not present. Use 'Always' to resolve the
                                    reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          required:
                          - name
                          type: object
                        idSelector:
                          description: Selector for a Profile in cluster to populate
                            id.
                          properties:
                            matchControllerRef:
                              description: |-
                                MatchControllerRef ensures an object with the same controller reference
                                as the selecting object is selected.
                              type: boolean
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: MatchLabels ensures an object with matching
                                labels is selected.
                              type: object
                            namespace:
                              description: Namespace for the selector
                              type: string
                            policy:
                              description: Policies for selection.
                              properties:
                                resolution:
                                  default: Required
                                  description: |-
                                    Resolution specifies whether resolution of this reference is required.
                                    The default is 'Required', which means the reconcile will fail if the
                                    reference cannot be resolved. 'Optional' means this reference will be
                                    a no-op if it cannot be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: |-
                                    Resolve specifies when this reference should be resolved. The default
                                    is 'IfNotPresent', which will attempt to resolve the reference only when
                                    the corresponding field is not present. Use 'Always' to resolve the
                                    reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          type: object
                        pack:
                          description: |-
                            (Block List) For packs of type spectro, helm, and manifest, at least one pack must be specified. (see below for nested schema)
                            For packs of type `spectro`, `helm`, and `manifest`, at least one pack must be specified.
                          items:
                            properties:
                              manifest:
                                description: (Block List) (see below for nested schema)
                                items:
                                  properties:
                                    content:
                                      description: |-
                                        (String) The content of the manifest. The content is the YAML content of the manifest.
                                        The content of the manifest. The content is the YAML content of the manifest.
                                      type: string
                                    name:
                                      description: |-
                                        (String) The name of the cluster.
                                        The name of the manifest. The name must be unique within the pack.
                                      type: string
                                  type: object
                                type: array
                              name:
                                description: |-
                                  (String) The name of the cluster.
                                  The name of the pack. The name must be unique within the cluster profile.
                                type: string
                              registryUid:
                                description: |-
                                  (String) The registry UID of the pack. The registry UID is the unique identifier of the registry. This attribute is required if there is more than one registry that contains a pack with the same name. If uid is not provided, this field is required along with name and tag to resolve the pack UID internally.
                                  The registry UID of the pack. The registry UID is the unique identifier of the registry. This attribute is required if there is more than one registry that contains a pack with the same name. If `uid` is not provided, this field is required along with `name` and `tag` to resolve the pack UID internally.
                                type: string
                              tag:
                                description: |-
                                  (String) The tag of the pack. The tag is the version of the pack. This attribute is required if the pack type is spectro or helm. If uid is not provided, this field is required along with name and registry_uid to resolve the pack UID internally.
                                  The tag of the pack. The tag is the version of the pack. This attribute is required if the pack type is `spectro` or `helm`. If `uid` is not provided, this field is required along with `name` and `registry_uid` to resolve the pack UID internally.
                                type: string
                              type:
                                description: |-
                                  (String) The type of the pack. Allowed values are spectro, manifest, helm, or oci. The default value is spectro. If using an OCI registry for pack, set the type to oci.
                                  The type of the pack. Allowed values are `spectro`, `manifest`, `helm`, or `oci`. The default value is spectro. If using an OCI registry for pack, set the type to `oci`.
                                type: string
                              uid:
                                description: |-
                                  (String) The unique identifier of the pack. The value can be looked up using the spectrocloud_pack data source. This value is required if the pack type is spectro and for helm if the chart is from a public helm registry. If not provided, all of name, tag, and registry_uid must be specified to resolve the pack UID internally.
                                  The unique identifier of the pack. The value can be looked up using the [`spectrocloud_pack`](https://registry.io/providers/spectrocloud/spectrocloud/latest/docs/data-sources/pack) data source. This value is required if the pack type is `spectro` and for `helm` if the chart is from a public helm registry. If not provided, all of `name`, `tag`, and `registry_uid` must be specified to resolve the pack UID internally.
                                type: string
                              values:
                                description: |-
                                  (String) The values of the cloud config. The values are specified in YAML format.
                                  The values of the pack. The values are the configuration values of the pack. The values are specified in YAML format.
                                type: string
                            type: object
                          type: array
                        variables:
                          additionalProperties:
                            type: string
                          description: |-
                            value pairs. For example: priority = "5".
                            A map of cluster profile variables, specified as key-value pairs. For example: `priority = "5"`.
                          type: object
                          x-kubernetes-map-type: granular
                      type: object
                    type: array
                  clusterRbacBinding:
                    description: |-
                      (Block List) The RBAC binding for the cluster. (see below for nested schema)
                      The RBAC binding for the cluster.
                    items:
                      properties:
                        namespace:
                          description: |-
                            (String) The Kubernetes namespace of the RBAC binding. Required if 'type' is set to 'RoleBinding'.
                            The Kubernetes namespace of the RBAC binding. Required if 'type' is set to 'RoleBinding'.
                          type: string
                        role:
                          additionalProperties:
                            type: string
                          description: |-
                            (Map of String) The role of the RBAC binding. Required if 'type' is set to 'RoleBinding'.
                            The role of the RBAC binding. Required if 'type' is set to 'RoleBinding'.
                          type: object
                          x-kubernetes-map-type: granular
                        subjects:
                          description: (Block List) (see below for nested schema)
                          items:
                            properties:
                              name:
                                description: |-
                                  (String) The name of the cluster.
                                  The name of the subject. Required if 'type' is set to 'User' or 'Group'.
                                type: string
                              namespace:
                                description: |-
                                  (String) The Kubernetes namespace of the RBAC binding. Required if 'type' is set to 'RoleBinding'.
                                  The Kubernetes namespace of the subject. Required if 'type' is set to 'ServiceAccount'.
                                type: string
                              type:
                                description: |-
                                  (String) The type of the pack. Allowed values are spectro, manifest, helm, or oci. The default value is spectro. If using an OCI registry for pack, set the type to oci.
                                  The type of the subject. Can be one of the following values: `User`, `Group`, or `ServiceAccount`.
                                type: string
                            type: object
                          type: array
                        type:
                          description: |-
                            (String) The type of the pack. Allowed values are spectro, manifest, helm, or oci. The default value is spectro. If using an OCI registry for pack, set the type to oci.
                            The type of the RBAC binding. Can be one of the following values: `RoleBinding`, or `ClusterRoleBinding`.
                          type: string
                      type: object
                    type: array
                  context:
                    description: |-
                      (String) The context of the EKS cluster. Allowed values are project or tenant. Default is project. If  the project context is specified, the project name will sourced from the provider configuration parameter project_name.
                      The context of the EKS cluster. Allowed values are `project` or `tenant`. Default is `project`. If  the `project` context is specified, the project name will sourced from the provider configuration parameter [`project_name`](https://registry.io/providers/spectrocloud/spectrocloud/latest/docs#schema).
                    type: string
                  description:
                    description: |-
                      (String) The description of the cluster. Default value is empty string.
                      The description of the cluster. Default value is empty string.
                    type: string
                  forceDelete:
                    description: |-
                      (Boolean) If set to true, the cluster will be force deleted and user has to manually clean up the provisioned cloud resources.
                      If set to `true`, the cluster will be force deleted and user has to manually clean up the provisioned cloud resources.
                    type: boolean
                  forceDeleteDelay:
                    description: |-
                      (Number) Delay duration in minutes to before invoking cluster force delete. Default and minimum is 20.
                      Delay duration in minutes to before invoking cluster force delete. Default and minimum is 20.
                    type: number
                  locationConfig:
                    description: (Block List) (see below for nested schema)
                    items:
                      properties:
                        countryCode:
                          description: |-
                            (String) The country code of the country the cluster is located in.
                            The country code of the country the cluster is located in.
                          type: string
                        countryName:
                          description: |-
                            (String) The name of the country.
                            The name of the country.
                          type: string
                        latitude:
                          description: |-
                            (Number) The latitude coordinates value.
                            The latitude coordinates value.
                          type: number
                        longitude:
                          description: |-
                            (Number) The longitude coordinates value.
                            The longitude coordinates value.
                          type: number
                        regionCode:
                          description: |-
                            (String) The region code of where the cluster is located in.
                            The region code of where the cluster is located in.
                          type: string
                        regionName:
                          description: |-
                            (String) The name of the region.
                            The name of the region.
                          type: string
                      type: object
                    type: array
                  machinePool:
                    description: |-
                      (Block List, Min: 1) The machine pool configuration for the cluster. (see below for nested schema)
                      The machine pool configuration for the cluster.
                    items:
                      properties:
                        controlPlane:
                          description: |-
                            (Boolean) Whether this machine pool is a control plane. Defaults to false.
                            Whether this machine pool is a control plane. Defaults to `false`.
                          type: boolean
                        controlPlaneAsWorker:
                          description: |-
                            (Boolean) Whether this machine pool is a control plane and a worker. Defaults to false.
                            Whether this machine pool is a control plane and a worker. Defaults to `false`.
                          type: boolean
                        nodePoolConfig:
                          description: |-
                            (String) The values of the node pool config. The values are specified in YAML format.
                            The values of the node pool config. The values are specified in YAML format.
                          type: string
                        overrides:
                          additionalProperties:
                            type: string
                          description: |-
                            value pairs to override specific values in the YAML. Supports template variables, wildcard patterns, field pattern search, document-specific and global overrides.
                            Key-value pairs to override specific values in the node pool config YAML. Supports template variables, wildcard patterns, field pattern search, document-specific and global overrides.

                            Template variables: Simple identifiers that replace ${var}, {{var}}, or $var patterns in YAML (e.g., 'node_count' replaces ${node_count})
                            Wildcard patterns: Patterns starting with '*' that match field names containing the specified substring (e.g., '*cluster-api-autoscaler-node-group-max-size' matches any field containing 'cluster-api-autoscaler-node-group-max-size')
                            Field pattern search: Patterns that find and update ALL matching nested fields anywhere in YAML (e.g., 'replicas' updates any 'replicas' field, 'rootVolume.size' updates any 'rootVolume.size' pattern)
                            Document-specific syntax: 'Kind.path' (e.g., 'AWSMachineTemplate.spec.template.spec.instanceType')
                            Global path syntax: 'path' (e.g., 'metadata.name', 'spec.instanceType')

                            Processing order: 1) Template substitution, 2) Wildcard patterns, 3) Field pattern search, 4) Path-based overrides. Supports dot notation for nested paths and array indexing with [index]. Values are strings but support JSON syntax for arrays/objects.
                          type: object
                          x-kubernetes-map-type: granular
                        taints:
                          description: (Block List) (see below for nested schema)
                          items:
                            properties:
                              effect:
                                description: |-
                                  (String) The effect of the taint. Allowed values are: NoSchedule, PreferNoSchedule or NoExecute.
                                  The effect of the taint. Allowed values are: `NoSchedule`, `PreferNoSchedule` or `NoExecute`.
                                type: string
                              key:
                                description: |-
                                  (String) The key of the taint.
                                  The key of the taint.
                                type: string
                              value:
                                description: |-
                                  (String) The value of the taint.
                                  The value of the taint.
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                  name:
                    description: |-
                      (String) The name of the cluster.
                      The name of the cluster.
                    type: string
                  namespaces:
                    description: |-
                      (Block List) The namespaces for the cluster. (see below for nested schema)
                      The namespaces for the cluster.
                    items:
                      properties:
                        name:
                          description: |-
                            (String) The name of the cluster.
                            Name of the namespace. This is the name of the Kubernetes namespace in the cluster.
                          type: string
                        resourceAllocation:
                          additionalProperties:
                            type: string
                          description: |-
                            (Map of String) Resource allocation for the namespace. This is a map containing the resource type and the resource value. For example, {cpu_cores: '2', memory_MiB: '2048', gpu_limit: '1', gpu_provider: 'nvidia'}
                            Resource allocation for the namespace. This is a map containing the resource type and the resource value. For example, `{cpu_cores: '2', memory_MiB: '2048', gpu_limit: '1', gpu_provider: 'nvidia'}`
                          type: object
                          x-kubernetes-map-type: granular
                      type: object
                    type: array
                  osPatchAfter:
                    description: |-
                      01-02T15:04:05Z07:00
                      Date and time after which to patch cluster `RFC3339: 2006-01-02T15:04:05Z07:00`
                    type: string
                  osPatchOnBoot:
                    description: |-
                      (Boolean) Whether to apply OS patch on boot. Default is false.
                      Whether to apply OS patch on boot. Default is `false`.
                    type: boolean
                  osPatchSchedule:
                    description: |-
                      (String) The cron schedule for OS patching. This must be in the form of cron syntax. Ex: 0 0 * * *.
                      The cron schedule for OS patching. This must be in the form of cron syntax. Ex: `0 0 * * *`.
                    type: string
                  pauseAgentUpgrades:
                    description: |-
                      (String) The pause agent upgrades setting allows to control the automatic upgrade of the Palette component and agent for an individual cluster. The default value is unlock, meaning upgrades occur automatically. Setting it to lock pauses automatic agent upgrades for the cluster.
                      The pause agent upgrades setting allows to control the automatic upgrade of the Palette component and agent for an individual cluster. The default value is `unlock`, meaning upgrades occur automatically. Setting it to `lock` pauses automatic agent upgrades for the cluster.
                    type: string
                  scanPolicy:
                    description: |-
                      (Block List, Max: 1) The scan policy for the cluster. (see below for nested schema)
                      The scan policy for the cluster.
                    items:
                      properties:
                        configurationScanSchedule:
                          description: |-
                            (String) The schedule for configuration scan.
                            The schedule for configuration scan.
                          type: string
                        conformanceScanSchedule:
                          description: |-
                            (String) The schedule for conformance scan.
                            The schedule for conformance scan.
                          type: string
                        penetrationScanSchedule:
                          description: |-
                            (String) The schedule for penetration scan.
                            The schedule for penetration scan.
                          type: string
                      type: object
                    type: array
                  skipCompletion:
                    description: |-
                      (Boolean) If true, the cluster will be created asynchronously. Default value is false.
                      If `true`, the cluster will be created asynchronously. Default value is `false`.
                    type: boolean
                  tags:
                    description: |-
                      (Set of String) A list of tags to be applied to the cluster. Tags must be in the form of key:value.
                      A list of tags to be applied to the cluster. Tags must be in the form of `key:value`.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  applySetting:
                    description: |-
                      (String) The setting to apply the cluster profile. DownloadAndInstall will download and install packs in one action. DownloadAndInstallLater will only download artifact and postpone install for later. Default value is DownloadAndInstall.
                      The setting to apply the cluster profile. `DownloadAndInstall` will download and install packs in one action. `DownloadAndInstallLater` will only download artifact and postpone install for later. Default value is `DownloadAndInstall`.
                    type: string
                  backupPolicy:
                    description: |-
                      (Block List, Max: 1) The backup policy for the cluster. If not specified, no backups will be taken. (see below for nested schema)
                      The backup policy for the cluster. If not specified, no backups will be taken.
                    items:
                      properties:
                        backupLocationId:
                          description: |-
                            (String) The ID of the backup location to use for the backup.
                            The ID of the backup location to use for the backup.
                          type: string
                        backupLocationIdRef:
                          description: Reference to a StorageLocation in backup to
                            populate backupLocationId.
                          properties:
                            name:
                              description: Name of the referenced object.
                              type: string
                            namespace:
                              description: Namespace of the referenced object
                              type: string
                            policy:
                              description: Policies for referencing.
                              properties:
                                resolution:
                                  default: Required
                                  description: |-
                                    Resolution specifies whether resolution of this reference is required.
                                    The default is 'Required', which means the reconcile will fail if the
                                    reference cannot be resolved. 'Optional' means this reference will be
                                    a no-op if it cannot be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: |-
                                    Resolve specifies when this reference should be resolved. The default
                                    is 'IfNotPresent', which will attempt to resolve the reference only when
                                    the corresponding field is not present. Use 'Always' to resolve the
                                    reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          required:
                          - name
                          type: object
                        backupLocationIdSelector:
                          description: Selector for a StorageLocation in backup to
                            populate backupLocationId.
                          properties:
                            matchControllerRef:
                              description: |-
                                MatchControllerRef ensures an object with the same controller reference
                                as the selecting object is selected.
                              type: boolean
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: MatchLabels ensures an object with matching
                                labels is selected.
                              type: object
                            namespace:
                              description: Namespace for the selector
                              type: string
                            policy:
                              description: Policies for selection.
                              properties:
                                resolution:
                                  default: Required
                                  description: |-
                                    Resolution specifies whether resolution of this reference is required.
                                    The default is 'Required', which means the reconcile will fail if the
                                    reference cannot be resolved. 'Optional' means this reference will be
                                    a no-op if it cannot be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: |-
                                    Resolve specifies when this reference should be resolved. The default
                                    is 'IfNotPresent', which will attempt to resolve the reference only when
                                    the corresponding field is not present. Use 'Always' to resolve the
                                    reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          type: object
                        clusterUids:
                          description: |-
                            (Set of String) The list of cluster UIDs to include in the backup. If include_all_clusters is set to true, then all clusters will be included.
                            The list of cluster UIDs to include in the backup. If `include_all_clusters` is set to `true`, then all clusters will be included.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                        expiryInHour:
                          description: |-
                            (Number) The number of hours after which the backup will be deleted. For example, if the expiry is set to 24, the backup will be deleted after 24 hours.
                            The number of hours after which the backup will be deleted. For example, if the expiry is set to 24, the backup will be deleted after 24 hours.
                          type: number
                        includeAllClusters:
                          description: |-
                            (Boolean) Whether to include all clusters in the backup. If set to false, only the clusters specified in cluster_uids will be included.
                            Whether to include all clusters in the backup. If set to false, only the clusters specified in `cluster_uids` will be included.
                          type: boolean
                        includeClusterResources:
                          description: |-
                            (Boolean) Indicates whether to include cluster resources in the backup. If set to false, only the cluster configuration and disks will be backed up. (Note: Starting with Palette version 4.6, the include_cluster_resources attribute will be deprecated, and a new attribute, include_cluster_resources_mode, will be introduced.)
                            Indicates whether to include cluster resources in the backup. If set to false, only the cluster configuration and disks will be backed up. (Note: Starting with Palette version 4.6, the include_cluster_resources attribute will be deprecated, and a new attribute, include_cluster_resources_mode, will be introduced.)
                          type: boolean
                        includeClusterResourcesMode:
                          description: |-
                            (String) Specifies whether to include the cluster resources in the backup. Supported values are always, never, and auto.
                            Specifies whether to include the cluster resources in the backup. Supported values are `always`, `never`, and `auto`.
                          type: string
                        includeDisks:
                          description: |-
                            (Boolean) Whether to include the disks in the backup. If set to false, only the cluster configuration will be backed up.
                            Whether to include the disks in the backup. If set to false, only the cluster configuration will be backed up.
                          type: boolean
                        namespaces:
                          description: |-
                            (Block List) The namespaces for the cluster. (see below for nested schema)
                            The list of Kubernetes namespaces to include in the backup. If not specified, all namespaces will be included.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                        prefix:
                          description: |-
                            -.
                            Prefix for the backup name. The backup name will be of the format <prefix>-<cluster-name>-<timestamp>.
                          type: string
                        schedule:
                          description: |-
                            (String) The schedule for the backup. The schedule is specified in cron format. For example, to run the backup every day at 1:00 AM, the schedule should be set to 0 1 * * *.
                            The schedule for the backup. The schedule is specified in cron format. For example, to run the backup every day at 1:00 AM, the schedule should be set to `0 1 * * *`.
                          type: string
                      type: object
                    type: array
                  cloud:
                    description: |-
                      (String) The cloud provider name.
                      The cloud provider name.
                    type: string
                  cloudAccountId:
                    description: |-
                      (String) The cloud account id to use for this cluster.
                      The cloud account id to use for this cluster.
                    type: string
                  cloudAccountIdRef:
                    description: Reference to a Custom in cloudaccount to populate
                      cloudAccountId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      namespace:
                        description: Namespace of the referenced object
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  cloudAccountIdSelector:
                    description: Selector for a Custom in cloudaccount to populate
                      cloudAccountId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      namespace:
                        description: Namespace for the selector
                        type: string
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  cloudConfig:
                    description: |-
                      (Block List, Min: 1, Max: 1) The Cloud environment configuration settings such as network parameters and encryption parameters that apply to this cluster. (see below for nested schema)
                      The Cloud environment configuration settings such as network parameters and encryption parameters that apply to this cluster.
                    items:
                      properties:
                        overrides:
                          additionalProperties:
                            type: string
                          description: |-
                            value pairs to override specific values in the YAML. Supports template variables, wildcard patterns, field pattern search, document-specific and global overrides.
                            Key-value pairs to override specific values in the YAML. Supports template variables, wildcard patterns, field pattern search, document-specific and global overrides.

                            Template variables: Simple identifiers that replace ${var}, {{var}}, or $var patterns in YAML (e.g., 'cluster_name' replaces ${cluster_name})
                            Wildcard patterns: Patterns starting with '*' that match field names containing the specified substring (e.g., '*cluster-api-autoscaler-node-group-max-size' matches any field containing 'cluster-api-autoscaler-node-group-max-size')
                            Field pattern search: Patterns that find and update ALL matching nested fields anywhere in YAML (e.g., 'replicas' updates any 'replicas' field, 'rootVolume.size' updates any 'rootVolume.size' pattern)
                            Document-specific syntax: 'Kind.path' (e.g., 'Cluster.metadata.labels', 'AWSCluster.spec.region')
                            Global path syntax: 'path' (e.g., 'metadata.name', 'spec.region')

                            Processing order: 1) Template substitution, 2) Wildcard patterns, 3) Field pattern search, 4) Path-based overrides. Supports dot notation for nested paths and array indexing with [index]. Values are strings but support JSON syntax for arrays/objects.
                          type: object
                          x-kubernetes-map-type: granular
                        values:
                          description: |-
                            (String) The values of the cloud config. The values are specified in YAML format.
                            The values of the cloud config. The values are specified in YAML format.
                          type: string
                      type: object
                    type: array
                  clusterProfile:
                    description: (Block List) (see below for nested schema)
                    items:
                      properties:
                        id:
                          description: |-
                            (String) The ID of this resource.
                            The ID of the cluster profile.
                          type: string
                        idRef:
                          description: Reference to a Profile in cluster to populate
                            id.
                          properties:
                            name:
                              description: Name of the referenced object.
                              type: string
                            namespace:
                              description: Namespace of the referenced object
                              type: string
                            policy:
                              description: Policies for referencing.
                              properties:
                                resolution:
                                  default: Required
                                  description: |-
                                    Resolution specifies whether resolution of this reference is required.
                                    The default is 'Required', which means the reconcile will fail if the
                                    reference cannot be resolved. 'Optional' means this reference will be
                                    a no-op if it cannot be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: |-
                                    Resolve specifies when this reference should be resolved. The default
                                    is 'IfNotPresent', which will attempt to resolve the reference only when
                                    the corresponding field is not present. Use 'Always' to resolve the
                                    reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          required:
                          - name
                          type: object
                        idSelector:
                          description: Selector for a Profile in cluster to populate
                            id.
                          properties:
                            matchControllerRef:
                              description: |-
                                MatchControllerRef ensures an object with the same controller reference
                                as the selecting object is selected.
                              type: boolean
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: MatchLabels ensures an object with matching
                                labels is selected.
                              type: object
                            namespace:
                              description: Namespace for the selector
                              type: string
                            policy:
                              description: Policies for selection.
                              properties:
                                resolution:
                                  default: Required
                                  description: |-
                                    Resolution specifies whether resolution of this reference is required.
                                    The default is 'Required', which means the reconcile will fail if the
                                    reference cannot be resolved. 'Optional' means this reference will be
                                    a no-op if it cannot be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: |-
                                    Resolve specifies when this reference should be resolved. The default
                                    is 'IfNotPresent', which will attempt to resolve the reference only when
                                    the corresponding field is not present. Use 'Always' to resolve the
                                    reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          type: object
                        pack:
                          description: |-
                            (Block List) For packs of type spectro, helm, and manifest, at least one pack must be specified. (see below for nested schema)
                            For packs of type `spectro`, `helm`, and `manifest`, at least one pack must be specified.
                          items:
                            properties:
                              manifest:
                                description: (Block List) (see below for nested schema)
                                items:
                                  properties:
                                    content:
                                      description: |-
                                        (String) The content of the manifest. The content is the YAML content of the manifest.
                                        The content of the manifest. The content is the YAML content of the manifest.
                                      type: string
                                    name:
                                      description: |-
                                        (String) The name of the cluster.
                                        The name of the manifest. The name must be unique within the pack.
                                      type: string
                                  type: object
                                type: array
                              name:
                                description: |-
                                  (String) The name of the cluster.
                                  The name of the pack. The name must be unique within the cluster profile.
                                type: string
                              registryUid:
                                description: |-
                                  (String) The registry UID of the pack. The registry UID is the unique identifier of the registry. This attribute is required if there is more than one registry that contains a pack with the same name. If uid is not provided, this field is required along with name and tag to resolve the pack UID internally.
                                  The registry UID of the pack. The registry UID is the unique identifier of the registry. This attribute is required if there is more than one registry that contains a pack with the same name. If `uid` is not provided, this field is required along with `name` and `tag` to resolve the pack UID internally.
                                type: string
                              tag:
                                description: |-
                                  (String) The tag of the pack. The tag is the version of the pack. This attribute is required if the pack type is spectro or helm. If uid is not provided, this field is required along with name and registry_uid to resolve the pack UID internally.
                                  The tag of the pack. The tag is the version of the pack. This attribute is required if the pack type is `spectro` or `helm`. If `uid` is not provided, this field is required along with `name` and `registry_uid` to resolve the pack UID internally.
                                type: string
                              type:
                                description: |-
                                  (String) The type of the pack. Allowed values are spectro, manifest, helm, or oci. The default value is spectro. If using an OCI registry for pack, set the type to oci.
                                  The type of the pack. Allowed values are `spectro`, `manifest`, `helm`, or `oci`. The default value is spectro. If using an OCI registry for pack, set the type to `oci`.
                                type: string
                              uid:
                                description: |-
                                  (String) The unique identifier of the pack. The value can be looked up using the spectrocloud_pack data source. This value is required if the pack type is spectro and for helm if the chart is from a public helm registry. If not provided, all of name, tag, and registry_uid must be specified to resolve the pack UID internally.
                                  The unique identifier of the pack. The value can be looked up using the [`spectrocloud_pack`](https://registry.io/providers/spectrocloud/spectrocloud/latest/docs/data-sources/pack) data source. This value is required if the pack type is `spectro` and for `helm` if the chart is from a public helm registry. If not provided, all of `name`, `tag`, and `registry_uid` must be specified to resolve the pack UID internally.
                                type: string
                              values:
                                description: |-
                                  (String) The values of the cloud config. The values are specified in YAML format.
                                  The values of the pack. The values are the configuration values of the pack. The values are specified in YAML format.
                                type: string
                            type: object
                          type: array
                        variables:
                          additionalProperties:
                            type: string
                          description: |-
                            value pairs. For example: priority = "5".
                            A map of cluster profile variables, specified as key-value pairs. For example: `priority = "5"`.
                          type: object
                          x-kubernetes-map-type: granular
                      type: object
                    type: array
                  clusterRbacBinding:
                    description: |-
                      (Block List) The RBAC binding for the cluster. (see below for nested schema)
                      The RBAC binding for the cluster.
                    items:
                      properties:
                        namespace:
                          description: |-
                            (String) The Kubernetes namespace of the RBAC binding. Required if 'type' is set to 'RoleBinding'.
                            The Kubernetes namespace of the RBAC binding. Required if 'type' is set to 'RoleBinding'.
                          type: string
                        role:
                          additionalProperties:
                            type: string
                          description: |-
                            (Map of String) The role of the RBAC binding. Required if 'type' is set to 'RoleBinding'.
                            The role of the RBAC binding. Required if 'type' is set to 'RoleBinding'.
                          type: object
                          x-kubernetes-map-type: granular
                        subjects:
                          description: (Block List) (see below for nested schema)
                          items:
                            properties:
                              name:
                                description: |-
                                  (String) The name of the cluster.
                                  The name of the subject. Required if 'type' is set to 'User' or 'Group'.
                                type: string
                              namespace:
                                description: |-
                                  (String) The Kubernetes namespace of the RBAC binding. Required if 'type' is set to 'RoleBinding'.
                                  The Kubernetes namespace of the subject. Required if 'type' is set to 'ServiceAccount'.
                                type: string
                              type:
                                description: |-
                                  (String) The type of the pack. Allowed values are spectro, manifest, helm, or oci. The default value is spectro. If using an OCI registry for pack, set the type to oci.
                                  The type of the subject. Can be one of the following values: `User`, `Group`, or `ServiceAccount`.
                                type: string
                            type: object
                          type: array
                        type:
                          description: |-
                            (String) The type of the pack. Allowed values are spectro, manifest, helm, or oci. The default value is spectro. If using an OCI registry for pack, set the type to oci.
                            The type of the RBAC binding. Can be one of the following values: `RoleBinding`, or `ClusterRoleBinding`.
                          type: string
                      type: object
                    type: array
                  context:
                    description: |-
                      (String) The context of the EKS cluster. Allowed values are project or tenant. Default is project. If  the project context is specified, the project name will sourced from the provider configuration parameter project_name.
                      The context of the EKS cluster. Allowed values are `project` or `tenant`. Default is `project`. If  the `project` context is specified, the project name will sourced from the provider configuration parameter [`project_name`](https://registry.io/providers/spectrocloud/spectrocloud/latest/docs#schema).
                    type: string
                  description:
                    description: |-
                      (String) The description of the cluster. Default value is empty string.
                      The description of the cluster. Default value is empty string.
                    type: string
                  forceDelete:
                    description: |-
                      (Boolean) If set to true, the cluster will be force deleted and user has to manually clean up the provisioned cloud resources.
                      If set to `true`, the cluster will be force deleted and user has to manually clean up the provisioned cloud resources.
                    type: boolean
                  forceDeleteDelay:
                    description: |-
                      (Number) Delay duration in minutes to before invoking cluster force delete. Default and minimum is 20.
                      Delay duration in minutes to before invoking cluster force delete. Default and minimum is 20.
                    type: number
                  locationConfig:
                    description: (Block List) (see below for nested schema)
                    items:
                      properties:
                        countryCode:
                          description: |-
                            (String) The country code of the country the cluster is located in.
                            The country code of the country the cluster is located in.
                          type: string
                        countryName:
                          description: |-
                            (String) The name of the country.
                            The name of the country.
                          type: string
                        latitude:
                          description: |-
                            (Number) The latitude coordinates value.
                            The latitude coordinates value.
                          type: number
                        longitude:
                          description: |-
                            (Number) The longitude coordinates value.
                            The longitude coordinates value.
                          type: number
                        regionCode:
                          description: |-
                            (String) The region code of where the cluster is located in.
                            The region code of where the cluster is located in.
                          type: string
                        regionName:
                          description: |-
                            (String) The name of the region.
                            The name of the region.
                          type: string
                      type: object
                    type: array
                  machinePool:
                    description: |-
                      (Block List, Min: 1) The machine pool configuration for the cluster. (see below for nested schema)
                      The machine pool configuration for the cluster.
                    items:
                      properties:
                        controlPlane:
                          description: |-
                            (Boolean) Whether this machine pool is a control plane. Defaults to false.
                            Whether this machine pool is a control plane. Defaults to `false`.
                          type: boolean
                        controlPlaneAsWorker:
                          description: |-
                            (Boolean) Whether this machine pool is a control plane and a worker. Defaults to false.
                            Whether this machine pool is a control plane and a worker. Defaults to `false`.
                          type: boolean
                        nodePoolConfig:
                          description: |-
                            (String) The values of the node pool config. The values are specified in YAML format.
                            The values of the node pool config. The values are specified in YAML format.
                          type: string
                        overrides:
                          additionalProperties:
                            type: string
                          description: |-
                            value pairs to override specific values in the YAML. Supports template variables, wildcard patterns, field pattern search, document-specific and global overrides.
                            Key-value pairs to override specific values in the node pool config YAML. Supports template variables, wildcard patterns, field pattern search, document-specific and global overrides.

                            Template variables: Simple identifiers that replace ${var}, {{var}}, or $var patterns in YAML (e.g., 'node_count' replaces ${node_count})
                            Wildcard patterns: Patterns starting with '*' that match field names containing the specified substring (e.g., '*cluster-api-autoscaler-node-group-max-size' matches any field containing 'cluster-api-autoscaler-node-group-max-size')
                            Field pattern search: Patterns that find and update ALL matching nested fields anywhere in YAML (e.g., 'replicas' updates any 'replicas' field, 'rootVolume.size' updates any 'rootVolume.size' pattern)
                            Document-specific syntax: 'Kind.path' (e.g., 'AWSMachineTemplate.spec.template.spec.instanceType')
                            Global path syntax: 'path' (e.g., 'metadata.name', 'spec.instanceType')

                            Processing order: 1) Template substitution, 2) Wildcard patterns, 3) Field pattern search, 4) Path-based overrides. Supports dot notation for nested paths and array indexing with [index]. Values are strings but support JSON syntax for arrays/objects.
                          type: object
                          x-kubernetes-map-type: granular
                        taints:
                          description: (Block List) (see below for nested schema)
                          items:
                            properties:
                              effect:
                                description: |-
                                  (String) The effect of the taint. Allowed values are: NoSchedule, PreferNoSchedule or NoExecute.
                                  The effect of the taint. Allowed values are: `NoSchedule`, `PreferNoSchedule` or `NoExecute`.
                                type: string
                              key:
                                description: |-
                                  (String) The key of the taint.
                                  The key of the taint.
                                type: string
                              value:
                                description: |-
                                  (String) The value of the taint.
                                  The value of the taint.
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                  name:
                    description: |-
                      (String) The name of the cluster.
                      The name of the cluster.
                    type: string
                  namespaces:
                    description: |-
                      (Block List) The namespaces for the cluster. (see below for nested schema)
                      The namespaces for the cluster.
                    items:
                      properties:
                        name:
                          description: |-
                            (String) The name of the cluster.
                            Name of the namespace. This is the name of the Kubernetes namespace in the cluster.
                          type: string
                        resourceAllocation:
                          additionalProperties:
                            type: string
                          description: |-
                            (Map of String) Resource allocation for the namespace. This is a map containing the resource type and the resource value. For example, {cpu_cores: '2', memory_MiB: '2048', gpu_limit: '1', gpu_provider: 'nvidia'}
                            Resource allocation for the namespace. This is a map containing the resource type and the resource value. For example, `{cpu_cores: '2', memory_MiB: '2048', gpu_limit: '1', gpu_provider: 'nvidia'}`
                          type: object
                          x-kubernetes-map-type: granular
                      type: object
                    type: array
                  osPatchAfter:
                    description: |-
                      01-02T15:04:05Z07:00
                      Date and time after which to patch cluster `RFC3339: 2006-01-02T15:04:05Z07:00`
                    type: string
                  osPatchOnBoot:
                    description: |-
                      (Boolean) Whether to apply OS patch on boot. Default is false.
                      Whether to apply OS patch on boot. Default is `false`.
                    type: boolean
                  osPatchSchedule:
                    description: |-
                      (String) The cron schedule for OS patching. This must be in the form of cron syntax. Ex: 0 0 * * *.
                      The cron schedule for OS patching. This must be in the form of cron syntax. Ex: `0 0 * * *`.
                    type: string
                  pauseAgentUpgrades:
                    description: |-
                      (String) The pause agent upgrades setting allows to control the automatic upgrade of the Palette component and agent for an individual cluster. The default value is unlock, meaning upgrades occur automatically. Setting it to lock pauses automatic agent upgrades for the cluster.
                      The pause agent upgrades setting allows to control the automatic upgrade of the Palette component and agent for an individual cluster. The default value is `unlock`, meaning upgrades occur automatically. Setting it to `lock` pauses automatic agent upgrades for the cluster.
                    type: string
                  scanPolicy:
                    description: |-
                      (Block List, Max: 1) The scan policy for the cluster. (see below for nested schema)
                      The scan policy for the cluster.
                    items:
                      properties:
                        configurationScanSchedule:
                          description: |-
                            (String) The schedule for configuration scan.
                            The schedule for configuration scan.
                          type: string
                        conformanceScanSchedule:
                          description: |-
                            (String) The schedule for conformance scan.
                            The schedule for conformance scan.
                          type: string
                        penetrationScanSchedule:
                          description: |-
                            (String) The schedule for penetration scan.
                            The schedule for penetration scan.
                          type: string
                      type: object
                    type: array
                  skipCompletion:
                    description: |-
                      (Boolean) If true, the cluster will be created asynchronously. Default value is false.
                      If `true`, the cluster will be created asynchronously. Default value is `false`.
                    type: boolean
                  tags:
                    description: |-
                      (Set of String) A list of tags to be applied to the cluster. Tags must be in the form of key:value.
                      A list of tags to be applied to the cluster. Tags must be in the form of `key:value`.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  kind: ClusterProviderConfig
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  kind:
                    description: Kind of the referenced object.
                    type: string
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - kind
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                required:
                - name
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.cloud is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.cloud)
                || (has(self.initProvider) && has(self.initProvider.cloud))'
            - message: spec.forProvider.cloudConfig is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.cloudConfig)
                || (has(self.initProvider) && has(self.initProvider.cloudConfig))'
            - message: spec.forProvider.machinePool is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.machinePool)
                || (has(self.initProvider) && has(self.initProvider.machinePool))'
            - message: spec.forProvider.name is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.name)
                || (has(self.initProvider) && has(self.initProvider.name))'
          status:
            description: CustomCloudStatus defines the observed state of CustomCloud.
            properties:
              atProvider:
                properties:
                  adminKubeConfig:
                    description: |-
                      config for the cluster. This can be used to connect to the cluster using kubectl, With admin privilege.
                      Admin Kube-config for the cluster. This can be used to connect to the cluster using `kubectl`, With admin privilege.
                    type: string
                  applySetting:
                    description: |-
                      (String) The setting to apply the cluster profile. DownloadAndInstall will download and install packs in one action. DownloadAndInstallLater will only download artifact and postpone install for later. Default value is DownloadAndInstall.
                      The setting to apply the cluster profile. `DownloadAndInstall` will download and install packs in one action. `DownloadAndInstallLater` will only download artifact and postpone install for later. Default value is `DownloadAndInstall`.
                    type: string
                  backupPolicy:
                    description: |-
                      (Block List, Max: 1) The backup policy for the cluster. If not specified, no backups will be taken. (see below for nested schema)
                      The backup policy for the cluster. If not specified, no backups will be taken.
                    items:
                      properties:
                        backupLocationId:
                          description: |-
                            (String) The ID of the backup location to use for the backup.
                            The ID of the backup location to use for the backup.
                          type: string
                        clusterUids:
                          description: |-
                            (Set of String) The list of cluster UIDs to include in the backup. If include_all_clusters is set to true, then all clusters will be included.
                            The list of cluster UIDs to include in the backup. If `include_all_clusters` is set to `true`, then all clusters will be included.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                        expiryInHour:
                          description: |-
                            (Number) The number of hours after which the backup will be deleted. For example, if the expiry is set to 24, the backup will be deleted after 24 hours.
                            The number of hours after which the backup will be deleted. For example, if the expiry is set to 24, the backup will be deleted after 24 hours.
                          type: number
                        includeAllClusters:
                          description: |-
                            (Boolean) Whether to include all clusters in the backup. If set to false, only the clusters specified in cluster_uids will be included.
                            Whether to include all clusters in the backup. If set to false, only the clusters specified in `cluster_uids` will be included.
                          type: boolean
                        includeClusterResources:
                          description: |-
                            (Boolean) Indicates whether to include cluster resources in the backup. If set to false, only the cluster configuration and disks will be backed up. (Note: Starting with Palette version 4.6, the include_cluster_resources attribute will be deprecated, and a new attribute, include_cluster_resources_mode, will be introduced.)
                            Indicates whether to include cluster resources in the backup. If set to false, only the cluster configuration and disks will be backed up. (Note: Starting with Palette version 4.6, the include_cluster_resources attribute will be deprecated, and a new attribute, include_cluster_resources_mode, will be introduced.)
                          type: boolean
                        includeClusterResourcesMode:
                          description: |-
                            (String) Specifies whether to include the cluster resources in the backup. Supported values are always, never, and auto.
                            Specifies whether to include the cluster resources in the backup. Supported values are `always`, `never`, and `auto`.
                          type: string
                        includeDisks:
                          description: |-
                            (Boolean) Whether to include the disks in the backup. If set to false, only the cluster configuration will be backed up.
                            Whether to include the disks in the backup. If set to false, only the cluster configuration will be backed up.
                          type: boolean
                        namespaces:
                          description: |-
                            (Block List) The namespaces for the cluster. (see below for nested schema)
                            The list of Kubernetes namespaces to include in the backup. If not specified, all namespaces will be included.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                        prefix:
                          description: |-
                            -.
                            Prefix for the backup name. The backup name will be of the format <prefix>-<cluster-name>-<timestamp>.
                          type: string
                        schedule:
                          description: |-
                            (String) The schedule for the backup. The schedule is specified in cron format. For example, to run the backup every day at 1:00 AM, the schedule should be set to 0 1 * * *.
                            The schedule for the backup. The schedule is specified in cron format. For example, to run the backup every day at 1:00 AM, the schedule should be set to `0 1 * * *`.
                          type: string
                      type: object
                    type: array
                  cloud:
                    description: |-
                      (String) The cloud provider name.
                      The cloud provider name.
                    type: string
                  cloudAccountId:
                    description: |-
                      (String) The cloud account id to use for this cluster.
                      The cloud account id to use for this cluster.
                    type: string
                  cloudConfig:
                    description: |-
                      (Block List, Min: 1, Max: 1) The Cloud environment configuration settings such as network parameters and encryption parameters that apply to this cluster. (see below for nested schema)
                      The Cloud environment configuration settings such as network parameters and encryption parameters that apply to this cluster.
                    items:
                      properties:
                        overrides:
                          additionalProperties:
                            type: string
                          description: |-
                            value pairs to override specific values in the YAML. Supports template variables, wildcard patterns, field pattern search, document-specific and global overrides.
                            Key-value pairs to override specific values in the YAML. Supports template variables, wildcard patterns, field pattern search, document-specific and global overrides.

                            Template variables: Simple identifiers that replace ${var}, {{var}}, or $var patterns in YAML (e.g., 'cluster_name' replaces ${cluster_name})
                            Wildcard patterns: Patterns starting with '*' that match field names containing the specified substring (e.g., '*cluster-api-autoscaler-node-group-max-size' matches any field containing 'cluster-api-autoscaler-node-group-max-size')
                            Field pattern search: Patterns that find and update ALL matching nested fields anywhere in YAML (e.g., 'replicas' updates any 'replicas' field, 'rootVolume.size' updates any 'rootVolume.size' pattern)
                            Document-specific syntax: 'Kind.path' (e.g., 'Cluster.metadata.labels', 'AWSCluster.spec.region')
                            Global path syntax: 'path' (e.g., 'metadata.name', 'spec.region')

                            Processing order: 1) Template substitution, 2) Wildcard patterns, 3) Field pattern search, 4) Path-based overrides. Supports dot notation for nested paths and array indexing with [index]. Values are strings but support JSON syntax for arrays/objects.
                          type: object
                          x-kubernetes-map-type: granular
                        values:
                          description: |-
                            (String) The values of the cloud config. The values are specified in YAML format.
                            The values of the cloud config. The values are specified in YAML format.
                          type: string
                      type: object
                    type: array
                  cloudConfigId:
                    description: (String, Deprecated)
                    type: string
                  clusterProfile:
                    description: (Block List) (see below for nested schema)
                    items:
                      properties:
                        id:
                          description: |-
                            (String) The ID of this resource.
                            The ID of the cluster profile.
                          type: string
                        pack:
                          description: |-
                            (Block List) For packs of type spectro, helm, and manifest, at least one pack must be specified. (see below for nested schema)
                            For packs of type `spectro`, `helm`, and `manifest`, at least one pack must be specified.
                          items:
                            properties:
                              manifest:
                                description: (Block List) (see below for nested schema)
                                items:
                                  properties:
                                    content:
                                      description: |-
                                        (String) The content of the manifest. The content is the YAML content of the manifest.
                                        The content of the manifest. The content is the YAML content of the manifest.
                                      type: string
                                    name:
                                      description: |-
                                        (String) The name of the cluster.
                                        The name of the manifest. The name must be unique within the pack.
                                      type: string
                                    uid:
                                      description: (String) The unique identifier
                                        of the pack. The value can be looked up using
                                        the spectrocloud_pack data source. This value
                                        is required if the pack type is spectro and
                                        for helm if the chart is from a public helm
                                        registry. If not provided, all of name, tag,
                                        and registry_uid must be specified to resolve
                                        the pack UID internally.
                                      type: string
                                  type: object
                                type: array
                              name:
                                description: |-
                                  (String) The name of the cluster.
                                  The name of the pack. The name must be unique within the cluster profile.
                                type: string
                              registryUid:
                                description: |-
                                  (String) The registry UID of the pack. The registry UID is the unique identifier of the registry. This attribute is required if there is more than one registry that contains a pack with the same name. If uid is not provided, this field is required along with name and tag to resolve the pack UID internally.
                                  The registry UID of the pack. The registry UID is the unique identifier of the registry. This attribute is required if there is more than one registry that contains a pack with the same name. If `uid` is not provided, this field is required along with `name` and `tag` to resolve the pack UID internally.
                                type: string
                              tag:
                                description: |-
                                  (String) The tag of the pack. The tag is the version of the pack. This attribute is required if the pack type is spectro or helm. If uid is not provided, this field is required along with name and registry_uid to resolve the pack UID internally.
                                  The tag of the pack. The tag is the version of the pack. This attribute is required if the pack type is `spectro` or `helm`. If `uid` is not provided, this field is required along with `name` and `registry_uid` to resolve the pack UID internally.
                                type: string
                              type:
                                description: |-
                                  (String) The type of the pack. Allowed values are spectro, manifest, helm, or oci. The default value is spectro. If using an OCI registry for pack, set the type to oci.
                                  The type of the pack. Allowed values are `spectro`, `manifest`, `helm`, or `oci`. The default value is spectro. If using an OCI registry for pack, set the type to `oci`.
                                type: string
                              uid:
                                description: |-
                                  (String) The unique identifier of the pack. The value can be looked up using the spectrocloud_pack data source. This value is required if the pack type is spectro and for helm if the chart is from a public helm registry. If not provided, all of name, tag, and registry_uid must be specified to resolve the pack UID internally.
                                  The unique identifier of the pack. The value can be looked up using the [`spectrocloud_pack`](https://registry.io/providers/spectrocloud/spectrocloud/latest/docs/data-sources/pack) data source. This value is required if the pack type is `spectro` and for `helm` if the chart is from a public helm registry. If not provided, all of `name`, `tag`, and `registry_uid` must be specified to resolve the pack UID internally.
                                type: string
                              values:
                                description: |-
                                  (String) The values of the cloud config. The values are specified in YAML format.
                                  The values of the pack. The values are the configuration values of the pack. The values are specified in YAML format.
                                type: string
                            type: object
                          type: array
                        variables:
                          additionalProperties:
                            type: string
                          description: |-
                            value pairs. For example: priority = "5".
                            A map of cluster profile variables, specified as key-value pairs. For example: `priority = "5"`.
                          type: object
                          x-kubernetes-map-type: granular
                      type: object
                    type: array
                  clusterRbacBinding:
                    description: |-
                      (Block List) The RBAC binding for the cluster. (see below for nested schema)
                      The RBAC binding for the cluster.
                    items:
                      properties:
                        namespace:
                          description: |-
                            (String) The Kubernetes namespace of the RBAC binding. Required if 'type' is set to 'RoleBinding'.
                            The Kubernetes namespace of the RBAC binding. Required if 'type' is set to 'RoleBinding'.
                          type: string
                        role:
                          additionalProperties:
                            type: string
                          description: |-
                            (Map of String) The role of the RBAC binding. Required if 'type' is set to 'RoleBinding'.
                            The role of the RBAC binding. Required if 'type' is set to 'RoleBinding'.
                          type: object
                          x-kubernetes-map-type: granular
                        subjects:
                          description: (Block List) (see below for nested schema)
                          items:
                            properties:
                              name:
                                description: |-
                                  (String) The name of the cluster.
                                  The name of the subject. Required if 'type' is set to 'User' or 'Group'.
                                type: string
                              namespace:
                                description: |-
                                  (String) The Kubernetes namespace of the RBAC binding. Required if 'type' is set to 'RoleBinding'.
                                  The Kubernetes namespace of the subject. Required if 'type' is set to 'ServiceAccount'.
                                type: string
                              type:
                                description: |-
                                  (String) The type of the pack. Allowed values are spectro, manifest, helm, or oci. The default value is spectro. If using an OCI registry for pack, set the type to oci.
                                  The type of the subject. Can be one of the following values: `User`, `Group`, or `ServiceAccount`.
                                type: string
                            type: object
                          type: array
                        type:
                          description: |-
                            (String) The type of the pack. Allowed values are spectro, manifest, helm, or oci. The default value is spectro. If using an OCI registry for pack, set the type to oci.
                            The type of the RBAC binding. Can be one of the following values: `RoleBinding`, or `ClusterRoleBinding`.
                          type: string
                      type: object
                    type: array
                  context:
                    description: |-
                      (String) The context of the EKS cluster. Allowed values are project or tenant. Default is project. If  the project context is specified, the project name will sourced from the provider configuration parameter project_name.
                      The context of the EKS cluster. Allowed values are `project` or `tenant`. Default is `project`. If  the `project` context is specified, the project name will sourced from the provider configuration parameter [`project_name`](https://registry.io/providers/spectrocloud/spectrocloud/latest/docs#schema).
                    type: string
                  description:
                    description: |-
                      (String) The description of the cluster. Default value is empty string.
                      The description of the cluster. Default value is empty string.
                    type: string
                  forceDelete:
                    description: |-
                      (Boolean) If set to true, the cluster will be force deleted and user has to manually clean up the provisioned cloud resources.
                      If set to `true`, the cluster will be force deleted and user has to manually clean up the provisioned cloud resources.
                    type: boolean
                  forceDeleteDelay:
                    description: |-
                      (Number) Delay duration in minutes to before invoking cluster force delete. Default and minimum is 20.
                      Delay duration in minutes to before invoking cluster force delete. Default and minimum is 20.
                    type: number
                  id:
                    description: (String) The ID of this resource.
                    type: string
                  kubeconfig:
                    description: |-
                      (String) Kubeconfig for the cluster. This can be used to connect to the cluster using kubectl.
                      Kubeconfig for the cluster. This can be used to connect to the cluster using `kubectl`.
                    type: string
                  locationConfig:
                    description: (Block List) (see below for nested schema)
                    items:
                      properties:
                        countryCode:
                          description: |-
                            (String) The country code of the country the cluster is located in.
                            The country code of the country the cluster is located in.
                          type: string
                        countryName:
                          description: |-
                            (String) The name of the country.
                            The name of the country.
                          type: string
                        latitude:
                          description: |-
                            (Number) The latitude coordinates value.
                            The latitude coordinates value.
                          type: number
                        longitude:
                          description: |-
                            (Number) The longitude coordinates value.
                            The longitude coordinates value.
                          type: number
                        regionCode:
                          description: |-
                            (String) The region code of where the cluster is located in.
                            The region code of where the cluster is located in.
                          type: string
                        regionName:
                          description: |-
                            (String) The name of the region.
                            The name of the region.
                          type: string
                      type: object
                    type: array
                  machinePool:
                    description: |-
                      (Block List, Min: 1) The machine pool configuration for the cluster. (see below for nested schema)
                      The machine pool configuration for the cluster.
                    items:
                      properties:
                        controlPlane:
                          description: |-
                            (Boolean) Whether this machine pool is a control plane. Defaults to false.
                            Whether this machine pool is a control plane. Defaults to `false`.
                          type: boolean
                        controlPlaneAsWorker:
                          description: |-
                            (Boolean) Whether this machine pool is a control plane and a worker. Defaults to false.
                            Whether this machine pool is a control plane and a worker. Defaults to `false`.
                          type: boolean
                        count:
                          description: |-
                            (Number) Number of nodes in the machine pool. This will be derived from the replica value in the 'node_pool_config'.
                            Number of nodes in the machine pool. This will be derived from the replica value in the 'node_pool_config'.
                          type: number
                        name:
                          description: |-
                            (String) The name of the cluster.
                            The name of the machine pool. This will be derived from the name value in the `node_pool_config`.
                          type: string
                        nodePoolConfig:
                          description: |-
                            (String) The values of the node pool config. The values are specified in YAML format.
                            The values of the node pool config. The values are specified in YAML format.
                          type: string
                        overrides:
                          additionalProperties:
                            type: string
                          description: |-
                            value pairs to override specific values in the YAML. Supports template variables, wildcard patterns, field pattern search, document-specific and global overrides.
                            Key-value pairs to override specific values in the node pool config YAML. Supports template variables, wildcard patterns, field pattern search, document-specific and global overrides.

                            Template variables: Simple identifiers that replace ${var}, {{var}}, or $var patterns in YAML (e.g., 'node_count' replaces ${node_count})
                            Wildcard patterns: Patterns starting with '*' that match field names containing the specified substring (e.g., '*cluster-api-autoscaler-node-group-max-size' matches any field containing 'cluster-api-autoscaler-node-group-max-size')
                            Field pattern search: Patterns that find and update ALL matching nested fields anywhere in YAML (e.g., 'replicas' updates any 'replicas' field, 'rootVolume.size' updates any 'rootVolume.size' pattern)
                            Document-specific syntax: 'Kind.path' (e.g., 'AWSMachineTemplate.spec.template.spec.instanceType')
                            Global path syntax: 'path' (e.g., 'metadata.name', 'spec.instanceType')

                            Processing order: 1) Template substitution, 2) Wildcard patterns, 3) Field pattern search, 4) Path-based overrides. Supports dot notation for nested paths and array indexing with [index]. Values are strings but support JSON syntax for arrays/objects.
                          type: object
                          x-kubernetes-map-type: granular
                        taints:
                          description: (Block List) (see below for nested schema)
                          items:
                            properties:
                              effect:
                                description: |-
                                  (String) The effect of the taint. Allowed values are: NoSchedule, PreferNoSchedule or NoExecute.
                                  The effect of the taint. Allowed values are: `NoSchedule`, `PreferNoSchedule` or `NoExecute`.
                                type: string
                              key:
                                description: |-
                                  (String) The key of the taint.
                                  The key of the taint.
                                type: string
                              value:
                                description: |-
                                  (String) The value of the taint.
                                  The value of the taint.
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                  name:
                    description: |-
                      (String) The name of the cluster.
                      The name of the cluster.
                    type: string
                  namespaces:
                    description: |-
                      (Block List) The namespaces for the cluster. (see below for nested schema)
                      The namespaces for the cluster.
                    items:
                      properties:
                        name:
                          description: |-
                            (String) The name of the cluster.
                            Name of the namespace. This is the name of the Kubernetes namespace in the cluster.
                          type: string
                        resourceAllocation:
                          additionalProperties:
                            type: string
                          description: |-
                            (Map of String) Resource allocation for the namespace. This is a map containing the resource type and the resource value. For example, {cpu_cores: '2', memory_MiB: '2048', gpu_limit: '1', gpu_provider: 'nvidia'}
                            Resource allocation for the namespace. This is a map containing the resource type and the resource value. For example, `{cpu_cores: '2', memory_MiB: '2048', gpu_limit: '1', gpu_provider: 'nvidia'}`
                          type: object
                          x-kubernetes-map-type: granular
                      type: object
                    type: array
                  osPatchAfter:
                    description: |-
                      01-02T15:04:05Z07:00
                      Date and time after which to patch cluster `RFC3339: 2006-01-02T15:04:05Z07:00`
                    type: string
                  osPatchOnBoot:
                    description: |-
                      (Boolean) Whether to apply OS patch on boot. Default is false.
                      Whether to apply OS patch on boot. Default is `false`.
                    type: boolean
                  osPatchSchedule:
                    description: |-
                      (String) The cron schedule for OS patching. This must be in the form of cron syntax. Ex: 0 0 * * *.
                      The cron schedule for OS patching. This must be in the form of cron syntax. Ex: `0 0 * * *`.
                    type: string
                  pauseAgentUpgrades:
                    description: |-
                      (String) The pause agent upgrades setting allows to control the automatic upgrade of the Palette component and agent for an individual cluster. The default value is unlock, meaning upgrades occur automatically. Setting it to lock pauses automatic agent upgrades for the cluster.
                      The pause agent upgrades setting allows to control the automatic upgrade of the Palette component and agent for an individual cluster. The default value is `unlock`, meaning upgrades occur automatically. Setting it to `lock` pauses automatic agent upgrades for the cluster.
                    type: string
                  scanPolicy:
                    description: |-
                      (Block List, Max: 1) The scan policy for the cluster. (see below for nested schema)
                      The scan policy for the cluster.
                    items:
                      properties:
                        configurationScanSchedule:
                          description: |-
                            (String) The schedule for configuration scan.
                            The schedule for configuration scan.
                          type: string
                        conformanceScanSchedule:
                          description: |-
                            (String) The schedule for conformance scan.
                            The schedule for conformance scan.
                          type: string
                        penetrationScanSchedule:
                          description: |-
                            (String) The schedule for penetration scan.
                            The schedule for penetration scan.
                          type: string
                      type: object
                    type: array
                  skipCompletion:
                    description: |-
                      (Boolean) If true, the cluster will be created asynchronously. Default value is false.
                      If `true`, the cluster will be created asynchronously. Default value is `false`.
                    type: boolean
                  tags:
                    description: |-
                      (Set of String) A list of tags to be applied to the cluster. Tags must be in the form of key:value.
                      A list of tags to be applied to the cluster. Tags must be in the form of `key:value`.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
