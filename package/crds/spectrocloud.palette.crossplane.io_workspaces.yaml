---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: workspaces.spectrocloud.palette.crossplane.io
spec:
  group: spectrocloud.palette.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - palette
    kind: Workspace
    listKind: WorkspaceList
    plural: workspaces
    singular: workspace
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Workspace is the Schema for the Workspaces API. <no value>
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: WorkspaceSpec defines the desired state of Workspace
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  backupPolicy:
                    items:
                      properties:
                        backupLocationId:
                          description: The ID of the backup location to use for the
                            backup.
                          type: string
                        clusterUids:
                          description: The list of cluster UIDs to include in the
                            backup. If `include_all_clusters` is set to `true`, then
                            all clusters will be included.
                          items:
                            type: string
                          type: array
                        expiryInHour:
                          description: The number of hours after which the backup
                            will be deleted. For example, if the expiry is set to
                            24, the backup will be deleted after 24 hours.
                          type: number
                        includeAllClusters:
                          description: Whether to include all clusters in the backup.
                            If set to false, only the clusters specified in `cluster_uids`
                            will be included.
                          type: boolean
                        includeClusterResources:
                          description: Whether to include the cluster resources in
                            the backup. If set to false, only the cluster configuration
                            and disks will be backed up.
                          type: boolean
                        includeDisks:
                          description: Whether to include the disks in the backup.
                            If set to false, only the cluster configuration will be
                            backed up.
                          type: boolean
                        namespaces:
                          description: The list of Kubernetes namespaces to include
                            in the backup. If not specified, all namespaces will be
                            included.
                          items:
                            type: string
                          type: array
                        prefix:
                          description: Prefix for the backup name. The backup name
                            will be of the format <prefix>-<cluster-name>-<timestamp>.
                          type: string
                        schedule:
                          description: The schedule for the backup. The schedule is
                            specified in cron format. For example, to run the backup
                            every day at 1:00 AM, the schedule should be set to `0
                            1 * * *`.
                          type: string
                      required:
                      - backupLocationId
                      - expiryInHour
                      - prefix
                      - schedule
                      type: object
                    type: array
                  clusterRbacBinding:
                    items:
                      properties:
                        namespace:
                          description: The Kubernetes namespace of the RBAC binding.
                            Required if 'type' is set to 'RoleBinding'.
                          type: string
                        role:
                          additionalProperties:
                            type: string
                          description: The role of the RBAC binding. Required if 'type'
                            is set to 'RoleBinding'.
                          type: object
                        subjects:
                          items:
                            properties:
                              name:
                                description: The name of the subject. Required if
                                  'type' is set to 'User' or 'Group'.
                                type: string
                              namespace:
                                description: The Kubernetes namespace of the subject.
                                  Required if 'type' is set to 'ServiceAccount'.
                                type: string
                              type:
                                description: 'The type of the subject. Can be one
                                  of the following values: `User`, `Group`, or `ServiceAccount`.'
                                type: string
                            required:
                            - name
                            - type
                            type: object
                          type: array
                        type:
                          description: 'The type of the RBAC binding. Can be one of
                            the following values: `RoleBinding`, or `ClusterRoleBinding`.'
                          type: string
                      required:
                      - type
                      type: object
                    type: array
                  clusters:
                    items:
                      properties:
                        uid:
                          type: string
                      required:
                      - uid
                      type: object
                    type: array
                  description:
                    type: string
                  namespaces:
                    items:
                      properties:
                        imagesBlacklist:
                          description: List of images to disallow for the namespace.
                            For example, `['nginx:latest', 'redis:latest']`
                          items:
                            type: string
                          type: array
                        name:
                          description: Name of the namespace. This is the name of
                            the Kubernetes namespace in the cluster.
                          type: string
                        resourceAllocation:
                          additionalProperties:
                            type: string
                          description: 'Resource allocation for the namespace. This
                            is a map containing the resource type and the resource
                            value. For example, `{cpu_cores: ''2'', memory_MiB: ''2048''}`'
                          type: object
                      required:
                      - name
                      - resourceAllocation
                      type: object
                    type: array
                  tags:
                    items:
                      type: string
                    type: array
                required:
                - clusters
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: WorkspaceStatus defines the observed state of Workspace.
            properties:
              atProvider:
                properties:
                  id:
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
