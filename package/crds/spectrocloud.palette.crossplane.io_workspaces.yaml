---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: workspaces.spectrocloud.palette.crossplane.io
spec:
  group: spectrocloud.palette.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - palette
    kind: Workspace
    listKind: WorkspaceList
    plural: workspaces
    singular: workspace
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Workspace is the Schema for the Workspaces API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: WorkspaceSpec defines the desired state of Workspace
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  backupPolicy:
                    description: |-
                      (Block List, Max: 1) The backup policy for the cluster. If not specified, no backups will be taken. (see below for nested schema)
                      The backup policy for the cluster. If not specified, no backups will be taken.
                    items:
                      properties:
                        backupLocationId:
                          description: |-
                            (String) The ID of the backup location to use for the backup.
                            The ID of the backup location to use for the backup.
                          type: string
                        clusterUids:
                          description: |-
                            (Set of String) The list of cluster UIDs to include in the backup. If include_all_clusters is set to true, then all clusters will be included.
                            The list of cluster UIDs to include in the backup. If `include_all_clusters` is set to `true`, then all clusters will be included.
                          items:
                            type: string
                          type: array
                        expiryInHour:
                          description: |-
                            (Number) The number of hours after which the backup will be deleted. For example, if the expiry is set to 24, the backup will be deleted after 24 hours.
                            The number of hours after which the backup will be deleted. For example, if the expiry is set to 24, the backup will be deleted after 24 hours.
                          type: number
                        includeAllClusters:
                          description: |-
                            (Boolean) Whether to include all clusters in the backup. If set to false, only the clusters specified in cluster_uids will be included.
                            Whether to include all clusters in the backup. If set to false, only the clusters specified in `cluster_uids` will be included.
                          type: boolean
                        includeClusterResources:
                          description: |-
                            (Boolean) Whether to include the cluster resources in the backup. If set to false, only the cluster configuration and disks will be backed up.
                            Whether to include the cluster resources in the backup. If set to false, only the cluster configuration and disks will be backed up.
                          type: boolean
                        includeDisks:
                          description: |-
                            (Boolean) Whether to include the disks in the backup. If set to false, only the cluster configuration will be backed up.
                            Whether to include the disks in the backup. If set to false, only the cluster configuration will be backed up.
                          type: boolean
                        namespaces:
                          description: |-
                            (Block List) The namespaces for the cluster. (see below for nested schema)
                            The list of Kubernetes namespaces to include in the backup. If not specified, all namespaces will be included.
                          items:
                            type: string
                          type: array
                        prefix:
                          description: |-
                            -.
                            Prefix for the backup name. The backup name will be of the format <prefix>-<cluster-name>-<timestamp>.
                          type: string
                        schedule:
                          description: |-
                            (String) The schedule for the backup. The schedule is specified in cron format. For example, to run the backup every day at 1:00 AM, the schedule should be set to 0 1 * * *.
                            The schedule for the backup. The schedule is specified in cron format. For example, to run the backup every day at 1:00 AM, the schedule should be set to `0 1 * * *`.
                          type: string
                      type: object
                    type: array
                  clusterRbacBinding:
                    description: |-
                      (Block List) The RBAC binding for the cluster. (see below for nested schema)
                      The RBAC binding for the cluster.
                    items:
                      properties:
                        namespace:
                          description: |-
                            (String) The Kubernetes namespace of the RBAC binding. Required if 'type' is set to 'RoleBinding'.
                            The Kubernetes namespace of the RBAC binding. Required if 'type' is set to 'RoleBinding'.
                          type: string
                        role:
                          additionalProperties:
                            type: string
                          description: |-
                            (Map of String) The role of the RBAC binding. Required if 'type' is set to 'RoleBinding'.
                            The role of the RBAC binding. Required if 'type' is set to 'RoleBinding'.
                          type: object
                        subjects:
                          description: (Block List) (see below for nested schema)
                          items:
                            properties:
                              name:
                                description: |-
                                  (String)
                                  The name of the subject. Required if 'type' is set to 'User' or 'Group'.
                                type: string
                              namespace:
                                description: |-
                                  (String) The Kubernetes namespace of the RBAC binding. Required if 'type' is set to 'RoleBinding'.
                                  The Kubernetes namespace of the subject. Required if 'type' is set to 'ServiceAccount'.
                                type: string
                              type:
                                description: |-
                                  (String) The type of the RBAC binding. Can be one of the following values: RoleBinding, or ClusterRoleBinding.
                                  The type of the subject. Can be one of the following values: `User`, `Group`, or `ServiceAccount`.
                                type: string
                            type: object
                          type: array
                        type:
                          description: |-
                            (String) The type of the RBAC binding. Can be one of the following values: RoleBinding, or ClusterRoleBinding.
                            The type of the RBAC binding. Can be one of the following values: `RoleBinding`, or `ClusterRoleBinding`.
                          type: string
                      type: object
                    type: array
                  clusters:
                    description: '(Block Set, Min: 1) (see below for nested schema)'
                    items:
                      properties:
                        uid:
                          description: (String)
                          type: string
                      type: object
                    type: array
                  description:
                    description: (String)
                    type: string
                  namespaces:
                    description: |-
                      (Block List) The namespaces for the cluster. (see below for nested schema)
                      The namespaces for the cluster.
                    items:
                      properties:
                        imagesBlacklist:
                          description: |-
                            (List of String) List of images to disallow for the namespace. For example, ['nginx:latest', 'redis:latest']
                            List of images to disallow for the namespace. For example, `['nginx:latest', 'redis:latest']`
                          items:
                            type: string
                          type: array
                        name:
                          description: |-
                            (String)
                            Name of the namespace. This is the name of the Kubernetes namespace in the cluster.
                          type: string
                        resourceAllocation:
                          additionalProperties:
                            type: string
                          description: |-
                            (Map of String) Resource allocation for the namespace. This is a map containing the resource type and the resource value. For example, {cpu_cores: '2', memory_MiB: '2048'}
                            Resource allocation for the namespace. This is a map containing the resource type and the resource value. For example, `{cpu_cores: '2', memory_MiB: '2048'}`
                          type: object
                      type: object
                    type: array
                  tags:
                    description: (Set of String)
                    items:
                      type: string
                    type: array
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  backupPolicy:
                    description: |-
                      (Block List, Max: 1) The backup policy for the cluster. If not specified, no backups will be taken. (see below for nested schema)
                      The backup policy for the cluster. If not specified, no backups will be taken.
                    items:
                      properties:
                        backupLocationId:
                          description: |-
                            (String) The ID of the backup location to use for the backup.
                            The ID of the backup location to use for the backup.
                          type: string
                        clusterUids:
                          description: |-
                            (Set of String) The list of cluster UIDs to include in the backup. If include_all_clusters is set to true, then all clusters will be included.
                            The list of cluster UIDs to include in the backup. If `include_all_clusters` is set to `true`, then all clusters will be included.
                          items:
                            type: string
                          type: array
                        expiryInHour:
                          description: |-
                            (Number) The number of hours after which the backup will be deleted. For example, if the expiry is set to 24, the backup will be deleted after 24 hours.
                            The number of hours after which the backup will be deleted. For example, if the expiry is set to 24, the backup will be deleted after 24 hours.
                          type: number
                        includeAllClusters:
                          description: |-
                            (Boolean) Whether to include all clusters in the backup. If set to false, only the clusters specified in cluster_uids will be included.
                            Whether to include all clusters in the backup. If set to false, only the clusters specified in `cluster_uids` will be included.
                          type: boolean
                        includeClusterResources:
                          description: |-
                            (Boolean) Whether to include the cluster resources in the backup. If set to false, only the cluster configuration and disks will be backed up.
                            Whether to include the cluster resources in the backup. If set to false, only the cluster configuration and disks will be backed up.
                          type: boolean
                        includeDisks:
                          description: |-
                            (Boolean) Whether to include the disks in the backup. If set to false, only the cluster configuration will be backed up.
                            Whether to include the disks in the backup. If set to false, only the cluster configuration will be backed up.
                          type: boolean
                        namespaces:
                          description: |-
                            (Block List) The namespaces for the cluster. (see below for nested schema)
                            The list of Kubernetes namespaces to include in the backup. If not specified, all namespaces will be included.
                          items:
                            type: string
                          type: array
                        prefix:
                          description: |-
                            -.
                            Prefix for the backup name. The backup name will be of the format <prefix>-<cluster-name>-<timestamp>.
                          type: string
                        schedule:
                          description: |-
                            (String) The schedule for the backup. The schedule is specified in cron format. For example, to run the backup every day at 1:00 AM, the schedule should be set to 0 1 * * *.
                            The schedule for the backup. The schedule is specified in cron format. For example, to run the backup every day at 1:00 AM, the schedule should be set to `0 1 * * *`.
                          type: string
                      type: object
                    type: array
                  clusterRbacBinding:
                    description: |-
                      (Block List) The RBAC binding for the cluster. (see below for nested schema)
                      The RBAC binding for the cluster.
                    items:
                      properties:
                        namespace:
                          description: |-
                            (String) The Kubernetes namespace of the RBAC binding. Required if 'type' is set to 'RoleBinding'.
                            The Kubernetes namespace of the RBAC binding. Required if 'type' is set to 'RoleBinding'.
                          type: string
                        role:
                          additionalProperties:
                            type: string
                          description: |-
                            (Map of String) The role of the RBAC binding. Required if 'type' is set to 'RoleBinding'.
                            The role of the RBAC binding. Required if 'type' is set to 'RoleBinding'.
                          type: object
                        subjects:
                          description: (Block List) (see below for nested schema)
                          items:
                            properties:
                              name:
                                description: |-
                                  (String)
                                  The name of the subject. Required if 'type' is set to 'User' or 'Group'.
                                type: string
                              namespace:
                                description: |-
                                  (String) The Kubernetes namespace of the RBAC binding. Required if 'type' is set to 'RoleBinding'.
                                  The Kubernetes namespace of the subject. Required if 'type' is set to 'ServiceAccount'.
                                type: string
                              type:
                                description: |-
                                  (String) The type of the RBAC binding. Can be one of the following values: RoleBinding, or ClusterRoleBinding.
                                  The type of the subject. Can be one of the following values: `User`, `Group`, or `ServiceAccount`.
                                type: string
                            type: object
                          type: array
                        type:
                          description: |-
                            (String) The type of the RBAC binding. Can be one of the following values: RoleBinding, or ClusterRoleBinding.
                            The type of the RBAC binding. Can be one of the following values: `RoleBinding`, or `ClusterRoleBinding`.
                          type: string
                      type: object
                    type: array
                  clusters:
                    description: '(Block Set, Min: 1) (see below for nested schema)'
                    items:
                      properties:
                        uid:
                          description: (String)
                          type: string
                      type: object
                    type: array
                  description:
                    description: (String)
                    type: string
                  namespaces:
                    description: |-
                      (Block List) The namespaces for the cluster. (see below for nested schema)
                      The namespaces for the cluster.
                    items:
                      properties:
                        imagesBlacklist:
                          description: |-
                            (List of String) List of images to disallow for the namespace. For example, ['nginx:latest', 'redis:latest']
                            List of images to disallow for the namespace. For example, `['nginx:latest', 'redis:latest']`
                          items:
                            type: string
                          type: array
                        name:
                          description: |-
                            (String)
                            Name of the namespace. This is the name of the Kubernetes namespace in the cluster.
                          type: string
                        resourceAllocation:
                          additionalProperties:
                            type: string
                          description: |-
                            (Map of String) Resource allocation for the namespace. This is a map containing the resource type and the resource value. For example, {cpu_cores: '2', memory_MiB: '2048'}
                            Resource allocation for the namespace. This is a map containing the resource type and the resource value. For example, `{cpu_cores: '2', memory_MiB: '2048'}`
                          type: object
                      type: object
                    type: array
                  tags:
                    description: (Set of String)
                    items:
                      type: string
                    type: array
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.clusters is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.clusters)
                || (has(self.initProvider) && has(self.initProvider.clusters))'
          status:
            description: WorkspaceStatus defines the observed state of Workspace.
            properties:
              atProvider:
                properties:
                  backupPolicy:
                    description: |-
                      (Block List, Max: 1) The backup policy for the cluster. If not specified, no backups will be taken. (see below for nested schema)
                      The backup policy for the cluster. If not specified, no backups will be taken.
                    items:
                      properties:
                        backupLocationId:
                          description: |-
                            (String) The ID of the backup location to use for the backup.
                            The ID of the backup location to use for the backup.
                          type: string
                        clusterUids:
                          description: |-
                            (Set of String) The list of cluster UIDs to include in the backup. If include_all_clusters is set to true, then all clusters will be included.
                            The list of cluster UIDs to include in the backup. If `include_all_clusters` is set to `true`, then all clusters will be included.
                          items:
                            type: string
                          type: array
                        expiryInHour:
                          description: |-
                            (Number) The number of hours after which the backup will be deleted. For example, if the expiry is set to 24, the backup will be deleted after 24 hours.
                            The number of hours after which the backup will be deleted. For example, if the expiry is set to 24, the backup will be deleted after 24 hours.
                          type: number
                        includeAllClusters:
                          description: |-
                            (Boolean) Whether to include all clusters in the backup. If set to false, only the clusters specified in cluster_uids will be included.
                            Whether to include all clusters in the backup. If set to false, only the clusters specified in `cluster_uids` will be included.
                          type: boolean
                        includeClusterResources:
                          description: |-
                            (Boolean) Whether to include the cluster resources in the backup. If set to false, only the cluster configuration and disks will be backed up.
                            Whether to include the cluster resources in the backup. If set to false, only the cluster configuration and disks will be backed up.
                          type: boolean
                        includeDisks:
                          description: |-
                            (Boolean) Whether to include the disks in the backup. If set to false, only the cluster configuration will be backed up.
                            Whether to include the disks in the backup. If set to false, only the cluster configuration will be backed up.
                          type: boolean
                        namespaces:
                          description: |-
                            (Block List) The namespaces for the cluster. (see below for nested schema)
                            The list of Kubernetes namespaces to include in the backup. If not specified, all namespaces will be included.
                          items:
                            type: string
                          type: array
                        prefix:
                          description: |-
                            -.
                            Prefix for the backup name. The backup name will be of the format <prefix>-<cluster-name>-<timestamp>.
                          type: string
                        schedule:
                          description: |-
                            (String) The schedule for the backup. The schedule is specified in cron format. For example, to run the backup every day at 1:00 AM, the schedule should be set to 0 1 * * *.
                            The schedule for the backup. The schedule is specified in cron format. For example, to run the backup every day at 1:00 AM, the schedule should be set to `0 1 * * *`.
                          type: string
                      type: object
                    type: array
                  clusterRbacBinding:
                    description: |-
                      (Block List) The RBAC binding for the cluster. (see below for nested schema)
                      The RBAC binding for the cluster.
                    items:
                      properties:
                        namespace:
                          description: |-
                            (String) The Kubernetes namespace of the RBAC binding. Required if 'type' is set to 'RoleBinding'.
                            The Kubernetes namespace of the RBAC binding. Required if 'type' is set to 'RoleBinding'.
                          type: string
                        role:
                          additionalProperties:
                            type: string
                          description: |-
                            (Map of String) The role of the RBAC binding. Required if 'type' is set to 'RoleBinding'.
                            The role of the RBAC binding. Required if 'type' is set to 'RoleBinding'.
                          type: object
                        subjects:
                          description: (Block List) (see below for nested schema)
                          items:
                            properties:
                              name:
                                description: |-
                                  (String)
                                  The name of the subject. Required if 'type' is set to 'User' or 'Group'.
                                type: string
                              namespace:
                                description: |-
                                  (String) The Kubernetes namespace of the RBAC binding. Required if 'type' is set to 'RoleBinding'.
                                  The Kubernetes namespace of the subject. Required if 'type' is set to 'ServiceAccount'.
                                type: string
                              type:
                                description: |-
                                  (String) The type of the RBAC binding. Can be one of the following values: RoleBinding, or ClusterRoleBinding.
                                  The type of the subject. Can be one of the following values: `User`, `Group`, or `ServiceAccount`.
                                type: string
                            type: object
                          type: array
                        type:
                          description: |-
                            (String) The type of the RBAC binding. Can be one of the following values: RoleBinding, or ClusterRoleBinding.
                            The type of the RBAC binding. Can be one of the following values: `RoleBinding`, or `ClusterRoleBinding`.
                          type: string
                      type: object
                    type: array
                  clusters:
                    description: '(Block Set, Min: 1) (see below for nested schema)'
                    items:
                      properties:
                        uid:
                          description: (String)
                          type: string
                      type: object
                    type: array
                  description:
                    description: (String)
                    type: string
                  id:
                    description: (String) The ID of this resource.
                    type: string
                  namespaces:
                    description: |-
                      (Block List) The namespaces for the cluster. (see below for nested schema)
                      The namespaces for the cluster.
                    items:
                      properties:
                        imagesBlacklist:
                          description: |-
                            (List of String) List of images to disallow for the namespace. For example, ['nginx:latest', 'redis:latest']
                            List of images to disallow for the namespace. For example, `['nginx:latest', 'redis:latest']`
                          items:
                            type: string
                          type: array
                        name:
                          description: |-
                            (String)
                            Name of the namespace. This is the name of the Kubernetes namespace in the cluster.
                          type: string
                        resourceAllocation:
                          additionalProperties:
                            type: string
                          description: |-
                            (Map of String) Resource allocation for the namespace. This is a map containing the resource type and the resource value. For example, {cpu_cores: '2', memory_MiB: '2048'}
                            Resource allocation for the namespace. This is a map containing the resource type and the resource value. For example, `{cpu_cores: '2', memory_MiB: '2048'}`
                          type: object
                      type: object
                    type: array
                  tags:
                    description: (Set of String)
                    items:
                      type: string
                    type: array
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
