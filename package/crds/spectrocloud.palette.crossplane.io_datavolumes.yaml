---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: datavolumes.spectrocloud.palette.crossplane.io
spec:
  group: spectrocloud.palette.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - palette
    kind: Datavolume
    listKind: DatavolumeList
    plural: datavolumes
    singular: datavolume
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Datavolume is the Schema for the Datavolumes API. <no value>
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: DatavolumeSpec defines the desired state of Datavolume
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  addVolumeOptions:
                    description: DataVolumeSpec defines our specification for a DataVolume
                      type
                    items:
                      properties:
                        disk:
                          items:
                            properties:
                              bus:
                                type: string
                              name:
                                type: string
                            type: object
                          type: array
                        name:
                          type: string
                        volumeSource:
                          items:
                            properties:
                              dataVolume:
                                items:
                                  properties:
                                    hotpluggable:
                                      type: boolean
                                    name:
                                      type: string
                                  type: object
                                type: array
                            type: object
                          type: array
                      type: object
                    type: array
                  clusterContext:
                    type: string
                  clusterUid:
                    description: The cluster UID to which the virtual machine belongs
                      to.
                    type: string
                  metadata:
                    description: 'Standard DataVolume''s metadata. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#metadata'
                    items:
                      properties:
                        annotations:
                          additionalProperties:
                            type: string
                          description: 'An unstructured key value map stored with
                            the DataVolume that may be used to store arbitrary metadata.
                            More info: http://kubernetes.io/docs/user-guide/annotations'
                          type: object
                        labels:
                          additionalProperties:
                            type: string
                          description: 'Map of string keys and values that can be
                            used to organize and categorize (scope and select) the
                            DataVolume. May match selectors of replication controllers
                            and services. More info: http://kubernetes.io/docs/user-guide/labels'
                          type: object
                        name:
                          description: 'Name of the DataVolume, must be unique. Cannot
                            be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                          type: string
                        namespace:
                          description: Namespace defines the space within which name
                            of the DataVolume must be unique.
                          type: string
                      type: object
                    type: array
                  spec:
                    description: DataVolumeSpec defines our specification for a DataVolume
                      type
                    items:
                      properties:
                        contentType:
                          description: 'ContentType options: "kubevirt", "archive".'
                          type: string
                        pvc:
                          description: PVC is a pointer to the PVC Spec we want to
                            use.
                          items:
                            properties:
                              accessModes:
                                description: 'A set of the desired access modes the
                                  volume should have. More info: http://kubernetes.io/docs/user-guide/persistent-volumes#access-modes-1'
                                items:
                                  type: string
                                type: array
                              resources:
                                description: 'A list of the minimum resources the
                                  volume should have. More info: http://kubernetes.io/docs/user-guide/persistent-volumes#resources'
                                items:
                                  properties:
                                    limits:
                                      additionalProperties:
                                        type: string
                                      description: 'Map describing the maximum amount
                                        of compute resources allowed. More info: http://kubernetes.io/docs/user-guide/compute-resources/'
                                      type: object
                                    requests:
                                      additionalProperties:
                                        type: string
                                      description: 'Map describing the minimum amount
                                        of compute resources required. If this is
                                        omitted for a container, it defaults to `limits`
                                        if that is explicitly specified, otherwise
                                        to an implementation-defined value. More info:
                                        http://kubernetes.io/docs/user-guide/compute-resources/'
                                      type: object
                                  type: object
                                type: array
                              selector:
                                description: A label query over volumes to consider
                                  for binding.
                                items:
                                  properties:
                                    matchExpressions:
                                      description: A list of label selector requirements.
                                        The requirements are ANDed.
                                      items:
                                        properties:
                                          key:
                                            description: The label key that the selector
                                              applies to.
                                            type: string
                                          operator:
                                            description: A key's relationship to a
                                              set of values. Valid operators ard `In`,
                                              `NotIn`, `Exists` and `DoesNotExist`.
                                            type: string
                                          values:
                                            description: An array of string values.
                                              If the operator is `In` or `NotIn`,
                                              the values array must be non-empty.
                                              If the operator is `Exists` or `DoesNotExist`,
                                              the values array must be empty. This
                                              array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: A map of {key,value} pairs. A single
                                        {key,value} in the matchLabels map is equivalent
                                        to an element of `match_expressions`, whose
                                        key field is "key", the operator is "In",
                                        and the values array contains only "value".
                                        The requirements are ANDed.
                                      type: object
                                  type: object
                                type: array
                              storageClassName:
                                description: Name of the storage class requested by
                                  the claim
                                type: string
                              volumeMode:
                                description: volumeMode defines what type of volume
                                  is required by the claim. Value of Filesystem is
                                  implied when not included in claim spec.
                                type: string
                              volumeName:
                                description: The binding reference to the PersistentVolume
                                  backing this claim.
                                type: string
                            type: object
                          type: array
                        source:
                          description: Source is the src of the data for the requested
                            DataVolume.
                          items:
                            properties:
                              blank:
                                description: DataVolumeSourceBlank provides the parameters
                                  to create a Data Volume from an empty source.
                                items:
                                  type: object
                                type: array
                              http:
                                description: DataVolumeSourceHTTP provides the parameters
                                  to create a Data Volume from an HTTP source.
                                items:
                                  properties:
                                    certConfigMap:
                                      description: Cert_config_map provides a reference
                                        to the Registry certs.
                                      type: string
                                    secretRef:
                                      description: Secret_ref provides the secret
                                        reference needed to access the HTTP source.
                                      type: string
                                    url:
                                      description: url is the URL of the http source.
                                      type: string
                                  type: object
                                type: array
                              pvc:
                                description: DataVolumeSourcePVC provides the parameters
                                  to create a Data Volume from an existing PVC.
                                items:
                                  properties:
                                    name:
                                      description: The name of the PVC.
                                      type: string
                                    namespace:
                                      description: The namespace which the PVC located
                                        in.
                                      type: string
                                  type: object
                                type: array
                              registry:
                                description: DataVolumeSourceRegistry provides the
                                  parameters to create a Data Volume from an existing
                                  PVC.
                                items:
                                  properties:
                                    imageUrl:
                                      description: The registry URL of the image to
                                        download.
                                      type: string
                                  type: object
                                type: array
                            type: object
                          type: array
                      type: object
                    type: array
                  status:
                    description: DataVolumeStatus provides the parameters to store
                      the phase of the Data Volume
                    items:
                      properties:
                        phase:
                          description: DataVolumePhase is the current phase of the
                            DataVolume.
                          type: string
                        progress:
                          description: DataVolumePhase is the current phase of the
                            DataVolume.
                          type: string
                      type: object
                    type: array
                  vmName:
                    description: The name of the virtual machine to which the data
                      volume belongs to.
                    type: string
                  vmNamespace:
                    description: The namespace of the virtual machine to which the
                      data volume belongs to.
                    type: string
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  addVolumeOptions:
                    description: DataVolumeSpec defines our specification for a DataVolume
                      type
                    items:
                      properties:
                        disk:
                          items:
                            properties:
                              bus:
                                type: string
                              name:
                                type: string
                            type: object
                          type: array
                        name:
                          type: string
                        volumeSource:
                          items:
                            properties:
                              dataVolume:
                                items:
                                  properties:
                                    hotpluggable:
                                      type: boolean
                                    name:
                                      type: string
                                  type: object
                                type: array
                            type: object
                          type: array
                      type: object
                    type: array
                  clusterContext:
                    type: string
                  clusterUid:
                    description: The cluster UID to which the virtual machine belongs
                      to.
                    type: string
                  metadata:
                    description: 'Standard DataVolume''s metadata. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#metadata'
                    items:
                      properties:
                        annotations:
                          additionalProperties:
                            type: string
                          description: 'An unstructured key value map stored with
                            the DataVolume that may be used to store arbitrary metadata.
                            More info: http://kubernetes.io/docs/user-guide/annotations'
                          type: object
                        labels:
                          additionalProperties:
                            type: string
                          description: 'Map of string keys and values that can be
                            used to organize and categorize (scope and select) the
                            DataVolume. May match selectors of replication controllers
                            and services. More info: http://kubernetes.io/docs/user-guide/labels'
                          type: object
                        name:
                          description: 'Name of the DataVolume, must be unique. Cannot
                            be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                          type: string
                        namespace:
                          description: Namespace defines the space within which name
                            of the DataVolume must be unique.
                          type: string
                      type: object
                    type: array
                  spec:
                    description: DataVolumeSpec defines our specification for a DataVolume
                      type
                    items:
                      properties:
                        contentType:
                          description: 'ContentType options: "kubevirt", "archive".'
                          type: string
                        pvc:
                          description: PVC is a pointer to the PVC Spec we want to
                            use.
                          items:
                            properties:
                              accessModes:
                                description: 'A set of the desired access modes the
                                  volume should have. More info: http://kubernetes.io/docs/user-guide/persistent-volumes#access-modes-1'
                                items:
                                  type: string
                                type: array
                              resources:
                                description: 'A list of the minimum resources the
                                  volume should have. More info: http://kubernetes.io/docs/user-guide/persistent-volumes#resources'
                                items:
                                  properties:
                                    limits:
                                      additionalProperties:
                                        type: string
                                      description: 'Map describing the maximum amount
                                        of compute resources allowed. More info: http://kubernetes.io/docs/user-guide/compute-resources/'
                                      type: object
                                    requests:
                                      additionalProperties:
                                        type: string
                                      description: 'Map describing the minimum amount
                                        of compute resources required. If this is
                                        omitted for a container, it defaults to `limits`
                                        if that is explicitly specified, otherwise
                                        to an implementation-defined value. More info:
                                        http://kubernetes.io/docs/user-guide/compute-resources/'
                                      type: object
                                  type: object
                                type: array
                              selector:
                                description: A label query over volumes to consider
                                  for binding.
                                items:
                                  properties:
                                    matchExpressions:
                                      description: A list of label selector requirements.
                                        The requirements are ANDed.
                                      items:
                                        properties:
                                          key:
                                            description: The label key that the selector
                                              applies to.
                                            type: string
                                          operator:
                                            description: A key's relationship to a
                                              set of values. Valid operators ard `In`,
                                              `NotIn`, `Exists` and `DoesNotExist`.
                                            type: string
                                          values:
                                            description: An array of string values.
                                              If the operator is `In` or `NotIn`,
                                              the values array must be non-empty.
                                              If the operator is `Exists` or `DoesNotExist`,
                                              the values array must be empty. This
                                              array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: A map of {key,value} pairs. A single
                                        {key,value} in the matchLabels map is equivalent
                                        to an element of `match_expressions`, whose
                                        key field is "key", the operator is "In",
                                        and the values array contains only "value".
                                        The requirements are ANDed.
                                      type: object
                                  type: object
                                type: array
                              storageClassName:
                                description: Name of the storage class requested by
                                  the claim
                                type: string
                              volumeMode:
                                description: volumeMode defines what type of volume
                                  is required by the claim. Value of Filesystem is
                                  implied when not included in claim spec.
                                type: string
                              volumeName:
                                description: The binding reference to the PersistentVolume
                                  backing this claim.
                                type: string
                            type: object
                          type: array
                        source:
                          description: Source is the src of the data for the requested
                            DataVolume.
                          items:
                            properties:
                              blank:
                                description: DataVolumeSourceBlank provides the parameters
                                  to create a Data Volume from an empty source.
                                items:
                                  type: object
                                type: array
                              http:
                                description: DataVolumeSourceHTTP provides the parameters
                                  to create a Data Volume from an HTTP source.
                                items:
                                  properties:
                                    certConfigMap:
                                      description: Cert_config_map provides a reference
                                        to the Registry certs.
                                      type: string
                                    secretRef:
                                      description: Secret_ref provides the secret
                                        reference needed to access the HTTP source.
                                      type: string
                                    url:
                                      description: url is the URL of the http source.
                                      type: string
                                  type: object
                                type: array
                              pvc:
                                description: DataVolumeSourcePVC provides the parameters
                                  to create a Data Volume from an existing PVC.
                                items:
                                  properties:
                                    name:
                                      description: The name of the PVC.
                                      type: string
                                    namespace:
                                      description: The namespace which the PVC located
                                        in.
                                      type: string
                                  type: object
                                type: array
                              registry:
                                description: DataVolumeSourceRegistry provides the
                                  parameters to create a Data Volume from an existing
                                  PVC.
                                items:
                                  properties:
                                    imageUrl:
                                      description: The registry URL of the image to
                                        download.
                                      type: string
                                  type: object
                                type: array
                            type: object
                          type: array
                      type: object
                    type: array
                  status:
                    description: DataVolumeStatus provides the parameters to store
                      the phase of the Data Volume
                    items:
                      properties:
                        phase:
                          description: DataVolumePhase is the current phase of the
                            DataVolume.
                          type: string
                        progress:
                          description: DataVolumePhase is the current phase of the
                            DataVolume.
                          type: string
                      type: object
                    type: array
                  vmName:
                    description: The name of the virtual machine to which the data
                      volume belongs to.
                    type: string
                  vmNamespace:
                    description: The namespace of the virtual machine to which the
                      data volume belongs to.
                    type: string
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.addVolumeOptions is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.addVolumeOptions)
                || (has(self.initProvider) && has(self.initProvider.addVolumeOptions))'
            - message: spec.forProvider.clusterContext is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.clusterContext)
                || (has(self.initProvider) && has(self.initProvider.clusterContext))'
            - message: spec.forProvider.metadata is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.metadata)
                || (has(self.initProvider) && has(self.initProvider.metadata))'
            - message: spec.forProvider.spec is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.spec)
                || (has(self.initProvider) && has(self.initProvider.spec))'
          status:
            description: DatavolumeStatus defines the observed state of Datavolume.
            properties:
              atProvider:
                properties:
                  addVolumeOptions:
                    description: DataVolumeSpec defines our specification for a DataVolume
                      type
                    items:
                      properties:
                        disk:
                          items:
                            properties:
                              bus:
                                type: string
                              name:
                                type: string
                            type: object
                          type: array
                        name:
                          type: string
                        volumeSource:
                          items:
                            properties:
                              dataVolume:
                                items:
                                  properties:
                                    hotpluggable:
                                      type: boolean
                                    name:
                                      type: string
                                  type: object
                                type: array
                            type: object
                          type: array
                      type: object
                    type: array
                  clusterContext:
                    type: string
                  clusterUid:
                    description: The cluster UID to which the virtual machine belongs
                      to.
                    type: string
                  id:
                    type: string
                  metadata:
                    description: 'Standard DataVolume''s metadata. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#metadata'
                    items:
                      properties:
                        annotations:
                          additionalProperties:
                            type: string
                          description: 'An unstructured key value map stored with
                            the DataVolume that may be used to store arbitrary metadata.
                            More info: http://kubernetes.io/docs/user-guide/annotations'
                          type: object
                        generation:
                          description: A sequence number representing a specific generation
                            of the desired state.
                          type: number
                        labels:
                          additionalProperties:
                            type: string
                          description: 'Map of string keys and values that can be
                            used to organize and categorize (scope and select) the
                            DataVolume. May match selectors of replication controllers
                            and services. More info: http://kubernetes.io/docs/user-guide/labels'
                          type: object
                        name:
                          description: 'Name of the DataVolume, must be unique. Cannot
                            be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                          type: string
                        namespace:
                          description: Namespace defines the space within which name
                            of the DataVolume must be unique.
                          type: string
                        resourceVersion:
                          description: 'An opaque value that represents the internal
                            version of this DataVolume that can be used by clients
                            to determine when DataVolume has changed. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                          type: string
                        selfLink:
                          description: A URL representing this DataVolume.
                          type: string
                        uid:
                          description: 'The unique in time and space value for this
                            DataVolume. More info: http://kubernetes.io/docs/user-guide/identifiers#uids'
                          type: string
                      type: object
                    type: array
                  spec:
                    description: DataVolumeSpec defines our specification for a DataVolume
                      type
                    items:
                      properties:
                        contentType:
                          description: 'ContentType options: "kubevirt", "archive".'
                          type: string
                        pvc:
                          description: PVC is a pointer to the PVC Spec we want to
                            use.
                          items:
                            properties:
                              accessModes:
                                description: 'A set of the desired access modes the
                                  volume should have. More info: http://kubernetes.io/docs/user-guide/persistent-volumes#access-modes-1'
                                items:
                                  type: string
                                type: array
                              resources:
                                description: 'A list of the minimum resources the
                                  volume should have. More info: http://kubernetes.io/docs/user-guide/persistent-volumes#resources'
                                items:
                                  properties:
                                    limits:
                                      additionalProperties:
                                        type: string
                                      description: 'Map describing the maximum amount
                                        of compute resources allowed. More info: http://kubernetes.io/docs/user-guide/compute-resources/'
                                      type: object
                                    requests:
                                      additionalProperties:
                                        type: string
                                      description: 'Map describing the minimum amount
                                        of compute resources required. If this is
                                        omitted for a container, it defaults to `limits`
                                        if that is explicitly specified, otherwise
                                        to an implementation-defined value. More info:
                                        http://kubernetes.io/docs/user-guide/compute-resources/'
                                      type: object
                                  type: object
                                type: array
                              selector:
                                description: A label query over volumes to consider
                                  for binding.
                                items:
                                  properties:
                                    matchExpressions:
                                      description: A list of label selector requirements.
                                        The requirements are ANDed.
                                      items:
                                        properties:
                                          key:
                                            description: The label key that the selector
                                              applies to.
                                            type: string
                                          operator:
                                            description: A key's relationship to a
                                              set of values. Valid operators ard `In`,
                                              `NotIn`, `Exists` and `DoesNotExist`.
                                            type: string
                                          values:
                                            description: An array of string values.
                                              If the operator is `In` or `NotIn`,
                                              the values array must be non-empty.
                                              If the operator is `Exists` or `DoesNotExist`,
                                              the values array must be empty. This
                                              array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: A map of {key,value} pairs. A single
                                        {key,value} in the matchLabels map is equivalent
                                        to an element of `match_expressions`, whose
                                        key field is "key", the operator is "In",
                                        and the values array contains only "value".
                                        The requirements are ANDed.
                                      type: object
                                  type: object
                                type: array
                              storageClassName:
                                description: Name of the storage class requested by
                                  the claim
                                type: string
                              volumeMode:
                                description: volumeMode defines what type of volume
                                  is required by the claim. Value of Filesystem is
                                  implied when not included in claim spec.
                                type: string
                              volumeName:
                                description: The binding reference to the PersistentVolume
                                  backing this claim.
                                type: string
                            type: object
                          type: array
                        source:
                          description: Source is the src of the data for the requested
                            DataVolume.
                          items:
                            properties:
                              blank:
                                description: DataVolumeSourceBlank provides the parameters
                                  to create a Data Volume from an empty source.
                                items:
                                  type: object
                                type: array
                              http:
                                description: DataVolumeSourceHTTP provides the parameters
                                  to create a Data Volume from an HTTP source.
                                items:
                                  properties:
                                    certConfigMap:
                                      description: Cert_config_map provides a reference
                                        to the Registry certs.
                                      type: string
                                    secretRef:
                                      description: Secret_ref provides the secret
                                        reference needed to access the HTTP source.
                                      type: string
                                    url:
                                      description: url is the URL of the http source.
                                      type: string
                                  type: object
                                type: array
                              pvc:
                                description: DataVolumeSourcePVC provides the parameters
                                  to create a Data Volume from an existing PVC.
                                items:
                                  properties:
                                    name:
                                      description: The name of the PVC.
                                      type: string
                                    namespace:
                                      description: The namespace which the PVC located
                                        in.
                                      type: string
                                  type: object
                                type: array
                              registry:
                                description: DataVolumeSourceRegistry provides the
                                  parameters to create a Data Volume from an existing
                                  PVC.
                                items:
                                  properties:
                                    imageUrl:
                                      description: The registry URL of the image to
                                        download.
                                      type: string
                                  type: object
                                type: array
                            type: object
                          type: array
                      type: object
                    type: array
                  status:
                    description: DataVolumeStatus provides the parameters to store
                      the phase of the Data Volume
                    items:
                      properties:
                        phase:
                          description: DataVolumePhase is the current phase of the
                            DataVolume.
                          type: string
                        progress:
                          description: DataVolumePhase is the current phase of the
                            DataVolume.
                          type: string
                      type: object
                    type: array
                  vmName:
                    description: The name of the virtual machine to which the data
                      volume belongs to.
                    type: string
                  vmNamespace:
                    description: The namespace of the virtual machine to which the
                      data volume belongs to.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
