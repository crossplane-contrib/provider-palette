---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: machines.virtual.palette.crossplane.io
spec:
  group: virtual.palette.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - palette
    kind: Machine
    listKind: MachineList
    plural: machines
    singular: machine
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Machine is the Schema for the Machines API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: MachineSpec defines the desired state of Machine
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  affinity:
                    description: |-
                      (Block List, Max: 1) Optional pod scheduling constraints. (see below for nested schema)
                      Optional pod scheduling constraints.
                    items:
                      properties:
                        nodeAffinity:
                          description: |-
                            (Block List, Max: 1) Node affinity scheduling rules for the pod. (see below for nested schema)
                            Node affinity scheduling rules for the pod.
                          items:
                            properties:
                              preferredDuringSchedulingIgnoredDuringExecution:
                                description: |-
                                  (Block List) The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, RequiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding 'weight' to the sum if the node matches the corresponding MatchExpressions; the node(s) with the highest sum are the most preferred. (see below for nested schema)
                                  The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, RequiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding 'weight' to the sum if the node matches the corresponding MatchExpressions; the node(s) with the highest sum are the most preferred.
                                items:
                                  properties:
                                    preference:
                                      description: |-
                                        (Block List, Min: 1, Max: 1) A node selector term, associated with the corresponding weight. (see below for nested schema)
                                        A node selector term, associated with the corresponding weight.
                                      items:
                                        properties:
                                          matchExpressions:
                                            description: |-
                                              (Block List) List of node selector requirements. The requirements are ANDed. (see below for nested schema)
                                              List of node selector requirements. The requirements are ANDed.
                                            items:
                                              properties:
                                                key:
                                                  description: |-
                                                    (String) The label key that the selector applies to.
                                                    The label key that the selector applies to.
                                                  type: string
                                                operator:
                                                  description: |-
                                                    (String) Operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                    Operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                  type: string
                                                values:
                                                  description: |-
                                                    empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
                                                    Values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                        type: object
                                      type: array
                                    weight:
                                      description: |-
                                        100
                                        weight is in the range 1-100
                                      type: number
                                  type: object
                                type: array
                              requiredDuringSchedulingIgnoredDuringExecution:
                                description: |-
                                  (Block List, Max: 1) If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a node label update), the system may or may not try to eventually evict the pod from its node. (see below for nested schema)
                                  If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a node label update), the system may or may not try to eventually evict the pod from its node.
                                items:
                                  properties:
                                    nodeSelectorTerm:
                                      description: |-
                                        (Block List) List of node selector terms. The terms are ORed. (see below for nested schema)
                                        List of node selector terms. The terms are ORed.
                                      items:
                                        properties:
                                          matchExpressions:
                                            description: |-
                                              (Block List) List of node selector requirements. The requirements are ANDed. (see below for nested schema)
                                              List of node selector requirements. The requirements are ANDed.
                                            items:
                                              properties:
                                                key:
                                                  description: |-
                                                    (String) The label key that the selector applies to.
                                                    The label key that the selector applies to.
                                                  type: string
                                                operator:
                                                  description: |-
                                                    (String) Operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                    Operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                  type: string
                                                values:
                                                  description: |-
                                                    empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
                                                    Values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                        type: object
                                      type: array
                                  type: object
                                type: array
                            type: object
                          type: array
                        podAffinity:
                          description: |-
                            pod topological affinity. rules that specify that certain pods should be placed in the same topological domain (e.g. same node, same rack, same zone, same power domain, etc.) (see below for nested schema)
                            Inter-pod topological affinity. rules that specify that certain pods should be placed in the same topological domain (e.g. same node, same rack, same zone, same power domain, etc.)
                          items:
                            properties:
                              preferredDuringSchedulingIgnoredDuringExecution:
                                description: |-
                                  (Block List) The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, RequiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding 'weight' to the sum if the node matches the corresponding MatchExpressions; the node(s) with the highest sum are the most preferred. (see below for nested schema)
                                  The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, RequiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding 'weight' to the sum if the node matches the corresponding MatchExpressions; the node(s) with the highest sum are the most preferred.
                                items:
                                  properties:
                                    podAffinityTerm:
                                      description: |-
                                        (Block List, Min: 1, Max: 1) A pod affinity term, associated with the corresponding weight (see below for nested schema)
                                        A pod affinity term, associated with the corresponding weight
                                      items:
                                        properties:
                                          labelSelector:
                                            description: |-
                                              (Block List) A label query over a set of resources, in this case pods. (see below for nested schema)
                                              A label query over a set of resources, in this case pods.
                                            items:
                                              properties:
                                                matchExpressions:
                                                  description: |-
                                                    (Block List) List of node selector requirements. The requirements are ANDed. (see below for nested schema)
                                                    A list of label selector requirements. The requirements are ANDed.
                                                  items:
                                                    properties:
                                                      key:
                                                        description: |-
                                                          (String) The label key that the selector applies to.
                                                          The label key that the selector applies to.
                                                        type: string
                                                      operator:
                                                        description: |-
                                                          (String) Operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                          A key's relationship to a set of values. Valid operators ard `In`, `NotIn`, `Exists` and `DoesNotExist`.
                                                        type: string
                                                      values:
                                                        description: |-
                                                          empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
                                                          An array of string values. If the operator is `In` or `NotIn`, the values array must be non-empty. If the operator is `Exists` or `DoesNotExist`, the values array must be empty. This array is replaced during a strategic merge patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    type: object
                                                  type: array
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  description: |-
                                                    (Map of String) A map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of match_expressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                    A map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of `match_expressions`, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                  type: object
                                              type: object
                                            type: array
                                          namespaces:
                                            description: |-
                                              (Set of String) namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means 'this pod's namespace'
                                              namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means 'this pod's namespace'
                                            items:
                                              type: string
                                            type: array
                                          topologyKey:
                                            description: |-
                                              (String) empty topology key is interpreted by the scheduler as 'all topologies'
                                              empty topology key is interpreted by the scheduler as 'all topologies'
                                            type: string
                                        type: object
                                      type: array
                                    weight:
                                      description: |-
                                        100
                                        weight associated with matching the corresponding podAffinityTerm, in the range 1-100
                                      type: number
                                  type: object
                                type: array
                              requiredDuringSchedulingIgnoredDuringExecution:
                                description: |-
                                  (Block List, Max: 1) If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a node label update), the system may or may not try to eventually evict the pod from its node. (see below for nested schema)
                                  If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each PodAffinityTerm are intersected, i.e. all terms must be satisfied.
                                items:
                                  properties:
                                    labelSelector:
                                      description: |-
                                        (Block List) A label query over a set of resources, in this case pods. (see below for nested schema)
                                        A label query over a set of resources, in this case pods.
                                      items:
                                        properties:
                                          matchExpressions:
                                            description: |-
                                              (Block List) List of node selector requirements. The requirements are ANDed. (see below for nested schema)
                                              A list of label selector requirements. The requirements are ANDed.
                                            items:
                                              properties:
                                                key:
                                                  description: |-
                                                    (String) The label key that the selector applies to.
                                                    The label key that the selector applies to.
                                                  type: string
                                                operator:
                                                  description: |-
                                                    (String) Operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                    A key's relationship to a set of values. Valid operators ard `In`, `NotIn`, `Exists` and `DoesNotExist`.
                                                  type: string
                                                values:
                                                  description: |-
                                                    empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
                                                    An array of string values. If the operator is `In` or `NotIn`, the values array must be non-empty. If the operator is `Exists` or `DoesNotExist`, the values array must be empty. This array is replaced during a strategic merge patch.
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                          matchLabels:
                                            additionalProperties:
                                              type: string
                                            description: |-
                                              (Map of String) A map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of match_expressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                              A map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of `match_expressions`, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                            type: object
                                        type: object
                                      type: array
                                    namespaces:
                                      description: |-
                                        (Set of String) namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means 'this pod's namespace'
                                        namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means 'this pod's namespace'
                                      items:
                                        type: string
                                      type: array
                                    topologyKey:
                                      description: |-
                                        (String) empty topology key is interpreted by the scheduler as 'all topologies'
                                        empty topology key is interpreted by the scheduler as 'all topologies'
                                      type: string
                                  type: object
                                type: array
                            type: object
                          type: array
                        podAntiAffinity:
                          description: |-
                            pod topological affinity. rules that specify that certain pods should be placed in the same topological domain (e.g. same node, same rack, same zone, same power domain, etc.) (see below for nested schema)
                            Inter-pod topological affinity. rules that specify that certain pods should be placed in the same topological domain (e.g. same node, same rack, same zone, same power domain, etc.)
                          items:
                            properties:
                              preferredDuringSchedulingIgnoredDuringExecution:
                                description: |-
                                  (Block List) The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, RequiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding 'weight' to the sum if the node matches the corresponding MatchExpressions; the node(s) with the highest sum are the most preferred. (see below for nested schema)
                                  The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, RequiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding 'weight' to the sum if the node matches the corresponding MatchExpressions; the node(s) with the highest sum are the most preferred.
                                items:
                                  properties:
                                    podAffinityTerm:
                                      description: |-
                                        (Block List, Min: 1, Max: 1) A pod affinity term, associated with the corresponding weight (see below for nested schema)
                                        A pod affinity term, associated with the corresponding weight
                                      items:
                                        properties:
                                          labelSelector:
                                            description: |-
                                              (Block List) A label query over a set of resources, in this case pods. (see below for nested schema)
                                              A label query over a set of resources, in this case pods.
                                            items:
                                              properties:
                                                matchExpressions:
                                                  description: |-
                                                    (Block List) List of node selector requirements. The requirements are ANDed. (see below for nested schema)
                                                    A list of label selector requirements. The requirements are ANDed.
                                                  items:
                                                    properties:
                                                      key:
                                                        description: |-
                                                          (String) The label key that the selector applies to.
                                                          The label key that the selector applies to.
                                                        type: string
                                                      operator:
                                                        description: |-
                                                          (String) Operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                          A key's relationship to a set of values. Valid operators ard `In`, `NotIn`, `Exists` and `DoesNotExist`.
                                                        type: string
                                                      values:
                                                        description: |-
                                                          empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
                                                          An array of string values. If the operator is `In` or `NotIn`, the values array must be non-empty. If the operator is `Exists` or `DoesNotExist`, the values array must be empty. This array is replaced during a strategic merge patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    type: object
                                                  type: array
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  description: |-
                                                    (Map of String) A map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of match_expressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                    A map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of `match_expressions`, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                  type: object
                                              type: object
                                            type: array
                                          namespaces:
                                            description: |-
                                              (Set of String) namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means 'this pod's namespace'
                                              namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means 'this pod's namespace'
                                            items:
                                              type: string
                                            type: array
                                          topologyKey:
                                            description: |-
                                              (String) empty topology key is interpreted by the scheduler as 'all topologies'
                                              empty topology key is interpreted by the scheduler as 'all topologies'
                                            type: string
                                        type: object
                                      type: array
                                    weight:
                                      description: |-
                                        100
                                        weight associated with matching the corresponding podAffinityTerm, in the range 1-100
                                      type: number
                                  type: object
                                type: array
                              requiredDuringSchedulingIgnoredDuringExecution:
                                description: |-
                                  (Block List, Max: 1) If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a node label update), the system may or may not try to eventually evict the pod from its node. (see below for nested schema)
                                  If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each PodAffinityTerm are intersected, i.e. all terms must be satisfied.
                                items:
                                  properties:
                                    labelSelector:
                                      description: |-
                                        (Block List) A label query over a set of resources, in this case pods. (see below for nested schema)
                                        A label query over a set of resources, in this case pods.
                                      items:
                                        properties:
                                          matchExpressions:
                                            description: |-
                                              (Block List) List of node selector requirements. The requirements are ANDed. (see below for nested schema)
                                              A list of label selector requirements. The requirements are ANDed.
                                            items:
                                              properties:
                                                key:
                                                  description: |-
                                                    (String) The label key that the selector applies to.
                                                    The label key that the selector applies to.
                                                  type: string
                                                operator:
                                                  description: |-
                                                    (String) Operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                    A key's relationship to a set of values. Valid operators ard `In`, `NotIn`, `Exists` and `DoesNotExist`.
                                                  type: string
                                                values:
                                                  description: |-
                                                    empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
                                                    An array of string values. If the operator is `In` or `NotIn`, the values array must be non-empty. If the operator is `Exists` or `DoesNotExist`, the values array must be empty. This array is replaced during a strategic merge patch.
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                          matchLabels:
                                            additionalProperties:
                                              type: string
                                            description: |-
                                              (Map of String) A map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of match_expressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                              A map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of `match_expressions`, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                            type: object
                                        type: object
                                      type: array
                                    namespaces:
                                      description: |-
                                        (Set of String) namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means 'this pod's namespace'
                                        namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means 'this pod's namespace'
                                      items:
                                        type: string
                                      type: array
                                    topologyKey:
                                      description: |-
                                        (String) empty topology key is interpreted by the scheduler as 'all topologies'
                                        empty topology key is interpreted by the scheduler as 'all topologies'
                                      type: string
                                  type: object
                                type: array
                            type: object
                          type: array
                      type: object
                    type: array
                  annotations:
                    additionalProperties:
                      type: string
                    description: |-
                      (Map of String) An unstructured key value map stored with the VM that may be used to store arbitrary metadata.
                      An unstructured key value map stored with the VM that may be used to store arbitrary metadata.
                    type: object
                  baseVmName:
                    description: |-
                      (String) The name of the source virtual machine that a clone will be created of.
                      The name of the source virtual machine that a clone will be created of.
                    type: string
                  clusterContext:
                    description: |-
                      (String) Context of the cluster. Allowed values are project, tenant. Default value is project.
                      Context of the cluster. Allowed values are `project`, `tenant`. Default value is `project`.
                    type: string
                  clusterUid:
                    description: |-
                      (String) The cluster UID to which the virtual machine belongs to.
                      The cluster UID to which the virtual machine belongs to.
                    type: string
                  cpu:
                    description: |-
                      (Block List, Max: 1) CPU allows to specifying the CPU topology. Valid resource keys are "cores" , "sockets" and "threads" (see below for nested schema)
                      CPU allows to specifying the CPU topology. Valid resource keys are "cores" , "sockets" and "threads"
                    items:
                      properties:
                        cores:
                          description: |-
                            (Number) Cores is the number of cores inside the vmi. Must be a value greater or equal 1
                            Cores is the number of cores inside the vmi. Must be a value greater or equal 1
                          type: number
                        sockets:
                          description: |-
                            (Number) Sockets is the number of sockets inside the vmi. Must be a value greater or equal 1.
                            Sockets is the number of sockets inside the vmi. Must be a value greater or equal 1.
                          type: number
                        threads:
                          description: |-
                            (Number) Threads is the number of threads inside the vmi. Must be a value greater or equal 1.
                            Threads is the number of threads inside the vmi. Must be a value greater or equal 1.
                          type: number
                      type: object
                    type: array
                  dataVolumeTemplates:
                    description: |-
                      (Block List) dataVolumeTemplates is a list of dataVolumes that the VirtualMachineInstance template can reference. (see below for nested schema)
                      dataVolumeTemplates is a list of dataVolumes that the VirtualMachineInstance template can reference.
                    items:
                      properties:
                        metadata:
                          description: |-
                            architecture/api-conventions.md#metadata (see below for nested schema)
                            Standard DataVolume's metadata. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#metadata
                          items:
                            properties:
                              annotations:
                                additionalProperties:
                                  type: string
                                description: |-
                                  (Map of String) An unstructured key value map stored with the VM that may be used to store arbitrary metadata.
                                  An unstructured key value map stored with the DataVolume that may be used to store arbitrary metadata. More info: http://kubernetes.io/docs/user-guide/annotations
                                type: object
                              labels:
                                additionalProperties:
                                  type: string
                                description: |-
                                  (Map of String) Map of string keys and values that can be used to organize and categorize (scope and select). May match selectors of replication controllers and services.
                                  Map of string keys and values that can be used to organize and categorize (scope and select) the DataVolume. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels
                                type: object
                              name:
                                description: |-
                                  (String) Name of the virtual machine, must be unique. Cannot be updated.
                                  Name of the DataVolume, must be unique. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names
                                type: string
                              namespace:
                                description: |-
                                  (String) Namespace defines the space within, Name must be unique.
                                  Namespace defines the space within which name of the DataVolume must be unique.
                                type: string
                            type: object
                          type: array
                        spec:
                          description: |-
                            (Block List, Min: 1, Max: 1) DataVolumeSpec defines our specification for a DataVolume type (see below for nested schema)
                            DataVolumeSpec defines our specification for a DataVolume type
                          items:
                            properties:
                              contentType:
                                description: |-
                                  (String) ContentType options: "kubevirt", "archive".
                                  ContentType options: "kubevirt", "archive".
                                type: string
                              pvc:
                                description: |-
                                  (Block List, Min: 1, Max: 1) PVC is a pointer to the PVC Spec we want to use. (see below for nested schema)
                                  PVC is a pointer to the PVC Spec we want to use.
                                items:
                                  properties:
                                    accessModes:
                                      description: |-
                                        guide/persistent-volumes#access-modes-1
                                        A set of the desired access modes the volume should have. More info: http://kubernetes.io/docs/user-guide/persistent-volumes#access-modes-1
                                      items:
                                        type: string
                                      type: array
                                    resources:
                                      description: |-
                                        (Block List, Min: 1, Max: 1) Resources describes the Compute Resources required by this vmi. (see below for nested schema)
                                        A list of the minimum resources the volume should have. More info: http://kubernetes.io/docs/user-guide/persistent-volumes#resources
                                      items:
                                        properties:
                                          limits:
                                            additionalProperties:
                                              type: string
                                            description: |-
                                              (Map of String) Requests is the maximum amount of compute resources allowed. Valid resource keys are "memory" and "cpu"
                                              Map describing the maximum amount of compute resources allowed. More info: http://kubernetes.io/docs/user-guide/compute-resources/
                                            type: object
                                          requests:
                                            additionalProperties:
                                              type: string
                                            description: |-
                                              (Map of String) Requests is a description of the initial vmi resources.
                                              Map describing the minimum amount of compute resources required. If this is omitted for a container, it defaults to `limits` if that is explicitly specified, otherwise to an implementation-defined value. More info: http://kubernetes.io/docs/user-guide/compute-resources/
                                            type: object
                                        type: object
                                      type: array
                                    selector:
                                      description: |-
                                        (Block List, Max: 1) A label query over volumes to consider for binding. (see below for nested schema)
                                        A label query over volumes to consider for binding.
                                      items:
                                        properties:
                                          matchExpressions:
                                            description: |-
                                              (Block List) List of node selector requirements. The requirements are ANDed. (see below for nested schema)
                                              A list of label selector requirements. The requirements are ANDed.
                                            items:
                                              properties:
                                                key:
                                                  description: |-
                                                    (String) The label key that the selector applies to.
                                                    The label key that the selector applies to.
                                                  type: string
                                                operator:
                                                  description: |-
                                                    (String) Operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                    A key's relationship to a set of values. Valid operators ard `In`, `NotIn`, `Exists` and `DoesNotExist`.
                                                  type: string
                                                values:
                                                  description: |-
                                                    empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
                                                    An array of string values. If the operator is `In` or `NotIn`, the values array must be non-empty. If the operator is `Exists` or `DoesNotExist`, the values array must be empty. This array is replaced during a strategic merge patch.
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                          matchLabels:
                                            additionalProperties:
                                              type: string
                                            description: |-
                                              (Map of String) A map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of match_expressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                              A map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of `match_expressions`, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                            type: object
                                        type: object
                                      type: array
                                    storageClassName:
                                      description: |-
                                        (String) Name of the storage class requested by the claim
                                        Name of the storage class requested by the claim
                                      type: string
                                    volumeMode:
                                      description: |-
                                        (String) volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec.
                                        volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec.
                                      type: string
                                    volumeName:
                                      description: |-
                                        (String) The binding reference to the PersistentVolume backing this claim.
                                        The binding reference to the PersistentVolume backing this claim.
                                      type: string
                                  type: object
                                type: array
                              source:
                                description: |-
                                  (Block List, Max: 1) Source is the src of the data for the requested DataVolume. (see below for nested schema)
                                  Source is the src of the data for the requested DataVolume.
                                items:
                                  properties:
                                    blank:
                                      description: |-
                                        (Block List, Max: 1) DataVolumeSourceBlank provides the parameters to create a Data Volume from an empty source. (see below for nested schema)
                                        DataVolumeSourceBlank provides the parameters to create a Data Volume from an empty source.
                                      items:
                                        type: object
                                      type: array
                                    http:
                                      description: |-
                                        (Block List, Max: 1) DataVolumeSourceHTTP provides the parameters to create a Data Volume from an HTTP source. (see below for nested schema)
                                        DataVolumeSourceHTTP provides the parameters to create a Data Volume from an HTTP source.
                                      items:
                                        properties:
                                          certConfigMap:
                                            description: |-
                                              (String) Cert_config_map provides a reference to the Registry certs.
                                              Cert_config_map provides a reference to the Registry certs.
                                            type: string
                                          secretRef:
                                            description: |-
                                              (String) Secret_ref provides the secret reference needed to access the HTTP source.
                                              Secret_ref provides the secret reference needed to access the HTTP source.
                                            type: string
                                          url:
                                            description: |-
                                              (String) url is the URL of the http source.
                                              url is the URL of the http source.
                                            type: string
                                        type: object
                                      type: array
                                    pvc:
                                      description: |-
                                        (Block List, Min: 1, Max: 1) PVC is a pointer to the PVC Spec we want to use. (see below for nested schema)
                                        DataVolumeSourcePVC provides the parameters to create a Data Volume from an existing PVC.
                                      items:
                                        properties:
                                          name:
                                            description: |-
                                              (String) Name of the virtual machine, must be unique. Cannot be updated.
                                              The name of the PVC.
                                            type: string
                                          namespace:
                                            description: |-
                                              (String) Namespace defines the space within, Name must be unique.
                                              The namespace which the PVC located in.
                                            type: string
                                        type: object
                                      type: array
                                    registry:
                                      description: |-
                                        (Block List, Max: 1) DataVolumeSourceRegistry provides the parameters to create a Data Volume from an existing PVC. (see below for nested schema)
                                        DataVolumeSourceRegistry provides the parameters to create a Data Volume from an existing PVC.
                                      items:
                                        properties:
                                          imageUrl:
                                            description: |-
                                              (String) The registry URL of the image to download.
                                              The registry URL of the image to download.
                                            type: string
                                        type: object
                                      type: array
                                  type: object
                                type: array
                            type: object
                          type: array
                      type: object
                    type: array
                  disk:
                    description: |-
                      (Block List) Disks describes disks, cdroms, floppy and luns which are connected to the vmi. (see below for nested schema)
                      Disks describes disks, cdroms, floppy and luns which are connected to the vmi.
                    items:
                      properties:
                        diskDevice:
                          description: |-
                            (Block List, Min: 1) DiskDevice specifies as which device the disk should be added to the guest. (see below for nested schema)
                            DiskDevice specifies as which device the disk should be added to the guest.
                          items:
                            properties:
                              disk:
                                description: |-
                                  (Block List) Disks describes disks, cdroms, floppy and luns which are connected to the vmi. (see below for nested schema)
                                  Attach a volume as a disk to the vmi.
                                items:
                                  properties:
                                    bus:
                                      description: |-
                                        (String) Bus indicates the type of disk device to emulate.
                                        Bus indicates the type of disk device to emulate.
                                      type: string
                                    pciAddress:
                                      description: |-
                                        (String) If specified, the virtual disk will be placed on the guests pci address with the specifed PCI address. For example: 0000:81:01.10
                                        If specified, the virtual disk will be placed on the guests pci address with the specifed PCI address. For example: 0000:81:01.10
                                      type: string
                                    readOnly:
                                      description: |-
                                        (Boolean) ReadOnly. Defaults to false.
                                        ReadOnly. Defaults to false.
                                      type: boolean
                                  type: object
                                type: array
                            type: object
                          type: array
                        name:
                          description: |-
                            (String) Name of the virtual machine, must be unique. Cannot be updated.
                            Name is the device name
                          type: string
                        serial:
                          description: |-
                            (String) Serial provides the ability to specify a serial number for the disk device.
                            Serial provides the ability to specify a serial number for the disk device.
                          type: string
                      type: object
                    type: array
                  dnsPolicy:
                    description: |-
                      (String) DNSPolicy defines how a pod's DNS will be configured.
                      DNSPolicy defines how a pod's DNS will be configured.
                    type: string
                  evictionStrategy:
                    description: |-
                      off in case of a node drain.
                      EvictionStrategy can be set to "LiveMigrate" if the VirtualMachineInstance should be migrated instead of shut-off in case of a node drain.
                    type: string
                  generateName:
                    description: |-
                      architecture/api-conventions.md#idempotency
                      Prefix, used by the server, to generate a unique name ONLY IF the `name` field has not been provided. This value will also be combined with a unique suffix. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#idempotency
                    type: string
                  hostname:
                    description: |-
                      (String) Specifies the hostname of the vmi.
                      Specifies the hostname of the vmi.
                    type: string
                  interface:
                    description: |-
                      (Block List) Interfaces describe network interfaces which are added to the vmi. (see below for nested schema)
                      Interfaces describe network interfaces which are added to the vmi.
                    items:
                      properties:
                        interfaceBindingMethod:
                          description: |-
                            (String) Represents the Interface model, One of: e1000, e1000e, ne2k_pci, pcnet, rtl8139, virtio. Defaults to virtio.
                            Represents the Interface model, One of: e1000, e1000e, ne2k_pci, pcnet, rtl8139, virtio. Defaults to virtio.
                          type: string
                        model:
                          description: |-
                            (String) Represents the method which will be used to connect the interface to the guest.
                            Represents the method which will be used to connect the interface to the guest.
                          type: string
                        name:
                          description: |-
                            (String) Name of the virtual machine, must be unique. Cannot be updated.
                            Logical name of the interface as well as a reference to the associated networks.
                          type: string
                      type: object
                    type: array
                  labels:
                    additionalProperties:
                      type: string
                    description: |-
                      (Map of String) Map of string keys and values that can be used to organize and categorize (scope and select). May match selectors of replication controllers and services.
                      Map of string keys and values that can be used to organize and categorize (scope and select). May match selectors of replication controllers and services.
                    type: object
                  livenessProbe:
                    description: |-
                      (Block List, Max: 1) Specification of the desired behavior of the VirtualMachineInstance on the host. (see below for nested schema)
                      Specification of the desired behavior of the VirtualMachineInstance on the host.
                    items:
                      type: object
                    type: array
                  memory:
                    description: |-
                      (Block List, Max: 1) Memory allows specifying the vmi memory features. (see below for nested schema)
                      Memory allows specifying the vmi memory features.
                    items:
                      properties:
                        guest:
                          description: |-
                            (String) Guest is the amount of memory allocated to the vmi. This value must be less than or equal to the limit if specified.
                            Guest is the amount of memory allocated to the vmi. This value must be less than or equal to the limit if specified.
                          type: string
                        hugepages:
                          description: |-
                            (String) Hugepages attribute specifies the hugepage size, for x86_64 architecture valid values are 1Gi and 2Mi.
                            Hugepages attribute specifies the hugepage size, for x86_64 architecture valid values are 1Gi and 2Mi.
                          type: string
                      type: object
                    type: array
                  namespace:
                    description: |-
                      (String) Namespace defines the space within, Name must be unique.
                      Namespace defines the space within, Name must be unique.
                    type: string
                  network:
                    description: |-
                      (Block List) List of networks that can be attached to a vm's virtual interface. (see below for nested schema)
                      List of networks that can be attached to a vm's virtual interface.
                    items:
                      properties:
                        name:
                          description: |-
                            (String) Name of the virtual machine, must be unique. Cannot be updated.
                            Network name.
                          type: string
                        networkSource:
                          description: |-
                            (Block List, Max: 1) NetworkSource represents the network type and the source interface that should be connected to the virtual machine. (see below for nested schema)
                            NetworkSource represents the network type and the source interface that should be connected to the virtual machine.
                          items:
                            properties:
                              multus:
                                description: |-
                                  (Block List, Max: 1) Multus network. (see below for nested schema)
                                  Multus network.
                                items:
                                  properties:
                                    default:
                                      description: |-
                                        cni.io/default-network annotation.
                                        Select the default network and add it to the multus-cni.io/default-network annotation.
                                      type: boolean
                                    networkName:
                                      description: |-
                                        (String) References to a NetworkAttachmentDefinition CRD object. Format: , /. If namespace is not specified, VMI namespace is assumed.
                                        References to a NetworkAttachmentDefinition CRD object. Format: <networkName>, <namespace>/<networkName>. If namespace is not specified, VMI namespace is assumed.
                                      type: string
                                  type: object
                                type: array
                              pod:
                                description: |-
                                  (Block List, Max: 1) Pod network. (see below for nested schema)
                                  Pod network.
                                items:
                                  properties:
                                    vmNetworkCidr:
                                      description: |-
                                        (String) CIDR for vm network.
                                        CIDR for vm network.
                                      type: string
                                  type: object
                                type: array
                            type: object
                          type: array
                      type: object
                    type: array
                  nodeSelector:
                    additionalProperties:
                      type: string
                    description: |-
                      (Map of String) NodeSelector is a selector which must be true for the vmi to fit on a node. Selector which must match a node's labels for the vmi to be scheduled on that node.
                      NodeSelector is a selector which must be true for the vmi to fit on a node. Selector which must match a node's labels for the vmi to be scheduled on that node.
                    type: object
                  podDnsConfig:
                    description: |-
                      (Block List, Max: 1) Specifies the DNS parameters of a pod. Parameters specified here will be merged to the generated DNS configuration based on DNSPolicy. Optional: Defaults to empty (see below for nested schema)
                      Specifies the DNS parameters of a pod. Parameters specified here will be merged to the generated DNS configuration based on DNSPolicy. Optional: Defaults to empty
                    items:
                      properties:
                        nameservers:
                          description: |-
                            (List of String) A list of DNS name server IP addresses. This will be appended to the base nameservers generated from DNSPolicy. Duplicated nameservers will be removed.
                            A list of DNS name server IP addresses. This will be appended to the base nameservers generated from DNSPolicy. Duplicated nameservers will be removed.
                          items:
                            type: string
                          type: array
                        option:
                          description: |-
                            (Block List) A list of DNS resolver options. This will be merged with the base options generated from DNSPolicy. Duplicated entries will be removed. Resolution options given in Options will override those that appear in the base DNSPolicy. (see below for nested schema)
                            A list of DNS resolver options. This will be merged with the base options generated from DNSPolicy. Duplicated entries will be removed. Resolution options given in Options will override those that appear in the base DNSPolicy.
                          items:
                            properties:
                              name:
                                description: |-
                                  (String) Name of the virtual machine, must be unique. Cannot be updated.
                                  Name of the option.
                                type: string
                              value:
                                description: |-
                                  (String) Value of the option. Optional: Defaults to empty.
                                  Value of the option. Optional: Defaults to empty.
                                type: string
                            type: object
                          type: array
                        searches:
                          description: |-
                            name lookup. This will be appended to the base search paths generated from DNSPolicy. Duplicated search paths will be removed.
                            A list of DNS search domains for host-name lookup. This will be appended to the base search paths generated from DNSPolicy. Duplicated search paths will be removed.
                          items:
                            type: string
                          type: array
                      type: object
                    type: array
                  priorityClassName:
                    description: |-
                      (String) If specified, indicates the pod's priority. If not specified, the pod priority will be default or zero if there is no default.
                      If specified, indicates the pod's priority. If not specified, the pod priority will be default or zero if there is no default.
                    type: string
                  readinessProbe:
                    description: |-
                      (Block List, Max: 1) Specification of the desired behavior of the VirtualMachineInstance on the host. (see below for nested schema)
                      Specification of the desired behavior of the VirtualMachineInstance on the host.
                    items:
                      type: object
                    type: array
                  resources:
                    description: |-
                      (Block List, Min: 1, Max: 1) Resources describes the Compute Resources required by this vmi. (see below for nested schema)
                      Resources describes the Compute Resources required by this vmi.
                    items:
                      properties:
                        limits:
                          additionalProperties:
                            type: string
                          description: |-
                            (Map of String) Requests is the maximum amount of compute resources allowed. Valid resource keys are "memory" and "cpu"
                            Requests is the maximum amount of compute resources allowed. Valid resource keys are "memory" and "cpu"
                          type: object
                        overCommitGuestOverhead:
                          description: |-
                            management overhead into account. Instead put the overhead only into the container's memory limit. This can lead to crashes if all memory is in use on a node. Defaults to false.
                            Don't ask the scheduler to take the guest-management overhead into account. Instead put the overhead only into the container's memory limit. This can lead to crashes if all memory is in use on a node. Defaults to false.
                          type: boolean
                        requests:
                          additionalProperties:
                            type: string
                          description: |-
                            (Map of String) Requests is a description of the initial vmi resources.
                            Requests is a description of the initial vmi resources.
                          type: object
                      type: object
                    type: array
                  runOnLaunch:
                    description: |-
                      (Boolean) If set to true, the virtual machine will be started when the cluster is launched. Default value is true.
                      If set to `true`, the virtual machine will be started when the cluster is launched. Default value is `true`.
                    type: boolean
                  runStrategy:
                    description: |-
                      (String) Running state indicates the requested running state of the VirtualMachineInstance, mutually exclusive with Running.
                      Running state indicates the requested running state of the VirtualMachineInstance, mutually exclusive with Running.
                    type: string
                  schedulerName:
                    description: |-
                      (String) If specified, the VMI will be dispatched by specified scheduler. If not specified, the VMI will be dispatched by default scheduler.
                      If specified, the VMI will be dispatched by specified scheduler. If not specified, the VMI will be dispatched by default scheduler.
                    type: string
                  status:
                    description: |-
                      (Block List, Max: 1) VirtualMachineStatus represents the status returned by the controller to describe how the VirtualMachine is doing. (see below for nested schema)
                      VirtualMachineStatus represents the status returned by the controller to describe how the VirtualMachine is doing.
                    items:
                      properties:
                        conditions:
                          description: |-
                            (Block List, Min: 1) Hold the state information of the VirtualMachine and its VirtualMachineInstance. (see below for nested schema)
                            Hold the state information of the VirtualMachine and its VirtualMachineInstance.
                          items:
                            properties:
                              message:
                                description: |-
                                  (String) Condition message.
                                  Condition message.
                                type: string
                              reason:
                                description: |-
                                  (String) Condition reason.
                                  Condition reason.
                                type: string
                              status:
                                description: |-
                                  (Block List, Max: 1) VirtualMachineStatus represents the status returned by the controller to describe how the VirtualMachine is doing. (see below for nested schema)
                                  ConditionStatus represents the status of this VM condition, if the VM currently in the condition.
                                type: string
                              type:
                                description: |-
                                  (String) VirtualMachineConditionType represent the type of the VM as concluded from its VMi status.
                                  VirtualMachineConditionType represent the type of the VM as concluded from its VMi status.
                                type: string
                            type: object
                          type: array
                        created:
                          description: |-
                            (Boolean) Created indicates if the virtual machine is created in the cluster.
                            Created indicates if the virtual machine is created in the cluster.
                          type: boolean
                        ready:
                          description: |-
                            (Boolean) Ready indicates if the virtual machine is running and ready.
                            Ready indicates if the virtual machine is running and ready.
                          type: boolean
                        stateChangeRequests:
                          description: |-
                            (Block List, Min: 1) StateChangeRequests indicates a list of actions that should be taken on a VMI. (see below for nested schema)
                            StateChangeRequests indicates a list of actions that should be taken on a VMI.
                          items:
                            properties:
                              action:
                                description: |-
                                  (String) Indicates the type of action that is requested. e.g. Start or Stop.
                                  Indicates the type of action that is requested. e.g. Start or Stop.
                                type: string
                              data:
                                additionalProperties:
                                  type: string
                                description: |-
                                  (Map of String) Provides additional data in order to perform the Action.
                                  Provides additional data in order to perform the Action.
                                type: object
                              uid:
                                description: |-
                                  (String) The unique in time and space value for this VM.
                                  Indicates the UUID of an existing Virtual Machine Instance that this change request applies to -- if applicable.
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                  subdomain:
                    description: |-
                      (String) If specified, the fully qualified vmi hostname will be "...svc.".
                      If specified, the fully qualified vmi hostname will be "<hostname>.<subdomain>.<pod namespace>.svc.<cluster domain>".
                    type: string
                  terminationGracePeriodSeconds:
                    description: |-
                      (Number) Grace period observed after signalling a VirtualMachineInstance to stop after which the VirtualMachineInstance is force terminated.
                      Grace period observed after signalling a VirtualMachineInstance to stop after which the VirtualMachineInstance is force terminated.
                    type: number
                  tolerations:
                    description: |-
                      (Block List) If specified, the pod's toleration. Optional: Defaults to empty (see below for nested schema)
                      If specified, the pod's toleration. Optional: Defaults to empty
                    items:
                      properties:
                        effect:
                          description: |-
                            (String) Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
                            Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
                          type: string
                        key:
                          description: |-
                            (String) The label key that the selector applies to.
                            Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.
                          type: string
                        operator:
                          description: |-
                            (String) Operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                            Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.
                          type: string
                        tolerationSeconds:
                          description: |-
                            (String) TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.
                            TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.
                          type: string
                        value:
                          description: |-
                            (String) Value of the option. Optional: Defaults to empty.
                            Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.
                          type: string
                      type: object
                    type: array
                  vmAction:
                    description: |-
                      (String) The action to be performed on the virtual machine. Valid values are: start, stop, restart, pause, resume, migrate. Default value is start.
                      The action to be performed on the virtual machine. Valid values are: `start`, `stop`, `restart`, `pause`, `resume`, `migrate`. Default value is `start`.
                    type: string
                  volume:
                    description: |-
                      (Block List) Specification of the desired behavior of the VirtualMachineInstance on the host. (see below for nested schema)
                      Specification of the desired behavior of the VirtualMachineInstance on the host.
                    items:
                      properties:
                        name:
                          description: |-
                            (String) Name of the virtual machine, must be unique. Cannot be updated.
                            Volume's name.
                          type: string
                        volumeSource:
                          description: |-
                            (Block List, Min: 1, Max: 1) VolumeSource represents the location and type of the mounted volume. Defaults to Disk, if no type is specified. (see below for nested schema)
                            VolumeSource represents the location and type of the mounted volume. Defaults to Disk, if no type is specified.
                          items:
                            properties:
                              cloudInitConfigDrive:
                                description: |-
                                  init Config Drive user-data source. (see below for nested schema)
                                  CloudInitConfigDrive represents a cloud-init Config Drive user-data source.
                                items:
                                  properties:
                                    networkData:
                                      description: |-
                                        init networkdata.
                                        NetworkData contains config drive inline cloud-init networkdata.
                                      type: string
                                    networkDataBase64:
                                      description: |-
                                        init networkdata as a base64 encoded string.
                                        NetworkDataBase64 contains config drive cloud-init networkdata as a base64 encoded string.
                                      type: string
                                    networkDataSecretRef:
                                      description: |-
                                        (Block List, Max: 1) NetworkDataSecretRef references a k8s secret that contains config drive networkdata. (see below for nested schema)
                                        NetworkDataSecretRef references a k8s secret that contains config drive networkdata.
                                      items:
                                        properties:
                                          name:
                                            description: |-
                                              (String) Name of the virtual machine, must be unique. Cannot be updated.
                                              Name of the referent.
                                            type: string
                                        type: object
                                      type: array
                                    userData:
                                      description: |-
                                        init userdata.
                                        UserData contains config drive inline cloud-init userdata.
                                      type: string
                                    userDataBase64:
                                      description: |-
                                        init userdata as a base64 encoded string.
                                        UserDataBase64 contains config drive cloud-init userdata as a base64 encoded string.
                                      type: string
                                    userDataSecretRef:
                                      description: |-
                                        (Block List, Max: 1) UserDataSecretRef references a k8s secret that contains config drive userdata. (see below for nested schema)
                                        UserDataSecretRef references a k8s secret that contains config drive userdata.
                                      items:
                                        properties:
                                          name:
                                            description: |-
                                              (String) Name of the virtual machine, must be unique. Cannot be updated.
                                              Name of the referent.
                                            type: string
                                        type: object
                                      type: array
                                  type: object
                                type: array
                              cloudInitNoCloud:
                                description: |-
                                  init noCloud image. The image is expected to contain a disk image in a supported format. The disk image is extracted from the cloud-init noCloud image and used as the disk for the VM (see below for nested schema)
                                  Used to specify a cloud-init `noCloud` image. The image is expected to contain a disk image in a supported format. The disk image is extracted from the cloud-init `noCloud `image and used as the disk for the VM
                                items:
                                  properties:
                                    userData:
                                      description: |-
                                        init userdata.
                                        The user data to use for the cloud-init no cloud disk. This can be a local file path, a remote URL, or a registry URL.
                                      type: string
                                  type: object
                                type: array
                              configMap:
                                description: |-
                                  (Block List, Max: 1) ConfigMapVolumeSource adapts a ConfigMap into a volume. (see below for nested schema)
                                  ConfigMapVolumeSource adapts a ConfigMap into a volume.
                                items:
                                  properties:
                                    defaultMode:
                                      description: |-
                                        (Number) Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
                                        Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
                                      type: number
                                    items:
                                      description: |-
                                        value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'. (see below for nested schema)
                                        If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
                                      items:
                                        properties:
                                          key:
                                            description: (String) The label key that
                                              the selector applies to.
                                            type: string
                                        type: object
                                      type: array
                                  type: object
                                type: array
                              containerDisk:
                                description: |-
                                  (Block Set) A container disk is a disk that is backed by a container image. The container image is expected to contain a disk image in a supported format. The disk image is extracted from the container image and used as the disk for the VM. (see below for nested schema)
                                  A container disk is a disk that is backed by a container image. The container image is expected to contain a disk image in a supported format. The disk image is extracted from the container image and used as the disk for the VM.
                                items:
                                  properties:
                                    imageUrl:
                                      description: |-
                                        (String) The registry URL of the image to download.
                                        The URL of the container image to use as the disk. This can be a local file path, a remote URL, or a registry URL.
                                      type: string
                                  type: object
                                type: array
                              dataVolume:
                                description: |-
                                  (Block List, Max: 1) DataVolume represents the dynamic creation a PVC for this volume as well as the process of populating that PVC with a disk image. (see below for nested schema)
                                  DataVolume represents the dynamic creation a PVC for this volume as well as the process of populating that PVC with a disk image.
                                items:
                                  properties:
                                    name:
                                      description: |-
                                        (String) Name of the virtual machine, must be unique. Cannot be updated.
                                        Name represents the name of the DataVolume in the same namespace.
                                      type: string
                                  type: object
                                type: array
                              emptyDisk:
                                description: |-
                                  (Block List, Max: 1) EmptyDisk represents a temporary disk which shares the VM's lifecycle. (see below for nested schema)
                                  EmptyDisk represents a temporary disk which shares the VM's lifecycle.
                                items:
                                  properties:
                                    capacity:
                                      description: |-
                                        (String) Capacity of the sparse disk.
                                        Capacity of the sparse disk.
                                      type: string
                                  type: object
                                type: array
                              ephemeral:
                                description: |-
                                  (Block List, Max: 1) EphemeralVolumeSource represents a volume that is populated with the contents of a pod. Ephemeral volumes do not support ownership management or SELinux relabeling. (see below for nested schema)
                                  EphemeralVolumeSource represents a volume that is populated with the contents of a pod. Ephemeral volumes do not support ownership management or SELinux relabeling.
                                items:
                                  properties:
                                    persistentVolumeClaim:
                                      description: |-
                                        (Block List, Max: 1) PersistentVolumeClaimVolumeSource represents a reference to a PersistentVolumeClaim in the same namespace. (see below for nested schema)
                                        PersistentVolumeClaimVolumeSource represents a reference to a PersistentVolumeClaim in the same namespace.
                                      items:
                                        properties:
                                          claimName:
                                            description: |-
                                              volumes#persistentvolumeclaims
                                              ClaimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
                                            type: string
                                          readOnly:
                                            description: |-
                                              (Boolean) ReadOnly. Defaults to false.
                                              Will force the ReadOnly setting in VolumeMounts. Default false.
                                            type: boolean
                                        type: object
                                      type: array
                                  type: object
                                type: array
                              hostDisk:
                                description: |-
                                  (Block List, Max: 1) HostDisk represents a disk created on the host. (see below for nested schema)
                                  HostDisk represents a disk created on the host.
                                items:
                                  properties:
                                    path:
                                      description: |-
                                        (String) Path of the disk.
                                        Path of the disk.
                                      type: string
                                    type:
                                      description: |-
                                        (String) VirtualMachineConditionType represent the type of the VM as concluded from its VMi status.
                                        Type of the disk, supported values are disk, directory, socket, char, block.
                                      type: string
                                  type: object
                                type: array
                              persistentVolumeClaim:
                                description: |-
                                  (Block List, Max: 1) PersistentVolumeClaimVolumeSource represents a reference to a PersistentVolumeClaim in the same namespace. (see below for nested schema)
                                  PersistentVolumeClaimVolumeSource represents a reference to a PersistentVolumeClaim in the same namespace.
                                items:
                                  properties:
                                    claimName:
                                      description: |-
                                        volumes#persistentvolumeclaims
                                        ClaimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
                                      type: string
                                    readOnly:
                                      description: |-
                                        (Boolean) ReadOnly. Defaults to false.
                                        Will force the ReadOnly setting in VolumeMounts. Default false.
                                      type: boolean
                                  type: object
                                type: array
                              serviceAccount:
                                description: |-
                                  (Block List, Max: 1) ServiceAccountVolumeSource represents a reference to a service account. (see below for nested schema)
                                  ServiceAccountVolumeSource represents a reference to a service account.
                                items:
                                  properties:
                                    serviceAccountName:
                                      description: |-
                                        (String) Name of the service account in the pod's namespace to use.
                                        Name of the service account in the pod's namespace to use.
                                      type: string
                                  type: object
                                type: array
                            type: object
                          type: array
                      type: object
                    type: array
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  affinity:
                    description: |-
                      (Block List, Max: 1) Optional pod scheduling constraints. (see below for nested schema)
                      Optional pod scheduling constraints.
                    items:
                      properties:
                        nodeAffinity:
                          description: |-
                            (Block List, Max: 1) Node affinity scheduling rules for the pod. (see below for nested schema)
                            Node affinity scheduling rules for the pod.
                          items:
                            properties:
                              preferredDuringSchedulingIgnoredDuringExecution:
                                description: |-
                                  (Block List) The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, RequiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding 'weight' to the sum if the node matches the corresponding MatchExpressions; the node(s) with the highest sum are the most preferred. (see below for nested schema)
                                  The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, RequiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding 'weight' to the sum if the node matches the corresponding MatchExpressions; the node(s) with the highest sum are the most preferred.
                                items:
                                  properties:
                                    preference:
                                      description: |-
                                        (Block List, Min: 1, Max: 1) A node selector term, associated with the corresponding weight. (see below for nested schema)
                                        A node selector term, associated with the corresponding weight.
                                      items:
                                        properties:
                                          matchExpressions:
                                            description: |-
                                              (Block List) List of node selector requirements. The requirements are ANDed. (see below for nested schema)
                                              List of node selector requirements. The requirements are ANDed.
                                            items:
                                              properties:
                                                key:
                                                  description: |-
                                                    (String) The label key that the selector applies to.
                                                    The label key that the selector applies to.
                                                  type: string
                                                operator:
                                                  description: |-
                                                    (String) Operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                    Operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                  type: string
                                                values:
                                                  description: |-
                                                    empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
                                                    Values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                        type: object
                                      type: array
                                    weight:
                                      description: |-
                                        100
                                        weight is in the range 1-100
                                      type: number
                                  type: object
                                type: array
                              requiredDuringSchedulingIgnoredDuringExecution:
                                description: |-
                                  (Block List, Max: 1) If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a node label update), the system may or may not try to eventually evict the pod from its node. (see below for nested schema)
                                  If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a node label update), the system may or may not try to eventually evict the pod from its node.
                                items:
                                  properties:
                                    nodeSelectorTerm:
                                      description: |-
                                        (Block List) List of node selector terms. The terms are ORed. (see below for nested schema)
                                        List of node selector terms. The terms are ORed.
                                      items:
                                        properties:
                                          matchExpressions:
                                            description: |-
                                              (Block List) List of node selector requirements. The requirements are ANDed. (see below for nested schema)
                                              List of node selector requirements. The requirements are ANDed.
                                            items:
                                              properties:
                                                key:
                                                  description: |-
                                                    (String) The label key that the selector applies to.
                                                    The label key that the selector applies to.
                                                  type: string
                                                operator:
                                                  description: |-
                                                    (String) Operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                    Operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                  type: string
                                                values:
                                                  description: |-
                                                    empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
                                                    Values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                        type: object
                                      type: array
                                  type: object
                                type: array
                            type: object
                          type: array
                        podAffinity:
                          description: |-
                            pod topological affinity. rules that specify that certain pods should be placed in the same topological domain (e.g. same node, same rack, same zone, same power domain, etc.) (see below for nested schema)
                            Inter-pod topological affinity. rules that specify that certain pods should be placed in the same topological domain (e.g. same node, same rack, same zone, same power domain, etc.)
                          items:
                            properties:
                              preferredDuringSchedulingIgnoredDuringExecution:
                                description: |-
                                  (Block List) The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, RequiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding 'weight' to the sum if the node matches the corresponding MatchExpressions; the node(s) with the highest sum are the most preferred. (see below for nested schema)
                                  The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, RequiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding 'weight' to the sum if the node matches the corresponding MatchExpressions; the node(s) with the highest sum are the most preferred.
                                items:
                                  properties:
                                    podAffinityTerm:
                                      description: |-
                                        (Block List, Min: 1, Max: 1) A pod affinity term, associated with the corresponding weight (see below for nested schema)
                                        A pod affinity term, associated with the corresponding weight
                                      items:
                                        properties:
                                          labelSelector:
                                            description: |-
                                              (Block List) A label query over a set of resources, in this case pods. (see below for nested schema)
                                              A label query over a set of resources, in this case pods.
                                            items:
                                              properties:
                                                matchExpressions:
                                                  description: |-
                                                    (Block List) List of node selector requirements. The requirements are ANDed. (see below for nested schema)
                                                    A list of label selector requirements. The requirements are ANDed.
                                                  items:
                                                    properties:
                                                      key:
                                                        description: |-
                                                          (String) The label key that the selector applies to.
                                                          The label key that the selector applies to.
                                                        type: string
                                                      operator:
                                                        description: |-
                                                          (String) Operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                          A key's relationship to a set of values. Valid operators ard `In`, `NotIn`, `Exists` and `DoesNotExist`.
                                                        type: string
                                                      values:
                                                        description: |-
                                                          empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
                                                          An array of string values. If the operator is `In` or `NotIn`, the values array must be non-empty. If the operator is `Exists` or `DoesNotExist`, the values array must be empty. This array is replaced during a strategic merge patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    type: object
                                                  type: array
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  description: |-
                                                    (Map of String) A map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of match_expressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                    A map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of `match_expressions`, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                  type: object
                                              type: object
                                            type: array
                                          namespaces:
                                            description: |-
                                              (Set of String) namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means 'this pod's namespace'
                                              namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means 'this pod's namespace'
                                            items:
                                              type: string
                                            type: array
                                          topologyKey:
                                            description: |-
                                              (String) empty topology key is interpreted by the scheduler as 'all topologies'
                                              empty topology key is interpreted by the scheduler as 'all topologies'
                                            type: string
                                        type: object
                                      type: array
                                    weight:
                                      description: |-
                                        100
                                        weight associated with matching the corresponding podAffinityTerm, in the range 1-100
                                      type: number
                                  type: object
                                type: array
                              requiredDuringSchedulingIgnoredDuringExecution:
                                description: |-
                                  (Block List, Max: 1) If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a node label update), the system may or may not try to eventually evict the pod from its node. (see below for nested schema)
                                  If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each PodAffinityTerm are intersected, i.e. all terms must be satisfied.
                                items:
                                  properties:
                                    labelSelector:
                                      description: |-
                                        (Block List) A label query over a set of resources, in this case pods. (see below for nested schema)
                                        A label query over a set of resources, in this case pods.
                                      items:
                                        properties:
                                          matchExpressions:
                                            description: |-
                                              (Block List) List of node selector requirements. The requirements are ANDed. (see below for nested schema)
                                              A list of label selector requirements. The requirements are ANDed.
                                            items:
                                              properties:
                                                key:
                                                  description: |-
                                                    (String) The label key that the selector applies to.
                                                    The label key that the selector applies to.
                                                  type: string
                                                operator:
                                                  description: |-
                                                    (String) Operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                    A key's relationship to a set of values. Valid operators ard `In`, `NotIn`, `Exists` and `DoesNotExist`.
                                                  type: string
                                                values:
                                                  description: |-
                                                    empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
                                                    An array of string values. If the operator is `In` or `NotIn`, the values array must be non-empty. If the operator is `Exists` or `DoesNotExist`, the values array must be empty. This array is replaced during a strategic merge patch.
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                          matchLabels:
                                            additionalProperties:
                                              type: string
                                            description: |-
                                              (Map of String) A map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of match_expressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                              A map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of `match_expressions`, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                            type: object
                                        type: object
                                      type: array
                                    namespaces:
                                      description: |-
                                        (Set of String) namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means 'this pod's namespace'
                                        namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means 'this pod's namespace'
                                      items:
                                        type: string
                                      type: array
                                    topologyKey:
                                      description: |-
                                        (String) empty topology key is interpreted by the scheduler as 'all topologies'
                                        empty topology key is interpreted by the scheduler as 'all topologies'
                                      type: string
                                  type: object
                                type: array
                            type: object
                          type: array
                        podAntiAffinity:
                          description: |-
                            pod topological affinity. rules that specify that certain pods should be placed in the same topological domain (e.g. same node, same rack, same zone, same power domain, etc.) (see below for nested schema)
                            Inter-pod topological affinity. rules that specify that certain pods should be placed in the same topological domain (e.g. same node, same rack, same zone, same power domain, etc.)
                          items:
                            properties:
                              preferredDuringSchedulingIgnoredDuringExecution:
                                description: |-
                                  (Block List) The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, RequiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding 'weight' to the sum if the node matches the corresponding MatchExpressions; the node(s) with the highest sum are the most preferred. (see below for nested schema)
                                  The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, RequiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding 'weight' to the sum if the node matches the corresponding MatchExpressions; the node(s) with the highest sum are the most preferred.
                                items:
                                  properties:
                                    podAffinityTerm:
                                      description: |-
                                        (Block List, Min: 1, Max: 1) A pod affinity term, associated with the corresponding weight (see below for nested schema)
                                        A pod affinity term, associated with the corresponding weight
                                      items:
                                        properties:
                                          labelSelector:
                                            description: |-
                                              (Block List) A label query over a set of resources, in this case pods. (see below for nested schema)
                                              A label query over a set of resources, in this case pods.
                                            items:
                                              properties:
                                                matchExpressions:
                                                  description: |-
                                                    (Block List) List of node selector requirements. The requirements are ANDed. (see below for nested schema)
                                                    A list of label selector requirements. The requirements are ANDed.
                                                  items:
                                                    properties:
                                                      key:
                                                        description: |-
                                                          (String) The label key that the selector applies to.
                                                          The label key that the selector applies to.
                                                        type: string
                                                      operator:
                                                        description: |-
                                                          (String) Operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                          A key's relationship to a set of values. Valid operators ard `In`, `NotIn`, `Exists` and `DoesNotExist`.
                                                        type: string
                                                      values:
                                                        description: |-
                                                          empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
                                                          An array of string values. If the operator is `In` or `NotIn`, the values array must be non-empty. If the operator is `Exists` or `DoesNotExist`, the values array must be empty. This array is replaced during a strategic merge patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    type: object
                                                  type: array
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  description: |-
                                                    (Map of String) A map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of match_expressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                    A map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of `match_expressions`, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                  type: object
                                              type: object
                                            type: array
                                          namespaces:
                                            description: |-
                                              (Set of String) namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means 'this pod's namespace'
                                              namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means 'this pod's namespace'
                                            items:
                                              type: string
                                            type: array
                                          topologyKey:
                                            description: |-
                                              (String) empty topology key is interpreted by the scheduler as 'all topologies'
                                              empty topology key is interpreted by the scheduler as 'all topologies'
                                            type: string
                                        type: object
                                      type: array
                                    weight:
                                      description: |-
                                        100
                                        weight associated with matching the corresponding podAffinityTerm, in the range 1-100
                                      type: number
                                  type: object
                                type: array
                              requiredDuringSchedulingIgnoredDuringExecution:
                                description: |-
                                  (Block List, Max: 1) If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a node label update), the system may or may not try to eventually evict the pod from its node. (see below for nested schema)
                                  If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each PodAffinityTerm are intersected, i.e. all terms must be satisfied.
                                items:
                                  properties:
                                    labelSelector:
                                      description: |-
                                        (Block List) A label query over a set of resources, in this case pods. (see below for nested schema)
                                        A label query over a set of resources, in this case pods.
                                      items:
                                        properties:
                                          matchExpressions:
                                            description: |-
                                              (Block List) List of node selector requirements. The requirements are ANDed. (see below for nested schema)
                                              A list of label selector requirements. The requirements are ANDed.
                                            items:
                                              properties:
                                                key:
                                                  description: |-
                                                    (String) The label key that the selector applies to.
                                                    The label key that the selector applies to.
                                                  type: string
                                                operator:
                                                  description: |-
                                                    (String) Operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                    A key's relationship to a set of values. Valid operators ard `In`, `NotIn`, `Exists` and `DoesNotExist`.
                                                  type: string
                                                values:
                                                  description: |-
                                                    empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
                                                    An array of string values. If the operator is `In` or `NotIn`, the values array must be non-empty. If the operator is `Exists` or `DoesNotExist`, the values array must be empty. This array is replaced during a strategic merge patch.
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                          matchLabels:
                                            additionalProperties:
                                              type: string
                                            description: |-
                                              (Map of String) A map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of match_expressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                              A map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of `match_expressions`, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                            type: object
                                        type: object
                                      type: array
                                    namespaces:
                                      description: |-
                                        (Set of String) namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means 'this pod's namespace'
                                        namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means 'this pod's namespace'
                                      items:
                                        type: string
                                      type: array
                                    topologyKey:
                                      description: |-
                                        (String) empty topology key is interpreted by the scheduler as 'all topologies'
                                        empty topology key is interpreted by the scheduler as 'all topologies'
                                      type: string
                                  type: object
                                type: array
                            type: object
                          type: array
                      type: object
                    type: array
                  annotations:
                    additionalProperties:
                      type: string
                    description: |-
                      (Map of String) An unstructured key value map stored with the VM that may be used to store arbitrary metadata.
                      An unstructured key value map stored with the VM that may be used to store arbitrary metadata.
                    type: object
                  baseVmName:
                    description: |-
                      (String) The name of the source virtual machine that a clone will be created of.
                      The name of the source virtual machine that a clone will be created of.
                    type: string
                  clusterContext:
                    description: |-
                      (String) Context of the cluster. Allowed values are project, tenant. Default value is project.
                      Context of the cluster. Allowed values are `project`, `tenant`. Default value is `project`.
                    type: string
                  clusterUid:
                    description: |-
                      (String) The cluster UID to which the virtual machine belongs to.
                      The cluster UID to which the virtual machine belongs to.
                    type: string
                  cpu:
                    description: |-
                      (Block List, Max: 1) CPU allows to specifying the CPU topology. Valid resource keys are "cores" , "sockets" and "threads" (see below for nested schema)
                      CPU allows to specifying the CPU topology. Valid resource keys are "cores" , "sockets" and "threads"
                    items:
                      properties:
                        cores:
                          description: |-
                            (Number) Cores is the number of cores inside the vmi. Must be a value greater or equal 1
                            Cores is the number of cores inside the vmi. Must be a value greater or equal 1
                          type: number
                        sockets:
                          description: |-
                            (Number) Sockets is the number of sockets inside the vmi. Must be a value greater or equal 1.
                            Sockets is the number of sockets inside the vmi. Must be a value greater or equal 1.
                          type: number
                        threads:
                          description: |-
                            (Number) Threads is the number of threads inside the vmi. Must be a value greater or equal 1.
                            Threads is the number of threads inside the vmi. Must be a value greater or equal 1.
                          type: number
                      type: object
                    type: array
                  dataVolumeTemplates:
                    description: |-
                      (Block List) dataVolumeTemplates is a list of dataVolumes that the VirtualMachineInstance template can reference. (see below for nested schema)
                      dataVolumeTemplates is a list of dataVolumes that the VirtualMachineInstance template can reference.
                    items:
                      properties:
                        metadata:
                          description: |-
                            architecture/api-conventions.md#metadata (see below for nested schema)
                            Standard DataVolume's metadata. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#metadata
                          items:
                            properties:
                              annotations:
                                additionalProperties:
                                  type: string
                                description: |-
                                  (Map of String) An unstructured key value map stored with the VM that may be used to store arbitrary metadata.
                                  An unstructured key value map stored with the DataVolume that may be used to store arbitrary metadata. More info: http://kubernetes.io/docs/user-guide/annotations
                                type: object
                              labels:
                                additionalProperties:
                                  type: string
                                description: |-
                                  (Map of String) Map of string keys and values that can be used to organize and categorize (scope and select). May match selectors of replication controllers and services.
                                  Map of string keys and values that can be used to organize and categorize (scope and select) the DataVolume. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels
                                type: object
                              name:
                                description: |-
                                  (String) Name of the virtual machine, must be unique. Cannot be updated.
                                  Name of the DataVolume, must be unique. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names
                                type: string
                              namespace:
                                description: |-
                                  (String) Namespace defines the space within, Name must be unique.
                                  Namespace defines the space within which name of the DataVolume must be unique.
                                type: string
                            type: object
                          type: array
                        spec:
                          description: |-
                            (Block List, Min: 1, Max: 1) DataVolumeSpec defines our specification for a DataVolume type (see below for nested schema)
                            DataVolumeSpec defines our specification for a DataVolume type
                          items:
                            properties:
                              contentType:
                                description: |-
                                  (String) ContentType options: "kubevirt", "archive".
                                  ContentType options: "kubevirt", "archive".
                                type: string
                              pvc:
                                description: |-
                                  (Block List, Min: 1, Max: 1) PVC is a pointer to the PVC Spec we want to use. (see below for nested schema)
                                  PVC is a pointer to the PVC Spec we want to use.
                                items:
                                  properties:
                                    accessModes:
                                      description: |-
                                        guide/persistent-volumes#access-modes-1
                                        A set of the desired access modes the volume should have. More info: http://kubernetes.io/docs/user-guide/persistent-volumes#access-modes-1
                                      items:
                                        type: string
                                      type: array
                                    resources:
                                      description: |-
                                        (Block List, Min: 1, Max: 1) Resources describes the Compute Resources required by this vmi. (see below for nested schema)
                                        A list of the minimum resources the volume should have. More info: http://kubernetes.io/docs/user-guide/persistent-volumes#resources
                                      items:
                                        properties:
                                          limits:
                                            additionalProperties:
                                              type: string
                                            description: |-
                                              (Map of String) Requests is the maximum amount of compute resources allowed. Valid resource keys are "memory" and "cpu"
                                              Map describing the maximum amount of compute resources allowed. More info: http://kubernetes.io/docs/user-guide/compute-resources/
                                            type: object
                                          requests:
                                            additionalProperties:
                                              type: string
                                            description: |-
                                              (Map of String) Requests is a description of the initial vmi resources.
                                              Map describing the minimum amount of compute resources required. If this is omitted for a container, it defaults to `limits` if that is explicitly specified, otherwise to an implementation-defined value. More info: http://kubernetes.io/docs/user-guide/compute-resources/
                                            type: object
                                        type: object
                                      type: array
                                    selector:
                                      description: |-
                                        (Block List, Max: 1) A label query over volumes to consider for binding. (see below for nested schema)
                                        A label query over volumes to consider for binding.
                                      items:
                                        properties:
                                          matchExpressions:
                                            description: |-
                                              (Block List) List of node selector requirements. The requirements are ANDed. (see below for nested schema)
                                              A list of label selector requirements. The requirements are ANDed.
                                            items:
                                              properties:
                                                key:
                                                  description: |-
                                                    (String) The label key that the selector applies to.
                                                    The label key that the selector applies to.
                                                  type: string
                                                operator:
                                                  description: |-
                                                    (String) Operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                    A key's relationship to a set of values. Valid operators ard `In`, `NotIn`, `Exists` and `DoesNotExist`.
                                                  type: string
                                                values:
                                                  description: |-
                                                    empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
                                                    An array of string values. If the operator is `In` or `NotIn`, the values array must be non-empty. If the operator is `Exists` or `DoesNotExist`, the values array must be empty. This array is replaced during a strategic merge patch.
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                          matchLabels:
                                            additionalProperties:
                                              type: string
                                            description: |-
                                              (Map of String) A map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of match_expressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                              A map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of `match_expressions`, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                            type: object
                                        type: object
                                      type: array
                                    storageClassName:
                                      description: |-
                                        (String) Name of the storage class requested by the claim
                                        Name of the storage class requested by the claim
                                      type: string
                                    volumeMode:
                                      description: |-
                                        (String) volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec.
                                        volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec.
                                      type: string
                                    volumeName:
                                      description: |-
                                        (String) The binding reference to the PersistentVolume backing this claim.
                                        The binding reference to the PersistentVolume backing this claim.
                                      type: string
                                  type: object
                                type: array
                              source:
                                description: |-
                                  (Block List, Max: 1) Source is the src of the data for the requested DataVolume. (see below for nested schema)
                                  Source is the src of the data for the requested DataVolume.
                                items:
                                  properties:
                                    blank:
                                      description: |-
                                        (Block List, Max: 1) DataVolumeSourceBlank provides the parameters to create a Data Volume from an empty source. (see below for nested schema)
                                        DataVolumeSourceBlank provides the parameters to create a Data Volume from an empty source.
                                      items:
                                        type: object
                                      type: array
                                    http:
                                      description: |-
                                        (Block List, Max: 1) DataVolumeSourceHTTP provides the parameters to create a Data Volume from an HTTP source. (see below for nested schema)
                                        DataVolumeSourceHTTP provides the parameters to create a Data Volume from an HTTP source.
                                      items:
                                        properties:
                                          certConfigMap:
                                            description: |-
                                              (String) Cert_config_map provides a reference to the Registry certs.
                                              Cert_config_map provides a reference to the Registry certs.
                                            type: string
                                          secretRef:
                                            description: |-
                                              (String) Secret_ref provides the secret reference needed to access the HTTP source.
                                              Secret_ref provides the secret reference needed to access the HTTP source.
                                            type: string
                                          url:
                                            description: |-
                                              (String) url is the URL of the http source.
                                              url is the URL of the http source.
                                            type: string
                                        type: object
                                      type: array
                                    pvc:
                                      description: |-
                                        (Block List, Min: 1, Max: 1) PVC is a pointer to the PVC Spec we want to use. (see below for nested schema)
                                        DataVolumeSourcePVC provides the parameters to create a Data Volume from an existing PVC.
                                      items:
                                        properties:
                                          name:
                                            description: |-
                                              (String) Name of the virtual machine, must be unique. Cannot be updated.
                                              The name of the PVC.
                                            type: string
                                          namespace:
                                            description: |-
                                              (String) Namespace defines the space within, Name must be unique.
                                              The namespace which the PVC located in.
                                            type: string
                                        type: object
                                      type: array
                                    registry:
                                      description: |-
                                        (Block List, Max: 1) DataVolumeSourceRegistry provides the parameters to create a Data Volume from an existing PVC. (see below for nested schema)
                                        DataVolumeSourceRegistry provides the parameters to create a Data Volume from an existing PVC.
                                      items:
                                        properties:
                                          imageUrl:
                                            description: |-
                                              (String) The registry URL of the image to download.
                                              The registry URL of the image to download.
                                            type: string
                                        type: object
                                      type: array
                                  type: object
                                type: array
                            type: object
                          type: array
                      type: object
                    type: array
                  disk:
                    description: |-
                      (Block List) Disks describes disks, cdroms, floppy and luns which are connected to the vmi. (see below for nested schema)
                      Disks describes disks, cdroms, floppy and luns which are connected to the vmi.
                    items:
                      properties:
                        diskDevice:
                          description: |-
                            (Block List, Min: 1) DiskDevice specifies as which device the disk should be added to the guest. (see below for nested schema)
                            DiskDevice specifies as which device the disk should be added to the guest.
                          items:
                            properties:
                              disk:
                                description: |-
                                  (Block List) Disks describes disks, cdroms, floppy and luns which are connected to the vmi. (see below for nested schema)
                                  Attach a volume as a disk to the vmi.
                                items:
                                  properties:
                                    bus:
                                      description: |-
                                        (String) Bus indicates the type of disk device to emulate.
                                        Bus indicates the type of disk device to emulate.
                                      type: string
                                    pciAddress:
                                      description: |-
                                        (String) If specified, the virtual disk will be placed on the guests pci address with the specifed PCI address. For example: 0000:81:01.10
                                        If specified, the virtual disk will be placed on the guests pci address with the specifed PCI address. For example: 0000:81:01.10
                                      type: string
                                    readOnly:
                                      description: |-
                                        (Boolean) ReadOnly. Defaults to false.
                                        ReadOnly. Defaults to false.
                                      type: boolean
                                  type: object
                                type: array
                            type: object
                          type: array
                        name:
                          description: |-
                            (String) Name of the virtual machine, must be unique. Cannot be updated.
                            Name is the device name
                          type: string
                        serial:
                          description: |-
                            (String) Serial provides the ability to specify a serial number for the disk device.
                            Serial provides the ability to specify a serial number for the disk device.
                          type: string
                      type: object
                    type: array
                  dnsPolicy:
                    description: |-
                      (String) DNSPolicy defines how a pod's DNS will be configured.
                      DNSPolicy defines how a pod's DNS will be configured.
                    type: string
                  evictionStrategy:
                    description: |-
                      off in case of a node drain.
                      EvictionStrategy can be set to "LiveMigrate" if the VirtualMachineInstance should be migrated instead of shut-off in case of a node drain.
                    type: string
                  generateName:
                    description: |-
                      architecture/api-conventions.md#idempotency
                      Prefix, used by the server, to generate a unique name ONLY IF the `name` field has not been provided. This value will also be combined with a unique suffix. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#idempotency
                    type: string
                  hostname:
                    description: |-
                      (String) Specifies the hostname of the vmi.
                      Specifies the hostname of the vmi.
                    type: string
                  interface:
                    description: |-
                      (Block List) Interfaces describe network interfaces which are added to the vmi. (see below for nested schema)
                      Interfaces describe network interfaces which are added to the vmi.
                    items:
                      properties:
                        interfaceBindingMethod:
                          description: |-
                            (String) Represents the Interface model, One of: e1000, e1000e, ne2k_pci, pcnet, rtl8139, virtio. Defaults to virtio.
                            Represents the Interface model, One of: e1000, e1000e, ne2k_pci, pcnet, rtl8139, virtio. Defaults to virtio.
                          type: string
                        model:
                          description: |-
                            (String) Represents the method which will be used to connect the interface to the guest.
                            Represents the method which will be used to connect the interface to the guest.
                          type: string
                        name:
                          description: |-
                            (String) Name of the virtual machine, must be unique. Cannot be updated.
                            Logical name of the interface as well as a reference to the associated networks.
                          type: string
                      type: object
                    type: array
                  labels:
                    additionalProperties:
                      type: string
                    description: |-
                      (Map of String) Map of string keys and values that can be used to organize and categorize (scope and select). May match selectors of replication controllers and services.
                      Map of string keys and values that can be used to organize and categorize (scope and select). May match selectors of replication controllers and services.
                    type: object
                  livenessProbe:
                    description: |-
                      (Block List, Max: 1) Specification of the desired behavior of the VirtualMachineInstance on the host. (see below for nested schema)
                      Specification of the desired behavior of the VirtualMachineInstance on the host.
                    items:
                      type: object
                    type: array
                  memory:
                    description: |-
                      (Block List, Max: 1) Memory allows specifying the vmi memory features. (see below for nested schema)
                      Memory allows specifying the vmi memory features.
                    items:
                      properties:
                        guest:
                          description: |-
                            (String) Guest is the amount of memory allocated to the vmi. This value must be less than or equal to the limit if specified.
                            Guest is the amount of memory allocated to the vmi. This value must be less than or equal to the limit if specified.
                          type: string
                        hugepages:
                          description: |-
                            (String) Hugepages attribute specifies the hugepage size, for x86_64 architecture valid values are 1Gi and 2Mi.
                            Hugepages attribute specifies the hugepage size, for x86_64 architecture valid values are 1Gi and 2Mi.
                          type: string
                      type: object
                    type: array
                  namespace:
                    description: |-
                      (String) Namespace defines the space within, Name must be unique.
                      Namespace defines the space within, Name must be unique.
                    type: string
                  network:
                    description: |-
                      (Block List) List of networks that can be attached to a vm's virtual interface. (see below for nested schema)
                      List of networks that can be attached to a vm's virtual interface.
                    items:
                      properties:
                        name:
                          description: |-
                            (String) Name of the virtual machine, must be unique. Cannot be updated.
                            Network name.
                          type: string
                        networkSource:
                          description: |-
                            (Block List, Max: 1) NetworkSource represents the network type and the source interface that should be connected to the virtual machine. (see below for nested schema)
                            NetworkSource represents the network type and the source interface that should be connected to the virtual machine.
                          items:
                            properties:
                              multus:
                                description: |-
                                  (Block List, Max: 1) Multus network. (see below for nested schema)
                                  Multus network.
                                items:
                                  properties:
                                    default:
                                      description: |-
                                        cni.io/default-network annotation.
                                        Select the default network and add it to the multus-cni.io/default-network annotation.
                                      type: boolean
                                    networkName:
                                      description: |-
                                        (String) References to a NetworkAttachmentDefinition CRD object. Format: , /. If namespace is not specified, VMI namespace is assumed.
                                        References to a NetworkAttachmentDefinition CRD object. Format: <networkName>, <namespace>/<networkName>. If namespace is not specified, VMI namespace is assumed.
                                      type: string
                                  type: object
                                type: array
                              pod:
                                description: |-
                                  (Block List, Max: 1) Pod network. (see below for nested schema)
                                  Pod network.
                                items:
                                  properties:
                                    vmNetworkCidr:
                                      description: |-
                                        (String) CIDR for vm network.
                                        CIDR for vm network.
                                      type: string
                                  type: object
                                type: array
                            type: object
                          type: array
                      type: object
                    type: array
                  nodeSelector:
                    additionalProperties:
                      type: string
                    description: |-
                      (Map of String) NodeSelector is a selector which must be true for the vmi to fit on a node. Selector which must match a node's labels for the vmi to be scheduled on that node.
                      NodeSelector is a selector which must be true for the vmi to fit on a node. Selector which must match a node's labels for the vmi to be scheduled on that node.
                    type: object
                  podDnsConfig:
                    description: |-
                      (Block List, Max: 1) Specifies the DNS parameters of a pod. Parameters specified here will be merged to the generated DNS configuration based on DNSPolicy. Optional: Defaults to empty (see below for nested schema)
                      Specifies the DNS parameters of a pod. Parameters specified here will be merged to the generated DNS configuration based on DNSPolicy. Optional: Defaults to empty
                    items:
                      properties:
                        nameservers:
                          description: |-
                            (List of String) A list of DNS name server IP addresses. This will be appended to the base nameservers generated from DNSPolicy. Duplicated nameservers will be removed.
                            A list of DNS name server IP addresses. This will be appended to the base nameservers generated from DNSPolicy. Duplicated nameservers will be removed.
                          items:
                            type: string
                          type: array
                        option:
                          description: |-
                            (Block List) A list of DNS resolver options. This will be merged with the base options generated from DNSPolicy. Duplicated entries will be removed. Resolution options given in Options will override those that appear in the base DNSPolicy. (see below for nested schema)
                            A list of DNS resolver options. This will be merged with the base options generated from DNSPolicy. Duplicated entries will be removed. Resolution options given in Options will override those that appear in the base DNSPolicy.
                          items:
                            properties:
                              name:
                                description: |-
                                  (String) Name of the virtual machine, must be unique. Cannot be updated.
                                  Name of the option.
                                type: string
                              value:
                                description: |-
                                  (String) Value of the option. Optional: Defaults to empty.
                                  Value of the option. Optional: Defaults to empty.
                                type: string
                            type: object
                          type: array
                        searches:
                          description: |-
                            name lookup. This will be appended to the base search paths generated from DNSPolicy. Duplicated search paths will be removed.
                            A list of DNS search domains for host-name lookup. This will be appended to the base search paths generated from DNSPolicy. Duplicated search paths will be removed.
                          items:
                            type: string
                          type: array
                      type: object
                    type: array
                  priorityClassName:
                    description: |-
                      (String) If specified, indicates the pod's priority. If not specified, the pod priority will be default or zero if there is no default.
                      If specified, indicates the pod's priority. If not specified, the pod priority will be default or zero if there is no default.
                    type: string
                  readinessProbe:
                    description: |-
                      (Block List, Max: 1) Specification of the desired behavior of the VirtualMachineInstance on the host. (see below for nested schema)
                      Specification of the desired behavior of the VirtualMachineInstance on the host.
                    items:
                      type: object
                    type: array
                  resources:
                    description: |-
                      (Block List, Min: 1, Max: 1) Resources describes the Compute Resources required by this vmi. (see below for nested schema)
                      Resources describes the Compute Resources required by this vmi.
                    items:
                      properties:
                        limits:
                          additionalProperties:
                            type: string
                          description: |-
                            (Map of String) Requests is the maximum amount of compute resources allowed. Valid resource keys are "memory" and "cpu"
                            Requests is the maximum amount of compute resources allowed. Valid resource keys are "memory" and "cpu"
                          type: object
                        overCommitGuestOverhead:
                          description: |-
                            management overhead into account. Instead put the overhead only into the container's memory limit. This can lead to crashes if all memory is in use on a node. Defaults to false.
                            Don't ask the scheduler to take the guest-management overhead into account. Instead put the overhead only into the container's memory limit. This can lead to crashes if all memory is in use on a node. Defaults to false.
                          type: boolean
                        requests:
                          additionalProperties:
                            type: string
                          description: |-
                            (Map of String) Requests is a description of the initial vmi resources.
                            Requests is a description of the initial vmi resources.
                          type: object
                      type: object
                    type: array
                  runOnLaunch:
                    description: |-
                      (Boolean) If set to true, the virtual machine will be started when the cluster is launched. Default value is true.
                      If set to `true`, the virtual machine will be started when the cluster is launched. Default value is `true`.
                    type: boolean
                  runStrategy:
                    description: |-
                      (String) Running state indicates the requested running state of the VirtualMachineInstance, mutually exclusive with Running.
                      Running state indicates the requested running state of the VirtualMachineInstance, mutually exclusive with Running.
                    type: string
                  schedulerName:
                    description: |-
                      (String) If specified, the VMI will be dispatched by specified scheduler. If not specified, the VMI will be dispatched by default scheduler.
                      If specified, the VMI will be dispatched by specified scheduler. If not specified, the VMI will be dispatched by default scheduler.
                    type: string
                  status:
                    description: |-
                      (Block List, Max: 1) VirtualMachineStatus represents the status returned by the controller to describe how the VirtualMachine is doing. (see below for nested schema)
                      VirtualMachineStatus represents the status returned by the controller to describe how the VirtualMachine is doing.
                    items:
                      properties:
                        conditions:
                          description: |-
                            (Block List, Min: 1) Hold the state information of the VirtualMachine and its VirtualMachineInstance. (see below for nested schema)
                            Hold the state information of the VirtualMachine and its VirtualMachineInstance.
                          items:
                            properties:
                              message:
                                description: |-
                                  (String) Condition message.
                                  Condition message.
                                type: string
                              reason:
                                description: |-
                                  (String) Condition reason.
                                  Condition reason.
                                type: string
                              status:
                                description: |-
                                  (Block List, Max: 1) VirtualMachineStatus represents the status returned by the controller to describe how the VirtualMachine is doing. (see below for nested schema)
                                  ConditionStatus represents the status of this VM condition, if the VM currently in the condition.
                                type: string
                              type:
                                description: |-
                                  (String) VirtualMachineConditionType represent the type of the VM as concluded from its VMi status.
                                  VirtualMachineConditionType represent the type of the VM as concluded from its VMi status.
                                type: string
                            type: object
                          type: array
                        created:
                          description: |-
                            (Boolean) Created indicates if the virtual machine is created in the cluster.
                            Created indicates if the virtual machine is created in the cluster.
                          type: boolean
                        ready:
                          description: |-
                            (Boolean) Ready indicates if the virtual machine is running and ready.
                            Ready indicates if the virtual machine is running and ready.
                          type: boolean
                        stateChangeRequests:
                          description: |-
                            (Block List, Min: 1) StateChangeRequests indicates a list of actions that should be taken on a VMI. (see below for nested schema)
                            StateChangeRequests indicates a list of actions that should be taken on a VMI.
                          items:
                            properties:
                              action:
                                description: |-
                                  (String) Indicates the type of action that is requested. e.g. Start or Stop.
                                  Indicates the type of action that is requested. e.g. Start or Stop.
                                type: string
                              data:
                                additionalProperties:
                                  type: string
                                description: |-
                                  (Map of String) Provides additional data in order to perform the Action.
                                  Provides additional data in order to perform the Action.
                                type: object
                              uid:
                                description: |-
                                  (String) The unique in time and space value for this VM.
                                  Indicates the UUID of an existing Virtual Machine Instance that this change request applies to -- if applicable.
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                  subdomain:
                    description: |-
                      (String) If specified, the fully qualified vmi hostname will be "...svc.".
                      If specified, the fully qualified vmi hostname will be "<hostname>.<subdomain>.<pod namespace>.svc.<cluster domain>".
                    type: string
                  terminationGracePeriodSeconds:
                    description: |-
                      (Number) Grace period observed after signalling a VirtualMachineInstance to stop after which the VirtualMachineInstance is force terminated.
                      Grace period observed after signalling a VirtualMachineInstance to stop after which the VirtualMachineInstance is force terminated.
                    type: number
                  tolerations:
                    description: |-
                      (Block List) If specified, the pod's toleration. Optional: Defaults to empty (see below for nested schema)
                      If specified, the pod's toleration. Optional: Defaults to empty
                    items:
                      properties:
                        effect:
                          description: |-
                            (String) Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
                            Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
                          type: string
                        key:
                          description: |-
                            (String) The label key that the selector applies to.
                            Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.
                          type: string
                        operator:
                          description: |-
                            (String) Operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                            Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.
                          type: string
                        tolerationSeconds:
                          description: |-
                            (String) TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.
                            TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.
                          type: string
                        value:
                          description: |-
                            (String) Value of the option. Optional: Defaults to empty.
                            Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.
                          type: string
                      type: object
                    type: array
                  vmAction:
                    description: |-
                      (String) The action to be performed on the virtual machine. Valid values are: start, stop, restart, pause, resume, migrate. Default value is start.
                      The action to be performed on the virtual machine. Valid values are: `start`, `stop`, `restart`, `pause`, `resume`, `migrate`. Default value is `start`.
                    type: string
                  volume:
                    description: |-
                      (Block List) Specification of the desired behavior of the VirtualMachineInstance on the host. (see below for nested schema)
                      Specification of the desired behavior of the VirtualMachineInstance on the host.
                    items:
                      properties:
                        name:
                          description: |-
                            (String) Name of the virtual machine, must be unique. Cannot be updated.
                            Volume's name.
                          type: string
                        volumeSource:
                          description: |-
                            (Block List, Min: 1, Max: 1) VolumeSource represents the location and type of the mounted volume. Defaults to Disk, if no type is specified. (see below for nested schema)
                            VolumeSource represents the location and type of the mounted volume. Defaults to Disk, if no type is specified.
                          items:
                            properties:
                              cloudInitConfigDrive:
                                description: |-
                                  init Config Drive user-data source. (see below for nested schema)
                                  CloudInitConfigDrive represents a cloud-init Config Drive user-data source.
                                items:
                                  properties:
                                    networkData:
                                      description: |-
                                        init networkdata.
                                        NetworkData contains config drive inline cloud-init networkdata.
                                      type: string
                                    networkDataBase64:
                                      description: |-
                                        init networkdata as a base64 encoded string.
                                        NetworkDataBase64 contains config drive cloud-init networkdata as a base64 encoded string.
                                      type: string
                                    networkDataSecretRef:
                                      description: |-
                                        (Block List, Max: 1) NetworkDataSecretRef references a k8s secret that contains config drive networkdata. (see below for nested schema)
                                        NetworkDataSecretRef references a k8s secret that contains config drive networkdata.
                                      items:
                                        properties:
                                          name:
                                            description: |-
                                              (String) Name of the virtual machine, must be unique. Cannot be updated.
                                              Name of the referent.
                                            type: string
                                        type: object
                                      type: array
                                    userData:
                                      description: |-
                                        init userdata.
                                        UserData contains config drive inline cloud-init userdata.
                                      type: string
                                    userDataBase64:
                                      description: |-
                                        init userdata as a base64 encoded string.
                                        UserDataBase64 contains config drive cloud-init userdata as a base64 encoded string.
                                      type: string
                                    userDataSecretRef:
                                      description: |-
                                        (Block List, Max: 1) UserDataSecretRef references a k8s secret that contains config drive userdata. (see below for nested schema)
                                        UserDataSecretRef references a k8s secret that contains config drive userdata.
                                      items:
                                        properties:
                                          name:
                                            description: |-
                                              (String) Name of the virtual machine, must be unique. Cannot be updated.
                                              Name of the referent.
                                            type: string
                                        type: object
                                      type: array
                                  type: object
                                type: array
                              cloudInitNoCloud:
                                description: |-
                                  init noCloud image. The image is expected to contain a disk image in a supported format. The disk image is extracted from the cloud-init noCloud image and used as the disk for the VM (see below for nested schema)
                                  Used to specify a cloud-init `noCloud` image. The image is expected to contain a disk image in a supported format. The disk image is extracted from the cloud-init `noCloud `image and used as the disk for the VM
                                items:
                                  properties:
                                    userData:
                                      description: |-
                                        init userdata.
                                        The user data to use for the cloud-init no cloud disk. This can be a local file path, a remote URL, or a registry URL.
                                      type: string
                                  type: object
                                type: array
                              configMap:
                                description: |-
                                  (Block List, Max: 1) ConfigMapVolumeSource adapts a ConfigMap into a volume. (see below for nested schema)
                                  ConfigMapVolumeSource adapts a ConfigMap into a volume.
                                items:
                                  properties:
                                    defaultMode:
                                      description: |-
                                        (Number) Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
                                        Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
                                      type: number
                                    items:
                                      description: |-
                                        value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'. (see below for nested schema)
                                        If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
                                      items:
                                        properties:
                                          key:
                                            description: (String) The label key that
                                              the selector applies to.
                                            type: string
                                        type: object
                                      type: array
                                  type: object
                                type: array
                              containerDisk:
                                description: |-
                                  (Block Set) A container disk is a disk that is backed by a container image. The container image is expected to contain a disk image in a supported format. The disk image is extracted from the container image and used as the disk for the VM. (see below for nested schema)
                                  A container disk is a disk that is backed by a container image. The container image is expected to contain a disk image in a supported format. The disk image is extracted from the container image and used as the disk for the VM.
                                items:
                                  properties:
                                    imageUrl:
                                      description: |-
                                        (String) The registry URL of the image to download.
                                        The URL of the container image to use as the disk. This can be a local file path, a remote URL, or a registry URL.
                                      type: string
                                  type: object
                                type: array
                              dataVolume:
                                description: |-
                                  (Block List, Max: 1) DataVolume represents the dynamic creation a PVC for this volume as well as the process of populating that PVC with a disk image. (see below for nested schema)
                                  DataVolume represents the dynamic creation a PVC for this volume as well as the process of populating that PVC with a disk image.
                                items:
                                  properties:
                                    name:
                                      description: |-
                                        (String) Name of the virtual machine, must be unique. Cannot be updated.
                                        Name represents the name of the DataVolume in the same namespace.
                                      type: string
                                  type: object
                                type: array
                              emptyDisk:
                                description: |-
                                  (Block List, Max: 1) EmptyDisk represents a temporary disk which shares the VM's lifecycle. (see below for nested schema)
                                  EmptyDisk represents a temporary disk which shares the VM's lifecycle.
                                items:
                                  properties:
                                    capacity:
                                      description: |-
                                        (String) Capacity of the sparse disk.
                                        Capacity of the sparse disk.
                                      type: string
                                  type: object
                                type: array
                              ephemeral:
                                description: |-
                                  (Block List, Max: 1) EphemeralVolumeSource represents a volume that is populated with the contents of a pod. Ephemeral volumes do not support ownership management or SELinux relabeling. (see below for nested schema)
                                  EphemeralVolumeSource represents a volume that is populated with the contents of a pod. Ephemeral volumes do not support ownership management or SELinux relabeling.
                                items:
                                  properties:
                                    persistentVolumeClaim:
                                      description: |-
                                        (Block List, Max: 1) PersistentVolumeClaimVolumeSource represents a reference to a PersistentVolumeClaim in the same namespace. (see below for nested schema)
                                        PersistentVolumeClaimVolumeSource represents a reference to a PersistentVolumeClaim in the same namespace.
                                      items:
                                        properties:
                                          claimName:
                                            description: |-
                                              volumes#persistentvolumeclaims
                                              ClaimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
                                            type: string
                                          readOnly:
                                            description: |-
                                              (Boolean) ReadOnly. Defaults to false.
                                              Will force the ReadOnly setting in VolumeMounts. Default false.
                                            type: boolean
                                        type: object
                                      type: array
                                  type: object
                                type: array
                              hostDisk:
                                description: |-
                                  (Block List, Max: 1) HostDisk represents a disk created on the host. (see below for nested schema)
                                  HostDisk represents a disk created on the host.
                                items:
                                  properties:
                                    path:
                                      description: |-
                                        (String) Path of the disk.
                                        Path of the disk.
                                      type: string
                                    type:
                                      description: |-
                                        (String) VirtualMachineConditionType represent the type of the VM as concluded from its VMi status.
                                        Type of the disk, supported values are disk, directory, socket, char, block.
                                      type: string
                                  type: object
                                type: array
                              persistentVolumeClaim:
                                description: |-
                                  (Block List, Max: 1) PersistentVolumeClaimVolumeSource represents a reference to a PersistentVolumeClaim in the same namespace. (see below for nested schema)
                                  PersistentVolumeClaimVolumeSource represents a reference to a PersistentVolumeClaim in the same namespace.
                                items:
                                  properties:
                                    claimName:
                                      description: |-
                                        volumes#persistentvolumeclaims
                                        ClaimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
                                      type: string
                                    readOnly:
                                      description: |-
                                        (Boolean) ReadOnly. Defaults to false.
                                        Will force the ReadOnly setting in VolumeMounts. Default false.
                                      type: boolean
                                  type: object
                                type: array
                              serviceAccount:
                                description: |-
                                  (Block List, Max: 1) ServiceAccountVolumeSource represents a reference to a service account. (see below for nested schema)
                                  ServiceAccountVolumeSource represents a reference to a service account.
                                items:
                                  properties:
                                    serviceAccountName:
                                      description: |-
                                        (String) Name of the service account in the pod's namespace to use.
                                        Name of the service account in the pod's namespace to use.
                                      type: string
                                  type: object
                                type: array
                            type: object
                          type: array
                      type: object
                    type: array
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.clusterUid is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.clusterUid)
                || (has(self.initProvider) && has(self.initProvider.clusterUid))'
            - message: spec.forProvider.resources is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.resources)
                || (has(self.initProvider) && has(self.initProvider.resources))'
          status:
            description: MachineStatus defines the observed state of Machine.
            properties:
              atProvider:
                properties:
                  affinity:
                    description: |-
                      (Block List, Max: 1) Optional pod scheduling constraints. (see below for nested schema)
                      Optional pod scheduling constraints.
                    items:
                      properties:
                        nodeAffinity:
                          description: |-
                            (Block List, Max: 1) Node affinity scheduling rules for the pod. (see below for nested schema)
                            Node affinity scheduling rules for the pod.
                          items:
                            properties:
                              preferredDuringSchedulingIgnoredDuringExecution:
                                description: |-
                                  (Block List) The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, RequiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding 'weight' to the sum if the node matches the corresponding MatchExpressions; the node(s) with the highest sum are the most preferred. (see below for nested schema)
                                  The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, RequiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding 'weight' to the sum if the node matches the corresponding MatchExpressions; the node(s) with the highest sum are the most preferred.
                                items:
                                  properties:
                                    preference:
                                      description: |-
                                        (Block List, Min: 1, Max: 1) A node selector term, associated with the corresponding weight. (see below for nested schema)
                                        A node selector term, associated with the corresponding weight.
                                      items:
                                        properties:
                                          matchExpressions:
                                            description: |-
                                              (Block List) List of node selector requirements. The requirements are ANDed. (see below for nested schema)
                                              List of node selector requirements. The requirements are ANDed.
                                            items:
                                              properties:
                                                key:
                                                  description: |-
                                                    (String) The label key that the selector applies to.
                                                    The label key that the selector applies to.
                                                  type: string
                                                operator:
                                                  description: |-
                                                    (String) Operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                    Operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                  type: string
                                                values:
                                                  description: |-
                                                    empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
                                                    Values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                        type: object
                                      type: array
                                    weight:
                                      description: |-
                                        100
                                        weight is in the range 1-100
                                      type: number
                                  type: object
                                type: array
                              requiredDuringSchedulingIgnoredDuringExecution:
                                description: |-
                                  (Block List, Max: 1) If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a node label update), the system may or may not try to eventually evict the pod from its node. (see below for nested schema)
                                  If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a node label update), the system may or may not try to eventually evict the pod from its node.
                                items:
                                  properties:
                                    nodeSelectorTerm:
                                      description: |-
                                        (Block List) List of node selector terms. The terms are ORed. (see below for nested schema)
                                        List of node selector terms. The terms are ORed.
                                      items:
                                        properties:
                                          matchExpressions:
                                            description: |-
                                              (Block List) List of node selector requirements. The requirements are ANDed. (see below for nested schema)
                                              List of node selector requirements. The requirements are ANDed.
                                            items:
                                              properties:
                                                key:
                                                  description: |-
                                                    (String) The label key that the selector applies to.
                                                    The label key that the selector applies to.
                                                  type: string
                                                operator:
                                                  description: |-
                                                    (String) Operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                    Operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                  type: string
                                                values:
                                                  description: |-
                                                    empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
                                                    Values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                        type: object
                                      type: array
                                  type: object
                                type: array
                            type: object
                          type: array
                        podAffinity:
                          description: |-
                            pod topological affinity. rules that specify that certain pods should be placed in the same topological domain (e.g. same node, same rack, same zone, same power domain, etc.) (see below for nested schema)
                            Inter-pod topological affinity. rules that specify that certain pods should be placed in the same topological domain (e.g. same node, same rack, same zone, same power domain, etc.)
                          items:
                            properties:
                              preferredDuringSchedulingIgnoredDuringExecution:
                                description: |-
                                  (Block List) The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, RequiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding 'weight' to the sum if the node matches the corresponding MatchExpressions; the node(s) with the highest sum are the most preferred. (see below for nested schema)
                                  The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, RequiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding 'weight' to the sum if the node matches the corresponding MatchExpressions; the node(s) with the highest sum are the most preferred.
                                items:
                                  properties:
                                    podAffinityTerm:
                                      description: |-
                                        (Block List, Min: 1, Max: 1) A pod affinity term, associated with the corresponding weight (see below for nested schema)
                                        A pod affinity term, associated with the corresponding weight
                                      items:
                                        properties:
                                          labelSelector:
                                            description: |-
                                              (Block List) A label query over a set of resources, in this case pods. (see below for nested schema)
                                              A label query over a set of resources, in this case pods.
                                            items:
                                              properties:
                                                matchExpressions:
                                                  description: |-
                                                    (Block List) List of node selector requirements. The requirements are ANDed. (see below for nested schema)
                                                    A list of label selector requirements. The requirements are ANDed.
                                                  items:
                                                    properties:
                                                      key:
                                                        description: |-
                                                          (String) The label key that the selector applies to.
                                                          The label key that the selector applies to.
                                                        type: string
                                                      operator:
                                                        description: |-
                                                          (String) Operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                          A key's relationship to a set of values. Valid operators ard `In`, `NotIn`, `Exists` and `DoesNotExist`.
                                                        type: string
                                                      values:
                                                        description: |-
                                                          empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
                                                          An array of string values. If the operator is `In` or `NotIn`, the values array must be non-empty. If the operator is `Exists` or `DoesNotExist`, the values array must be empty. This array is replaced during a strategic merge patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    type: object
                                                  type: array
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  description: |-
                                                    (Map of String) A map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of match_expressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                    A map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of `match_expressions`, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                  type: object
                                              type: object
                                            type: array
                                          namespaces:
                                            description: |-
                                              (Set of String) namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means 'this pod's namespace'
                                              namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means 'this pod's namespace'
                                            items:
                                              type: string
                                            type: array
                                          topologyKey:
                                            description: |-
                                              (String) empty topology key is interpreted by the scheduler as 'all topologies'
                                              empty topology key is interpreted by the scheduler as 'all topologies'
                                            type: string
                                        type: object
                                      type: array
                                    weight:
                                      description: |-
                                        100
                                        weight associated with matching the corresponding podAffinityTerm, in the range 1-100
                                      type: number
                                  type: object
                                type: array
                              requiredDuringSchedulingIgnoredDuringExecution:
                                description: |-
                                  (Block List, Max: 1) If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a node label update), the system may or may not try to eventually evict the pod from its node. (see below for nested schema)
                                  If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each PodAffinityTerm are intersected, i.e. all terms must be satisfied.
                                items:
                                  properties:
                                    labelSelector:
                                      description: |-
                                        (Block List) A label query over a set of resources, in this case pods. (see below for nested schema)
                                        A label query over a set of resources, in this case pods.
                                      items:
                                        properties:
                                          matchExpressions:
                                            description: |-
                                              (Block List) List of node selector requirements. The requirements are ANDed. (see below for nested schema)
                                              A list of label selector requirements. The requirements are ANDed.
                                            items:
                                              properties:
                                                key:
                                                  description: |-
                                                    (String) The label key that the selector applies to.
                                                    The label key that the selector applies to.
                                                  type: string
                                                operator:
                                                  description: |-
                                                    (String) Operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                    A key's relationship to a set of values. Valid operators ard `In`, `NotIn`, `Exists` and `DoesNotExist`.
                                                  type: string
                                                values:
                                                  description: |-
                                                    empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
                                                    An array of string values. If the operator is `In` or `NotIn`, the values array must be non-empty. If the operator is `Exists` or `DoesNotExist`, the values array must be empty. This array is replaced during a strategic merge patch.
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                          matchLabels:
                                            additionalProperties:
                                              type: string
                                            description: |-
                                              (Map of String) A map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of match_expressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                              A map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of `match_expressions`, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                            type: object
                                        type: object
                                      type: array
                                    namespaces:
                                      description: |-
                                        (Set of String) namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means 'this pod's namespace'
                                        namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means 'this pod's namespace'
                                      items:
                                        type: string
                                      type: array
                                    topologyKey:
                                      description: |-
                                        (String) empty topology key is interpreted by the scheduler as 'all topologies'
                                        empty topology key is interpreted by the scheduler as 'all topologies'
                                      type: string
                                  type: object
                                type: array
                            type: object
                          type: array
                        podAntiAffinity:
                          description: |-
                            pod topological affinity. rules that specify that certain pods should be placed in the same topological domain (e.g. same node, same rack, same zone, same power domain, etc.) (see below for nested schema)
                            Inter-pod topological affinity. rules that specify that certain pods should be placed in the same topological domain (e.g. same node, same rack, same zone, same power domain, etc.)
                          items:
                            properties:
                              preferredDuringSchedulingIgnoredDuringExecution:
                                description: |-
                                  (Block List) The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, RequiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding 'weight' to the sum if the node matches the corresponding MatchExpressions; the node(s) with the highest sum are the most preferred. (see below for nested schema)
                                  The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, RequiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding 'weight' to the sum if the node matches the corresponding MatchExpressions; the node(s) with the highest sum are the most preferred.
                                items:
                                  properties:
                                    podAffinityTerm:
                                      description: |-
                                        (Block List, Min: 1, Max: 1) A pod affinity term, associated with the corresponding weight (see below for nested schema)
                                        A pod affinity term, associated with the corresponding weight
                                      items:
                                        properties:
                                          labelSelector:
                                            description: |-
                                              (Block List) A label query over a set of resources, in this case pods. (see below for nested schema)
                                              A label query over a set of resources, in this case pods.
                                            items:
                                              properties:
                                                matchExpressions:
                                                  description: |-
                                                    (Block List) List of node selector requirements. The requirements are ANDed. (see below for nested schema)
                                                    A list of label selector requirements. The requirements are ANDed.
                                                  items:
                                                    properties:
                                                      key:
                                                        description: |-
                                                          (String) The label key that the selector applies to.
                                                          The label key that the selector applies to.
                                                        type: string
                                                      operator:
                                                        description: |-
                                                          (String) Operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                          A key's relationship to a set of values. Valid operators ard `In`, `NotIn`, `Exists` and `DoesNotExist`.
                                                        type: string
                                                      values:
                                                        description: |-
                                                          empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
                                                          An array of string values. If the operator is `In` or `NotIn`, the values array must be non-empty. If the operator is `Exists` or `DoesNotExist`, the values array must be empty. This array is replaced during a strategic merge patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    type: object
                                                  type: array
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  description: |-
                                                    (Map of String) A map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of match_expressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                    A map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of `match_expressions`, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                  type: object
                                              type: object
                                            type: array
                                          namespaces:
                                            description: |-
                                              (Set of String) namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means 'this pod's namespace'
                                              namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means 'this pod's namespace'
                                            items:
                                              type: string
                                            type: array
                                          topologyKey:
                                            description: |-
                                              (String) empty topology key is interpreted by the scheduler as 'all topologies'
                                              empty topology key is interpreted by the scheduler as 'all topologies'
                                            type: string
                                        type: object
                                      type: array
                                    weight:
                                      description: |-
                                        100
                                        weight associated with matching the corresponding podAffinityTerm, in the range 1-100
                                      type: number
                                  type: object
                                type: array
                              requiredDuringSchedulingIgnoredDuringExecution:
                                description: |-
                                  (Block List, Max: 1) If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a node label update), the system may or may not try to eventually evict the pod from its node. (see below for nested schema)
                                  If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each PodAffinityTerm are intersected, i.e. all terms must be satisfied.
                                items:
                                  properties:
                                    labelSelector:
                                      description: |-
                                        (Block List) A label query over a set of resources, in this case pods. (see below for nested schema)
                                        A label query over a set of resources, in this case pods.
                                      items:
                                        properties:
                                          matchExpressions:
                                            description: |-
                                              (Block List) List of node selector requirements. The requirements are ANDed. (see below for nested schema)
                                              A list of label selector requirements. The requirements are ANDed.
                                            items:
                                              properties:
                                                key:
                                                  description: |-
                                                    (String) The label key that the selector applies to.
                                                    The label key that the selector applies to.
                                                  type: string
                                                operator:
                                                  description: |-
                                                    (String) Operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                    A key's relationship to a set of values. Valid operators ard `In`, `NotIn`, `Exists` and `DoesNotExist`.
                                                  type: string
                                                values:
                                                  description: |-
                                                    empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
                                                    An array of string values. If the operator is `In` or `NotIn`, the values array must be non-empty. If the operator is `Exists` or `DoesNotExist`, the values array must be empty. This array is replaced during a strategic merge patch.
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                          matchLabels:
                                            additionalProperties:
                                              type: string
                                            description: |-
                                              (Map of String) A map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of match_expressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                              A map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of `match_expressions`, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                            type: object
                                        type: object
                                      type: array
                                    namespaces:
                                      description: |-
                                        (Set of String) namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means 'this pod's namespace'
                                        namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means 'this pod's namespace'
                                      items:
                                        type: string
                                      type: array
                                    topologyKey:
                                      description: |-
                                        (String) empty topology key is interpreted by the scheduler as 'all topologies'
                                        empty topology key is interpreted by the scheduler as 'all topologies'
                                      type: string
                                  type: object
                                type: array
                            type: object
                          type: array
                      type: object
                    type: array
                  annotations:
                    additionalProperties:
                      type: string
                    description: |-
                      (Map of String) An unstructured key value map stored with the VM that may be used to store arbitrary metadata.
                      An unstructured key value map stored with the VM that may be used to store arbitrary metadata.
                    type: object
                  baseVmName:
                    description: |-
                      (String) The name of the source virtual machine that a clone will be created of.
                      The name of the source virtual machine that a clone will be created of.
                    type: string
                  clusterContext:
                    description: |-
                      (String) Context of the cluster. Allowed values are project, tenant. Default value is project.
                      Context of the cluster. Allowed values are `project`, `tenant`. Default value is `project`.
                    type: string
                  clusterUid:
                    description: |-
                      (String) The cluster UID to which the virtual machine belongs to.
                      The cluster UID to which the virtual machine belongs to.
                    type: string
                  cpu:
                    description: |-
                      (Block List, Max: 1) CPU allows to specifying the CPU topology. Valid resource keys are "cores" , "sockets" and "threads" (see below for nested schema)
                      CPU allows to specifying the CPU topology. Valid resource keys are "cores" , "sockets" and "threads"
                    items:
                      properties:
                        cores:
                          description: |-
                            (Number) Cores is the number of cores inside the vmi. Must be a value greater or equal 1
                            Cores is the number of cores inside the vmi. Must be a value greater or equal 1
                          type: number
                        sockets:
                          description: |-
                            (Number) Sockets is the number of sockets inside the vmi. Must be a value greater or equal 1.
                            Sockets is the number of sockets inside the vmi. Must be a value greater or equal 1.
                          type: number
                        threads:
                          description: |-
                            (Number) Threads is the number of threads inside the vmi. Must be a value greater or equal 1.
                            Threads is the number of threads inside the vmi. Must be a value greater or equal 1.
                          type: number
                      type: object
                    type: array
                  dataVolumeTemplates:
                    description: |-
                      (Block List) dataVolumeTemplates is a list of dataVolumes that the VirtualMachineInstance template can reference. (see below for nested schema)
                      dataVolumeTemplates is a list of dataVolumes that the VirtualMachineInstance template can reference.
                    items:
                      properties:
                        metadata:
                          description: |-
                            architecture/api-conventions.md#metadata (see below for nested schema)
                            Standard DataVolume's metadata. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#metadata
                          items:
                            properties:
                              annotations:
                                additionalProperties:
                                  type: string
                                description: |-
                                  (Map of String) An unstructured key value map stored with the VM that may be used to store arbitrary metadata.
                                  An unstructured key value map stored with the DataVolume that may be used to store arbitrary metadata. More info: http://kubernetes.io/docs/user-guide/annotations
                                type: object
                              generation:
                                description: |-
                                  (Number) A sequence number representing a specific generation of the desired state.
                                  A sequence number representing a specific generation of the desired state.
                                type: number
                              labels:
                                additionalProperties:
                                  type: string
                                description: |-
                                  (Map of String) Map of string keys and values that can be used to organize and categorize (scope and select). May match selectors of replication controllers and services.
                                  Map of string keys and values that can be used to organize and categorize (scope and select) the DataVolume. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels
                                type: object
                              name:
                                description: |-
                                  (String) Name of the virtual machine, must be unique. Cannot be updated.
                                  Name of the DataVolume, must be unique. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names
                                type: string
                              namespace:
                                description: |-
                                  (String) Namespace defines the space within, Name must be unique.
                                  Namespace defines the space within which name of the DataVolume must be unique.
                                type: string
                              resourceVersion:
                                description: |-
                                  (String) An opaque value that represents the internal version of this VM that can be used by clients to determine when VM has changed.
                                  An opaque value that represents the internal version of this DataVolume that can be used by clients to determine when DataVolume has changed. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                                type: string
                              selfLink:
                                description: |-
                                  (String) A URL representing this VM.
                                  A URL representing this DataVolume.
                                type: string
                              uid:
                                description: |-
                                  (String) The unique in time and space value for this VM.
                                  The unique in time and space value for this DataVolume. More info: http://kubernetes.io/docs/user-guide/identifiers#uids
                                type: string
                            type: object
                          type: array
                        spec:
                          description: |-
                            (Block List, Min: 1, Max: 1) DataVolumeSpec defines our specification for a DataVolume type (see below for nested schema)
                            DataVolumeSpec defines our specification for a DataVolume type
                          items:
                            properties:
                              contentType:
                                description: |-
                                  (String) ContentType options: "kubevirt", "archive".
                                  ContentType options: "kubevirt", "archive".
                                type: string
                              pvc:
                                description: |-
                                  (Block List, Min: 1, Max: 1) PVC is a pointer to the PVC Spec we want to use. (see below for nested schema)
                                  PVC is a pointer to the PVC Spec we want to use.
                                items:
                                  properties:
                                    accessModes:
                                      description: |-
                                        guide/persistent-volumes#access-modes-1
                                        A set of the desired access modes the volume should have. More info: http://kubernetes.io/docs/user-guide/persistent-volumes#access-modes-1
                                      items:
                                        type: string
                                      type: array
                                    resources:
                                      description: |-
                                        (Block List, Min: 1, Max: 1) Resources describes the Compute Resources required by this vmi. (see below for nested schema)
                                        A list of the minimum resources the volume should have. More info: http://kubernetes.io/docs/user-guide/persistent-volumes#resources
                                      items:
                                        properties:
                                          limits:
                                            additionalProperties:
                                              type: string
                                            description: |-
                                              (Map of String) Requests is the maximum amount of compute resources allowed. Valid resource keys are "memory" and "cpu"
                                              Map describing the maximum amount of compute resources allowed. More info: http://kubernetes.io/docs/user-guide/compute-resources/
                                            type: object
                                          requests:
                                            additionalProperties:
                                              type: string
                                            description: |-
                                              (Map of String) Requests is a description of the initial vmi resources.
                                              Map describing the minimum amount of compute resources required. If this is omitted for a container, it defaults to `limits` if that is explicitly specified, otherwise to an implementation-defined value. More info: http://kubernetes.io/docs/user-guide/compute-resources/
                                            type: object
                                        type: object
                                      type: array
                                    selector:
                                      description: |-
                                        (Block List, Max: 1) A label query over volumes to consider for binding. (see below for nested schema)
                                        A label query over volumes to consider for binding.
                                      items:
                                        properties:
                                          matchExpressions:
                                            description: |-
                                              (Block List) List of node selector requirements. The requirements are ANDed. (see below for nested schema)
                                              A list of label selector requirements. The requirements are ANDed.
                                            items:
                                              properties:
                                                key:
                                                  description: |-
                                                    (String) The label key that the selector applies to.
                                                    The label key that the selector applies to.
                                                  type: string
                                                operator:
                                                  description: |-
                                                    (String) Operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                    A key's relationship to a set of values. Valid operators ard `In`, `NotIn`, `Exists` and `DoesNotExist`.
                                                  type: string
                                                values:
                                                  description: |-
                                                    empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
                                                    An array of string values. If the operator is `In` or `NotIn`, the values array must be non-empty. If the operator is `Exists` or `DoesNotExist`, the values array must be empty. This array is replaced during a strategic merge patch.
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                          matchLabels:
                                            additionalProperties:
                                              type: string
                                            description: |-
                                              (Map of String) A map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of match_expressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                              A map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of `match_expressions`, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                            type: object
                                        type: object
                                      type: array
                                    storageClassName:
                                      description: |-
                                        (String) Name of the storage class requested by the claim
                                        Name of the storage class requested by the claim
                                      type: string
                                    volumeMode:
                                      description: |-
                                        (String) volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec.
                                        volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec.
                                      type: string
                                    volumeName:
                                      description: |-
                                        (String) The binding reference to the PersistentVolume backing this claim.
                                        The binding reference to the PersistentVolume backing this claim.
                                      type: string
                                  type: object
                                type: array
                              source:
                                description: |-
                                  (Block List, Max: 1) Source is the src of the data for the requested DataVolume. (see below for nested schema)
                                  Source is the src of the data for the requested DataVolume.
                                items:
                                  properties:
                                    blank:
                                      description: |-
                                        (Block List, Max: 1) DataVolumeSourceBlank provides the parameters to create a Data Volume from an empty source. (see below for nested schema)
                                        DataVolumeSourceBlank provides the parameters to create a Data Volume from an empty source.
                                      items:
                                        type: object
                                      type: array
                                    http:
                                      description: |-
                                        (Block List, Max: 1) DataVolumeSourceHTTP provides the parameters to create a Data Volume from an HTTP source. (see below for nested schema)
                                        DataVolumeSourceHTTP provides the parameters to create a Data Volume from an HTTP source.
                                      items:
                                        properties:
                                          certConfigMap:
                                            description: |-
                                              (String) Cert_config_map provides a reference to the Registry certs.
                                              Cert_config_map provides a reference to the Registry certs.
                                            type: string
                                          secretRef:
                                            description: |-
                                              (String) Secret_ref provides the secret reference needed to access the HTTP source.
                                              Secret_ref provides the secret reference needed to access the HTTP source.
                                            type: string
                                          url:
                                            description: |-
                                              (String) url is the URL of the http source.
                                              url is the URL of the http source.
                                            type: string
                                        type: object
                                      type: array
                                    pvc:
                                      description: |-
                                        (Block List, Min: 1, Max: 1) PVC is a pointer to the PVC Spec we want to use. (see below for nested schema)
                                        DataVolumeSourcePVC provides the parameters to create a Data Volume from an existing PVC.
                                      items:
                                        properties:
                                          name:
                                            description: |-
                                              (String) Name of the virtual machine, must be unique. Cannot be updated.
                                              The name of the PVC.
                                            type: string
                                          namespace:
                                            description: |-
                                              (String) Namespace defines the space within, Name must be unique.
                                              The namespace which the PVC located in.
                                            type: string
                                        type: object
                                      type: array
                                    registry:
                                      description: |-
                                        (Block List, Max: 1) DataVolumeSourceRegistry provides the parameters to create a Data Volume from an existing PVC. (see below for nested schema)
                                        DataVolumeSourceRegistry provides the parameters to create a Data Volume from an existing PVC.
                                      items:
                                        properties:
                                          imageUrl:
                                            description: |-
                                              (String) The registry URL of the image to download.
                                              The registry URL of the image to download.
                                            type: string
                                        type: object
                                      type: array
                                  type: object
                                type: array
                            type: object
                          type: array
                      type: object
                    type: array
                  disk:
                    description: |-
                      (Block List) Disks describes disks, cdroms, floppy and luns which are connected to the vmi. (see below for nested schema)
                      Disks describes disks, cdroms, floppy and luns which are connected to the vmi.
                    items:
                      properties:
                        diskDevice:
                          description: |-
                            (Block List, Min: 1) DiskDevice specifies as which device the disk should be added to the guest. (see below for nested schema)
                            DiskDevice specifies as which device the disk should be added to the guest.
                          items:
                            properties:
                              disk:
                                description: |-
                                  (Block List) Disks describes disks, cdroms, floppy and luns which are connected to the vmi. (see below for nested schema)
                                  Attach a volume as a disk to the vmi.
                                items:
                                  properties:
                                    bus:
                                      description: |-
                                        (String) Bus indicates the type of disk device to emulate.
                                        Bus indicates the type of disk device to emulate.
                                      type: string
                                    pciAddress:
                                      description: |-
                                        (String) If specified, the virtual disk will be placed on the guests pci address with the specifed PCI address. For example: 0000:81:01.10
                                        If specified, the virtual disk will be placed on the guests pci address with the specifed PCI address. For example: 0000:81:01.10
                                      type: string
                                    readOnly:
                                      description: |-
                                        (Boolean) ReadOnly. Defaults to false.
                                        ReadOnly. Defaults to false.
                                      type: boolean
                                  type: object
                                type: array
                            type: object
                          type: array
                        name:
                          description: |-
                            (String) Name of the virtual machine, must be unique. Cannot be updated.
                            Name is the device name
                          type: string
                        serial:
                          description: |-
                            (String) Serial provides the ability to specify a serial number for the disk device.
                            Serial provides the ability to specify a serial number for the disk device.
                          type: string
                      type: object
                    type: array
                  dnsPolicy:
                    description: |-
                      (String) DNSPolicy defines how a pod's DNS will be configured.
                      DNSPolicy defines how a pod's DNS will be configured.
                    type: string
                  evictionStrategy:
                    description: |-
                      off in case of a node drain.
                      EvictionStrategy can be set to "LiveMigrate" if the VirtualMachineInstance should be migrated instead of shut-off in case of a node drain.
                    type: string
                  generateName:
                    description: |-
                      architecture/api-conventions.md#idempotency
                      Prefix, used by the server, to generate a unique name ONLY IF the `name` field has not been provided. This value will also be combined with a unique suffix. Read more: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#idempotency
                    type: string
                  generation:
                    description: |-
                      (Number) A sequence number representing a specific generation of the desired state.
                      A sequence number representing a specific generation of the desired state.
                    type: number
                  hostname:
                    description: |-
                      (String) Specifies the hostname of the vmi.
                      Specifies the hostname of the vmi.
                    type: string
                  id:
                    description: (String) The ID of this resource.
                    type: string
                  interface:
                    description: |-
                      (Block List) Interfaces describe network interfaces which are added to the vmi. (see below for nested schema)
                      Interfaces describe network interfaces which are added to the vmi.
                    items:
                      properties:
                        interfaceBindingMethod:
                          description: |-
                            (String) Represents the Interface model, One of: e1000, e1000e, ne2k_pci, pcnet, rtl8139, virtio. Defaults to virtio.
                            Represents the Interface model, One of: e1000, e1000e, ne2k_pci, pcnet, rtl8139, virtio. Defaults to virtio.
                          type: string
                        model:
                          description: |-
                            (String) Represents the method which will be used to connect the interface to the guest.
                            Represents the method which will be used to connect the interface to the guest.
                          type: string
                        name:
                          description: |-
                            (String) Name of the virtual machine, must be unique. Cannot be updated.
                            Logical name of the interface as well as a reference to the associated networks.
                          type: string
                      type: object
                    type: array
                  labels:
                    additionalProperties:
                      type: string
                    description: |-
                      (Map of String) Map of string keys and values that can be used to organize and categorize (scope and select). May match selectors of replication controllers and services.
                      Map of string keys and values that can be used to organize and categorize (scope and select). May match selectors of replication controllers and services.
                    type: object
                  livenessProbe:
                    description: |-
                      (Block List, Max: 1) Specification of the desired behavior of the VirtualMachineInstance on the host. (see below for nested schema)
                      Specification of the desired behavior of the VirtualMachineInstance on the host.
                    items:
                      type: object
                    type: array
                  memory:
                    description: |-
                      (Block List, Max: 1) Memory allows specifying the vmi memory features. (see below for nested schema)
                      Memory allows specifying the vmi memory features.
                    items:
                      properties:
                        guest:
                          description: |-
                            (String) Guest is the amount of memory allocated to the vmi. This value must be less than or equal to the limit if specified.
                            Guest is the amount of memory allocated to the vmi. This value must be less than or equal to the limit if specified.
                          type: string
                        hugepages:
                          description: |-
                            (String) Hugepages attribute specifies the hugepage size, for x86_64 architecture valid values are 1Gi and 2Mi.
                            Hugepages attribute specifies the hugepage size, for x86_64 architecture valid values are 1Gi and 2Mi.
                          type: string
                      type: object
                    type: array
                  namespace:
                    description: |-
                      (String) Namespace defines the space within, Name must be unique.
                      Namespace defines the space within, Name must be unique.
                    type: string
                  network:
                    description: |-
                      (Block List) List of networks that can be attached to a vm's virtual interface. (see below for nested schema)
                      List of networks that can be attached to a vm's virtual interface.
                    items:
                      properties:
                        name:
                          description: |-
                            (String) Name of the virtual machine, must be unique. Cannot be updated.
                            Network name.
                          type: string
                        networkSource:
                          description: |-
                            (Block List, Max: 1) NetworkSource represents the network type and the source interface that should be connected to the virtual machine. (see below for nested schema)
                            NetworkSource represents the network type and the source interface that should be connected to the virtual machine.
                          items:
                            properties:
                              multus:
                                description: |-
                                  (Block List, Max: 1) Multus network. (see below for nested schema)
                                  Multus network.
                                items:
                                  properties:
                                    default:
                                      description: |-
                                        cni.io/default-network annotation.
                                        Select the default network and add it to the multus-cni.io/default-network annotation.
                                      type: boolean
                                    networkName:
                                      description: |-
                                        (String) References to a NetworkAttachmentDefinition CRD object. Format: , /. If namespace is not specified, VMI namespace is assumed.
                                        References to a NetworkAttachmentDefinition CRD object. Format: <networkName>, <namespace>/<networkName>. If namespace is not specified, VMI namespace is assumed.
                                      type: string
                                  type: object
                                type: array
                              pod:
                                description: |-
                                  (Block List, Max: 1) Pod network. (see below for nested schema)
                                  Pod network.
                                items:
                                  properties:
                                    vmNetworkCidr:
                                      description: |-
                                        (String) CIDR for vm network.
                                        CIDR for vm network.
                                      type: string
                                  type: object
                                type: array
                            type: object
                          type: array
                      type: object
                    type: array
                  nodeSelector:
                    additionalProperties:
                      type: string
                    description: |-
                      (Map of String) NodeSelector is a selector which must be true for the vmi to fit on a node. Selector which must match a node's labels for the vmi to be scheduled on that node.
                      NodeSelector is a selector which must be true for the vmi to fit on a node. Selector which must match a node's labels for the vmi to be scheduled on that node.
                    type: object
                  podDnsConfig:
                    description: |-
                      (Block List, Max: 1) Specifies the DNS parameters of a pod. Parameters specified here will be merged to the generated DNS configuration based on DNSPolicy. Optional: Defaults to empty (see below for nested schema)
                      Specifies the DNS parameters of a pod. Parameters specified here will be merged to the generated DNS configuration based on DNSPolicy. Optional: Defaults to empty
                    items:
                      properties:
                        nameservers:
                          description: |-
                            (List of String) A list of DNS name server IP addresses. This will be appended to the base nameservers generated from DNSPolicy. Duplicated nameservers will be removed.
                            A list of DNS name server IP addresses. This will be appended to the base nameservers generated from DNSPolicy. Duplicated nameservers will be removed.
                          items:
                            type: string
                          type: array
                        option:
                          description: |-
                            (Block List) A list of DNS resolver options. This will be merged with the base options generated from DNSPolicy. Duplicated entries will be removed. Resolution options given in Options will override those that appear in the base DNSPolicy. (see below for nested schema)
                            A list of DNS resolver options. This will be merged with the base options generated from DNSPolicy. Duplicated entries will be removed. Resolution options given in Options will override those that appear in the base DNSPolicy.
                          items:
                            properties:
                              name:
                                description: |-
                                  (String) Name of the virtual machine, must be unique. Cannot be updated.
                                  Name of the option.
                                type: string
                              value:
                                description: |-
                                  (String) Value of the option. Optional: Defaults to empty.
                                  Value of the option. Optional: Defaults to empty.
                                type: string
                            type: object
                          type: array
                        searches:
                          description: |-
                            name lookup. This will be appended to the base search paths generated from DNSPolicy. Duplicated search paths will be removed.
                            A list of DNS search domains for host-name lookup. This will be appended to the base search paths generated from DNSPolicy. Duplicated search paths will be removed.
                          items:
                            type: string
                          type: array
                      type: object
                    type: array
                  priorityClassName:
                    description: |-
                      (String) If specified, indicates the pod's priority. If not specified, the pod priority will be default or zero if there is no default.
                      If specified, indicates the pod's priority. If not specified, the pod priority will be default or zero if there is no default.
                    type: string
                  readinessProbe:
                    description: |-
                      (Block List, Max: 1) Specification of the desired behavior of the VirtualMachineInstance on the host. (see below for nested schema)
                      Specification of the desired behavior of the VirtualMachineInstance on the host.
                    items:
                      type: object
                    type: array
                  resourceVersion:
                    description: |-
                      (String) An opaque value that represents the internal version of this VM that can be used by clients to determine when VM has changed.
                      An opaque value that represents the internal version of this VM that can be used by clients to determine when VM has changed.
                    type: string
                  resources:
                    description: |-
                      (Block List, Min: 1, Max: 1) Resources describes the Compute Resources required by this vmi. (see below for nested schema)
                      Resources describes the Compute Resources required by this vmi.
                    items:
                      properties:
                        limits:
                          additionalProperties:
                            type: string
                          description: |-
                            (Map of String) Requests is the maximum amount of compute resources allowed. Valid resource keys are "memory" and "cpu"
                            Requests is the maximum amount of compute resources allowed. Valid resource keys are "memory" and "cpu"
                          type: object
                        overCommitGuestOverhead:
                          description: |-
                            management overhead into account. Instead put the overhead only into the container's memory limit. This can lead to crashes if all memory is in use on a node. Defaults to false.
                            Don't ask the scheduler to take the guest-management overhead into account. Instead put the overhead only into the container's memory limit. This can lead to crashes if all memory is in use on a node. Defaults to false.
                          type: boolean
                        requests:
                          additionalProperties:
                            type: string
                          description: |-
                            (Map of String) Requests is a description of the initial vmi resources.
                            Requests is a description of the initial vmi resources.
                          type: object
                      type: object
                    type: array
                  runOnLaunch:
                    description: |-
                      (Boolean) If set to true, the virtual machine will be started when the cluster is launched. Default value is true.
                      If set to `true`, the virtual machine will be started when the cluster is launched. Default value is `true`.
                    type: boolean
                  runStrategy:
                    description: |-
                      (String) Running state indicates the requested running state of the VirtualMachineInstance, mutually exclusive with Running.
                      Running state indicates the requested running state of the VirtualMachineInstance, mutually exclusive with Running.
                    type: string
                  schedulerName:
                    description: |-
                      (String) If specified, the VMI will be dispatched by specified scheduler. If not specified, the VMI will be dispatched by default scheduler.
                      If specified, the VMI will be dispatched by specified scheduler. If not specified, the VMI will be dispatched by default scheduler.
                    type: string
                  selfLink:
                    description: |-
                      (String) A URL representing this VM.
                      A URL representing this VM.
                    type: string
                  status:
                    description: |-
                      (Block List, Max: 1) VirtualMachineStatus represents the status returned by the controller to describe how the VirtualMachine is doing. (see below for nested schema)
                      VirtualMachineStatus represents the status returned by the controller to describe how the VirtualMachine is doing.
                    items:
                      properties:
                        conditions:
                          description: |-
                            (Block List, Min: 1) Hold the state information of the VirtualMachine and its VirtualMachineInstance. (see below for nested schema)
                            Hold the state information of the VirtualMachine and its VirtualMachineInstance.
                          items:
                            properties:
                              message:
                                description: |-
                                  (String) Condition message.
                                  Condition message.
                                type: string
                              reason:
                                description: |-
                                  (String) Condition reason.
                                  Condition reason.
                                type: string
                              status:
                                description: |-
                                  (Block List, Max: 1) VirtualMachineStatus represents the status returned by the controller to describe how the VirtualMachine is doing. (see below for nested schema)
                                  ConditionStatus represents the status of this VM condition, if the VM currently in the condition.
                                type: string
                              type:
                                description: |-
                                  (String) VirtualMachineConditionType represent the type of the VM as concluded from its VMi status.
                                  VirtualMachineConditionType represent the type of the VM as concluded from its VMi status.
                                type: string
                            type: object
                          type: array
                        created:
                          description: |-
                            (Boolean) Created indicates if the virtual machine is created in the cluster.
                            Created indicates if the virtual machine is created in the cluster.
                          type: boolean
                        ready:
                          description: |-
                            (Boolean) Ready indicates if the virtual machine is running and ready.
                            Ready indicates if the virtual machine is running and ready.
                          type: boolean
                        stateChangeRequests:
                          description: |-
                            (Block List, Min: 1) StateChangeRequests indicates a list of actions that should be taken on a VMI. (see below for nested schema)
                            StateChangeRequests indicates a list of actions that should be taken on a VMI.
                          items:
                            properties:
                              action:
                                description: |-
                                  (String) Indicates the type of action that is requested. e.g. Start or Stop.
                                  Indicates the type of action that is requested. e.g. Start or Stop.
                                type: string
                              data:
                                additionalProperties:
                                  type: string
                                description: |-
                                  (Map of String) Provides additional data in order to perform the Action.
                                  Provides additional data in order to perform the Action.
                                type: object
                              uid:
                                description: |-
                                  (String) The unique in time and space value for this VM.
                                  Indicates the UUID of an existing Virtual Machine Instance that this change request applies to -- if applicable.
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                  subdomain:
                    description: |-
                      (String) If specified, the fully qualified vmi hostname will be "...svc.".
                      If specified, the fully qualified vmi hostname will be "<hostname>.<subdomain>.<pod namespace>.svc.<cluster domain>".
                    type: string
                  terminationGracePeriodSeconds:
                    description: |-
                      (Number) Grace period observed after signalling a VirtualMachineInstance to stop after which the VirtualMachineInstance is force terminated.
                      Grace period observed after signalling a VirtualMachineInstance to stop after which the VirtualMachineInstance is force terminated.
                    type: number
                  tolerations:
                    description: |-
                      (Block List) If specified, the pod's toleration. Optional: Defaults to empty (see below for nested schema)
                      If specified, the pod's toleration. Optional: Defaults to empty
                    items:
                      properties:
                        effect:
                          description: |-
                            (String) Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
                            Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
                          type: string
                        key:
                          description: |-
                            (String) The label key that the selector applies to.
                            Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.
                          type: string
                        operator:
                          description: |-
                            (String) Operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                            Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.
                          type: string
                        tolerationSeconds:
                          description: |-
                            (String) TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.
                            TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.
                          type: string
                        value:
                          description: |-
                            (String) Value of the option. Optional: Defaults to empty.
                            Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.
                          type: string
                      type: object
                    type: array
                  uid:
                    description: |-
                      (String) The unique in time and space value for this VM.
                      The unique in time and space value for this VM.
                    type: string
                  vmAction:
                    description: |-
                      (String) The action to be performed on the virtual machine. Valid values are: start, stop, restart, pause, resume, migrate. Default value is start.
                      The action to be performed on the virtual machine. Valid values are: `start`, `stop`, `restart`, `pause`, `resume`, `migrate`. Default value is `start`.
                    type: string
                  volume:
                    description: |-
                      (Block List) Specification of the desired behavior of the VirtualMachineInstance on the host. (see below for nested schema)
                      Specification of the desired behavior of the VirtualMachineInstance on the host.
                    items:
                      properties:
                        name:
                          description: |-
                            (String) Name of the virtual machine, must be unique. Cannot be updated.
                            Volume's name.
                          type: string
                        volumeSource:
                          description: |-
                            (Block List, Min: 1, Max: 1) VolumeSource represents the location and type of the mounted volume. Defaults to Disk, if no type is specified. (see below for nested schema)
                            VolumeSource represents the location and type of the mounted volume. Defaults to Disk, if no type is specified.
                          items:
                            properties:
                              cloudInitConfigDrive:
                                description: |-
                                  init Config Drive user-data source. (see below for nested schema)
                                  CloudInitConfigDrive represents a cloud-init Config Drive user-data source.
                                items:
                                  properties:
                                    networkData:
                                      description: |-
                                        init networkdata.
                                        NetworkData contains config drive inline cloud-init networkdata.
                                      type: string
                                    networkDataBase64:
                                      description: |-
                                        init networkdata as a base64 encoded string.
                                        NetworkDataBase64 contains config drive cloud-init networkdata as a base64 encoded string.
                                      type: string
                                    networkDataSecretRef:
                                      description: |-
                                        (Block List, Max: 1) NetworkDataSecretRef references a k8s secret that contains config drive networkdata. (see below for nested schema)
                                        NetworkDataSecretRef references a k8s secret that contains config drive networkdata.
                                      items:
                                        properties:
                                          name:
                                            description: |-
                                              (String) Name of the virtual machine, must be unique. Cannot be updated.
                                              Name of the referent.
                                            type: string
                                        type: object
                                      type: array
                                    userData:
                                      description: |-
                                        init userdata.
                                        UserData contains config drive inline cloud-init userdata.
                                      type: string
                                    userDataBase64:
                                      description: |-
                                        init userdata as a base64 encoded string.
                                        UserDataBase64 contains config drive cloud-init userdata as a base64 encoded string.
                                      type: string
                                    userDataSecretRef:
                                      description: |-
                                        (Block List, Max: 1) UserDataSecretRef references a k8s secret that contains config drive userdata. (see below for nested schema)
                                        UserDataSecretRef references a k8s secret that contains config drive userdata.
                                      items:
                                        properties:
                                          name:
                                            description: |-
                                              (String) Name of the virtual machine, must be unique. Cannot be updated.
                                              Name of the referent.
                                            type: string
                                        type: object
                                      type: array
                                  type: object
                                type: array
                              cloudInitNoCloud:
                                description: |-
                                  init noCloud image. The image is expected to contain a disk image in a supported format. The disk image is extracted from the cloud-init noCloud image and used as the disk for the VM (see below for nested schema)
                                  Used to specify a cloud-init `noCloud` image. The image is expected to contain a disk image in a supported format. The disk image is extracted from the cloud-init `noCloud `image and used as the disk for the VM
                                items:
                                  properties:
                                    userData:
                                      description: |-
                                        init userdata.
                                        The user data to use for the cloud-init no cloud disk. This can be a local file path, a remote URL, or a registry URL.
                                      type: string
                                  type: object
                                type: array
                              configMap:
                                description: |-
                                  (Block List, Max: 1) ConfigMapVolumeSource adapts a ConfigMap into a volume. (see below for nested schema)
                                  ConfigMapVolumeSource adapts a ConfigMap into a volume.
                                items:
                                  properties:
                                    defaultMode:
                                      description: |-
                                        (Number) Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
                                        Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
                                      type: number
                                    items:
                                      description: |-
                                        value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'. (see below for nested schema)
                                        If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
                                      items:
                                        properties:
                                          key:
                                            description: (String) The label key that
                                              the selector applies to.
                                            type: string
                                        type: object
                                      type: array
                                  type: object
                                type: array
                              containerDisk:
                                description: |-
                                  (Block Set) A container disk is a disk that is backed by a container image. The container image is expected to contain a disk image in a supported format. The disk image is extracted from the container image and used as the disk for the VM. (see below for nested schema)
                                  A container disk is a disk that is backed by a container image. The container image is expected to contain a disk image in a supported format. The disk image is extracted from the container image and used as the disk for the VM.
                                items:
                                  properties:
                                    imageUrl:
                                      description: |-
                                        (String) The registry URL of the image to download.
                                        The URL of the container image to use as the disk. This can be a local file path, a remote URL, or a registry URL.
                                      type: string
                                  type: object
                                type: array
                              dataVolume:
                                description: |-
                                  (Block List, Max: 1) DataVolume represents the dynamic creation a PVC for this volume as well as the process of populating that PVC with a disk image. (see below for nested schema)
                                  DataVolume represents the dynamic creation a PVC for this volume as well as the process of populating that PVC with a disk image.
                                items:
                                  properties:
                                    name:
                                      description: |-
                                        (String) Name of the virtual machine, must be unique. Cannot be updated.
                                        Name represents the name of the DataVolume in the same namespace.
                                      type: string
                                  type: object
                                type: array
                              emptyDisk:
                                description: |-
                                  (Block List, Max: 1) EmptyDisk represents a temporary disk which shares the VM's lifecycle. (see below for nested schema)
                                  EmptyDisk represents a temporary disk which shares the VM's lifecycle.
                                items:
                                  properties:
                                    capacity:
                                      description: |-
                                        (String) Capacity of the sparse disk.
                                        Capacity of the sparse disk.
                                      type: string
                                  type: object
                                type: array
                              ephemeral:
                                description: |-
                                  (Block List, Max: 1) EphemeralVolumeSource represents a volume that is populated with the contents of a pod. Ephemeral volumes do not support ownership management or SELinux relabeling. (see below for nested schema)
                                  EphemeralVolumeSource represents a volume that is populated with the contents of a pod. Ephemeral volumes do not support ownership management or SELinux relabeling.
                                items:
                                  properties:
                                    persistentVolumeClaim:
                                      description: |-
                                        (Block List, Max: 1) PersistentVolumeClaimVolumeSource represents a reference to a PersistentVolumeClaim in the same namespace. (see below for nested schema)
                                        PersistentVolumeClaimVolumeSource represents a reference to a PersistentVolumeClaim in the same namespace.
                                      items:
                                        properties:
                                          claimName:
                                            description: |-
                                              volumes#persistentvolumeclaims
                                              ClaimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
                                            type: string
                                          readOnly:
                                            description: |-
                                              (Boolean) ReadOnly. Defaults to false.
                                              Will force the ReadOnly setting in VolumeMounts. Default false.
                                            type: boolean
                                        type: object
                                      type: array
                                  type: object
                                type: array
                              hostDisk:
                                description: |-
                                  (Block List, Max: 1) HostDisk represents a disk created on the host. (see below for nested schema)
                                  HostDisk represents a disk created on the host.
                                items:
                                  properties:
                                    path:
                                      description: |-
                                        (String) Path of the disk.
                                        Path of the disk.
                                      type: string
                                    type:
                                      description: |-
                                        (String) VirtualMachineConditionType represent the type of the VM as concluded from its VMi status.
                                        Type of the disk, supported values are disk, directory, socket, char, block.
                                      type: string
                                  type: object
                                type: array
                              persistentVolumeClaim:
                                description: |-
                                  (Block List, Max: 1) PersistentVolumeClaimVolumeSource represents a reference to a PersistentVolumeClaim in the same namespace. (see below for nested schema)
                                  PersistentVolumeClaimVolumeSource represents a reference to a PersistentVolumeClaim in the same namespace.
                                items:
                                  properties:
                                    claimName:
                                      description: |-
                                        volumes#persistentvolumeclaims
                                        ClaimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
                                      type: string
                                    readOnly:
                                      description: |-
                                        (Boolean) ReadOnly. Defaults to false.
                                        Will force the ReadOnly setting in VolumeMounts. Default false.
                                      type: boolean
                                  type: object
                                type: array
                              serviceAccount:
                                description: |-
                                  (Block List, Max: 1) ServiceAccountVolumeSource represents a reference to a service account. (see below for nested schema)
                                  ServiceAccountVolumeSource represents a reference to a service account.
                                items:
                                  properties:
                                    serviceAccountName:
                                      description: |-
                                        (String) Name of the service account in the pod's namespace to use.
                                        Name of the service account in the pod's namespace to use.
                                      type: string
                                  type: object
                                type: array
                            type: object
                          type: array
                      type: object
                    type: array
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
