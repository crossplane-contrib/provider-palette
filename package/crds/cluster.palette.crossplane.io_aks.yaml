---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: aks.cluster.palette.crossplane.io
spec:
  group: cluster.palette.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - palette
    kind: Aks
    listKind: AksList
    plural: aks
    singular: aks
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Aks is the Schema for the Akss API. Resource for managing AKS
          clusters in Spectro Cloud through Palette.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: AksSpec defines the desired state of Aks
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  applySetting:
                    description: |-
                      (String) The setting to apply the cluster profile. DownloadAndInstall will download and install packs in one action. DownloadAndInstallLater will only download artifact and postpone install for later. Default value is DownloadAndInstall.
                      The setting to apply the cluster profile. `DownloadAndInstall` will download and install packs in one action. `DownloadAndInstallLater` will only download artifact and postpone install for later. Default value is `DownloadAndInstall`.
                    type: string
                  backupPolicy:
                    description: |-
                      (Block List, Max: 1) The backup policy for the cluster. If not specified, no backups will be taken. (see below for nested schema)
                      The backup policy for the cluster. If not specified, no backups will be taken.
                    items:
                      properties:
                        backupLocationId:
                          description: |-
                            (String) The ID of the backup location to use for the backup.
                            The ID of the backup location to use for the backup.
                          type: string
                        clusterUids:
                          description: |-
                            (Set of String) The list of cluster UIDs to include in the backup. If include_all_clusters is set to true, then all clusters will be included.
                            The list of cluster UIDs to include in the backup. If `include_all_clusters` is set to `true`, then all clusters will be included.
                          items:
                            type: string
                          type: array
                        expiryInHour:
                          description: |-
                            (Number) The number of hours after which the backup will be deleted. For example, if the expiry is set to 24, the backup will be deleted after 24 hours.
                            The number of hours after which the backup will be deleted. For example, if the expiry is set to 24, the backup will be deleted after 24 hours.
                          type: number
                        includeAllClusters:
                          description: |-
                            (Boolean) Whether to include all clusters in the backup. If set to false, only the clusters specified in cluster_uids will be included.
                            Whether to include all clusters in the backup. If set to false, only the clusters specified in `cluster_uids` will be included.
                          type: boolean
                        includeClusterResources:
                          description: |-
                            (Boolean) Whether to include the cluster resources in the backup. If set to false, only the cluster configuration and disks will be backed up.
                            Whether to include the cluster resources in the backup. If set to false, only the cluster configuration and disks will be backed up.
                          type: boolean
                        includeDisks:
                          description: |-
                            (Boolean) Whether to include the disks in the backup. If set to false, only the cluster configuration will be backed up.
                            Whether to include the disks in the backup. If set to false, only the cluster configuration will be backed up.
                          type: boolean
                        namespaces:
                          description: |-
                            (Block List) The namespaces for the cluster. (see below for nested schema)
                            The list of Kubernetes namespaces to include in the backup. If not specified, all namespaces will be included.
                          items:
                            type: string
                          type: array
                        prefix:
                          description: |-
                            -.
                            Prefix for the backup name. The backup name will be of the format <prefix>-<cluster-name>-<timestamp>.
                          type: string
                        schedule:
                          description: |-
                            (String) The schedule for the backup. The schedule is specified in cron format. For example, to run the backup every day at 1:00 AM, the schedule should be set to 0 1 * * *.
                            The schedule for the backup. The schedule is specified in cron format. For example, to run the backup every day at 1:00 AM, the schedule should be set to `0 1 * * *`.
                          type: string
                      type: object
                    type: array
                  cloudAccountId:
                    description: (String)
                    type: string
                  cloudConfig:
                    description: '(Block List, Min: 1, Max: 1) (see below for nested
                      schema)'
                    items:
                      properties:
                        controlPlaneCidr:
                          description: (String)
                          type: string
                        controlPlaneSubnetName:
                          description: (String)
                          type: string
                        controlPlaneSubnetSecurityGroupName:
                          description: (String)
                          type: string
                        privateCluster:
                          description: |-
                            (Boolean) Whether to create a private cluster(API endpoint). Default is false.
                            Whether to create a private cluster(API endpoint). Default is `false`.
                          type: boolean
                        region:
                          description: (String)
                          type: string
                        resourceGroup:
                          description: (String)
                          type: string
                        sshKey:
                          description: |-
                            (String) Public SSH key to be used for the cluster nodes.
                            Public SSH key to be used for the cluster nodes.
                          type: string
                        subscriptionId:
                          description: (String)
                          type: string
                        vnetCidrBlock:
                          description: (String)
                          type: string
                        vnetName:
                          description: (String)
                          type: string
                        vnetResourceGroup:
                          description: (String)
                          type: string
                        workerCidr:
                          description: (String)
                          type: string
                        workerSubnetName:
                          description: (String)
                          type: string
                        workerSubnetSecurityGroupName:
                          description: (String)
                          type: string
                      type: object
                    type: array
                  clusterMetaAttribute:
                    description: |-
                      (String) cluster_meta_attribute can be used to set additional cluster metadata information, eg {'nic_name': 'test', 'env': 'stage'}
                      `cluster_meta_attribute` can be used to set additional cluster metadata information, eg `{'nic_name': 'test', 'env': 'stage'}`
                    type: string
                  clusterProfile:
                    description: (Block List) (see below for nested schema)
                    items:
                      properties:
                        id:
                          description: |-
                            (String) The ID of this resource.
                            The ID of the cluster profile.
                          type: string
                        pack:
                          description: |-
                            (Block List) For packs of type spectro, helm, and manifest, at least one pack must be specified. (see below for nested schema)
                            For packs of type `spectro`, `helm`, and `manifest`, at least one pack must be specified.
                          items:
                            properties:
                              manifest:
                                description: (Block List) (see below for nested schema)
                                items:
                                  properties:
                                    content:
                                      description: |-
                                        (String) The content of the manifest. The content is the YAML content of the manifest.
                                        The content of the manifest. The content is the YAML content of the manifest.
                                      type: string
                                    name:
                                      description: |-
                                        (String)
                                        The name of the manifest. The name must be unique within the pack.
                                      type: string
                                  type: object
                                type: array
                              name:
                                description: |-
                                  (String)
                                  The name of the pack. The name must be unique within the cluster profile.
                                type: string
                              registryUid:
                                description: |-
                                  (String) The registry UID of the pack. The registry UID is the unique identifier of the registry. This attribute is required if there is more than one registry that contains a pack with the same name.
                                  The registry UID of the pack. The registry UID is the unique identifier of the registry. This attribute is required if there is more than one registry that contains a pack with the same name.
                                type: string
                              tag:
                                description: |-
                                  (String) The tag of the pack. The tag is the version of the pack. This attribute is required if the pack type is spectro or helm.
                                  The tag of the pack. The tag is the version of the pack. This attribute is required if the pack type is `spectro` or `helm`.
                                type: string
                              type:
                                description: |-
                                  (String) The type of the pack. Allowed values are spectro, manifest or helm. The default value is spectro.
                                  The type of the pack. Allowed values are `spectro`, `manifest` or `helm`. The default value is `spectro`.
                                type: string
                              uid:
                                description: |-
                                  (String) The unique identifier of the pack. The value can be looked up using the spectrocloud_pack data source. This value is required if the pack type is spectro.
                                  The unique identifier of the pack. The value can be looked up using the [`spectrocloud_pack`](https://registry.io/providers/spectrocloud/spectrocloud/latest/docs/data-sources/pack) data source. This value is required if the pack type is `spectro`.
                                type: string
                              values:
                                description: |-
                                  (String) The values of the pack. The values are the configuration values of the pack. The values are specified in YAML format.
                                  The values of the pack. The values are the configuration values of the pack. The values are specified in YAML format.
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                  clusterRbacBinding:
                    description: |-
                      (Block List) The RBAC binding for the cluster. (see below for nested schema)
                      The RBAC binding for the cluster.
                    items:
                      properties:
                        namespace:
                          description: |-
                            (String) The Kubernetes namespace of the RBAC binding. Required if 'type' is set to 'RoleBinding'.
                            The Kubernetes namespace of the RBAC binding. Required if 'type' is set to 'RoleBinding'.
                          type: string
                        role:
                          additionalProperties:
                            type: string
                          description: |-
                            (Map of String) The role of the RBAC binding. Required if 'type' is set to 'RoleBinding'.
                            The role of the RBAC binding. Required if 'type' is set to 'RoleBinding'.
                          type: object
                        subjects:
                          description: (Block List) (see below for nested schema)
                          items:
                            properties:
                              name:
                                description: |-
                                  (String)
                                  The name of the subject. Required if 'type' is set to 'User' or 'Group'.
                                type: string
                              namespace:
                                description: |-
                                  (String) The Kubernetes namespace of the RBAC binding. Required if 'type' is set to 'RoleBinding'.
                                  The Kubernetes namespace of the subject. Required if 'type' is set to 'ServiceAccount'.
                                type: string
                              type:
                                description: |-
                                  (String) The type of the pack. Allowed values are spectro, manifest or helm. The default value is spectro.
                                  The type of the subject. Can be one of the following values: `User`, `Group`, or `ServiceAccount`.
                                type: string
                            type: object
                          type: array
                        type:
                          description: |-
                            (String) The type of the pack. Allowed values are spectro, manifest or helm. The default value is spectro.
                            The type of the RBAC binding. Can be one of the following values: `RoleBinding`, or `ClusterRoleBinding`.
                          type: string
                      type: object
                    type: array
                  context:
                    description: |-
                      (String) The context of the AKS cluster. Allowed values are project or tenant. Default is project. If  the project context is specified, the project name will sourced from the provider configuration parameter project_name.
                      The context of the AKS cluster. Allowed values are `project` or `tenant`. Default is `project`. If  the `project` context is specified, the project name will sourced from the provider configuration parameter [`project_name`](https://registry.io/providers/spectrocloud/spectrocloud/latest/docs#schema).
                    type: string
                  description:
                    description: |-
                      (String) The description of the cluster. Default value is empty string.
                      The description of the cluster. Default value is empty string.
                    type: string
                  forceDelete:
                    description: |-
                      (Boolean) If set to true, the cluster will be force deleted and user has to manually clean up the provisioned cloud resources.
                      If set to `true`, the cluster will be force deleted and user has to manually clean up the provisioned cloud resources.
                    type: boolean
                  forceDeleteDelay:
                    description: |-
                      (Number) Delay duration in minutes to before invoking cluster force delete. Default and minimum is 20.
                      Delay duration in minutes to before invoking cluster force delete. Default and minimum is 20.
                    type: number
                  hostConfig:
                    description: |-
                      (Block List) The host configuration for the cluster. (see below for nested schema)
                      The host configuration for the cluster.
                    items:
                      properties:
                        externalTrafficPolicy:
                          description: |-
                            (String) The external traffic policy for the cluster.
                            The external traffic policy for the cluster.
                          type: string
                        hostEndpointType:
                          description: |-
                            (String) The type of endpoint for the cluster. Can be either 'Ingress' or 'LoadBalancer'. The default is 'Ingress'.
                            The type of endpoint for the cluster. Can be either 'Ingress' or 'LoadBalancer'. The default is 'Ingress'.
                          type: string
                        ingressHost:
                          description: |-
                            (String) The host for the Ingress endpoint. Required if 'host_endpoint_type' is set to 'Ingress'.
                            The host for the Ingress endpoint. Required if 'host_endpoint_type' is set to 'Ingress'.
                          type: string
                        loadBalancerSourceRanges:
                          description: |-
                            (String) The source ranges for the load balancer. Required if 'host_endpoint_type' is set to 'LoadBalancer'.
                            The source ranges for the load balancer. Required if 'host_endpoint_type' is set to 'LoadBalancer'.
                          type: string
                      type: object
                    type: array
                  machinePool:
                    description: '(Block List, Min: 1) (see below for nested schema)'
                    items:
                      properties:
                        additionalLabels:
                          additionalProperties:
                            type: string
                          description: (Map of String)
                          type: object
                        count:
                          description: |-
                            (Number) Number of nodes in the machine pool.
                            Number of nodes in the machine pool.
                          type: number
                        diskSizeGb:
                          description: (Number)
                          type: number
                        instanceType:
                          description: (String)
                          type: string
                        isSystemNodePool:
                          description: (Boolean)
                          type: boolean
                        max:
                          description: |-
                            (Number) Maximum number of nodes in the machine pool. This is used for autoscaling the machine pool.
                            Maximum number of nodes in the machine pool. This is used for autoscaling the machine pool.
                          type: number
                        min:
                          description: |-
                            (Number) Minimum number of nodes in the machine pool. This is used for autoscaling the machine pool.
                            Minimum number of nodes in the machine pool. This is used for autoscaling the machine pool.
                          type: number
                        name:
                          description: (String)
                          type: string
                        node:
                          description: (Block List) (see below for nested schema)
                          items:
                            properties:
                              action:
                                description: |-
                                  (String) The action to perform on the node. Valid values are: cordon, uncordon.
                                  The action to perform on the node. Valid values are: `cordon`, `uncordon`.
                                type: string
                              nodeId:
                                description: |-
                                  07f899a33dee624f7
                                  The node_id of the node, For example `i-07f899a33dee624f7`
                                type: string
                            type: object
                          type: array
                        storageAccountType:
                          description: (String)
                          type: string
                        taints:
                          description: (Block List) (see below for nested schema)
                          items:
                            properties:
                              effect:
                                description: |-
                                  (String) The effect of the taint. Allowed values are: NoSchedule, PreferNoSchedule or NoExecute.
                                  The effect of the taint. Allowed values are: `NoSchedule`, `PreferNoSchedule` or `NoExecute`.
                                type: string
                              key:
                                description: |-
                                  (String) The key of the taint.
                                  The key of the taint.
                                type: string
                              value:
                                description: |-
                                  (String) The value of the taint.
                                  The value of the taint.
                                type: string
                            type: object
                          type: array
                        updateStrategy:
                          description: |-
                            (String) Update strategy for the machine pool. Valid values are RollingUpdateScaleOut and RollingUpdateScaleIn.
                            Update strategy for the machine pool. Valid values are `RollingUpdateScaleOut` and `RollingUpdateScaleIn`.
                          type: string
                      type: object
                    type: array
                  namespaces:
                    description: |-
                      (Block List) The namespaces for the cluster. (see below for nested schema)
                      The namespaces for the cluster.
                    items:
                      properties:
                        imagesBlacklist:
                          description: |-
                            (List of String) List of images to disallow for the namespace. For example, ['nginx:latest', 'redis:latest']
                            List of images to disallow for the namespace. For example, `['nginx:latest', 'redis:latest']`
                          items:
                            type: string
                          type: array
                        name:
                          description: |-
                            (String)
                            Name of the namespace. This is the name of the Kubernetes namespace in the cluster.
                          type: string
                        resourceAllocation:
                          additionalProperties:
                            type: string
                          description: |-
                            (Map of String) Resource allocation for the namespace. This is a map containing the resource type and the resource value. For example, {cpu_cores: '2', memory_MiB: '2048'}
                            Resource allocation for the namespace. This is a map containing the resource type and the resource value. For example, `{cpu_cores: '2', memory_MiB: '2048'}`
                          type: object
                      type: object
                    type: array
                  osPatchAfter:
                    description: |-
                      01-02T15:04:05Z07:00
                      The date and time after which to patch the cluster. Prefix the time value with the respective RFC. Ex: `RFC3339: 2006-01-02T15:04:05Z07:00`
                    type: string
                  osPatchOnBoot:
                    description: |-
                      (Boolean) Whether to apply OS patch on boot. Default is false.
                      Whether to apply OS patch on boot. Default is `false`.
                    type: boolean
                  osPatchSchedule:
                    description: |-
                      (String) The cron schedule for OS patching. This must be in the form of cron syntax. Ex: 0 0 * * *.
                      The cron schedule for OS patching. This must be in the form of cron syntax. Ex: `0 0 * * *`.
                    type: string
                  pauseAgentUpgrades:
                    description: |-
                      (String) The pause agent upgrades setting allows to control the automatic upgrade of the Palette component and agent for an individual cluster. The default value is unlock, meaning upgrades occur automatically. Setting it to lock pauses automatic agent upgrades for the cluster.
                      The pause agent upgrades setting allows to control the automatic upgrade of the Palette component and agent for an individual cluster. The default value is `unlock`, meaning upgrades occur automatically. Setting it to `lock` pauses automatic agent upgrades for the cluster.
                    type: string
                  reviewRepaveState:
                    description: |-
                      (String) To authorize the cluster repave, set the value to Approved for approval and "" to decline. Default value is "".
                      To authorize the cluster repave, set the value to `Approved` for approval and `""` to decline. Default value is `""`.
                    type: string
                  scanPolicy:
                    description: |-
                      (Block List, Max: 1) The scan policy for the cluster. (see below for nested schema)
                      The scan policy for the cluster.
                    items:
                      properties:
                        configurationScanSchedule:
                          description: |-
                            (String) The schedule for configuration scan.
                            The schedule for configuration scan.
                          type: string
                        conformanceScanSchedule:
                          description: |-
                            (String) The schedule for conformance scan.
                            The schedule for conformance scan.
                          type: string
                        penetrationScanSchedule:
                          description: |-
                            (String) The schedule for penetration scan.
                            The schedule for penetration scan.
                          type: string
                      type: object
                    type: array
                  skipCompletion:
                    description: |-
                      (Boolean) If true, the cluster will be created asynchronously. Default value is false.
                      If `true`, the cluster will be created asynchronously. Default value is `false`.
                    type: boolean
                  tags:
                    description: |-
                      (Set of String) A list of tags to be applied to the cluster. Tags must be in the form of key:value.
                      A list of tags to be applied to the cluster. Tags must be in the form of `key:value`.
                    items:
                      type: string
                    type: array
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  applySetting:
                    description: |-
                      (String) The setting to apply the cluster profile. DownloadAndInstall will download and install packs in one action. DownloadAndInstallLater will only download artifact and postpone install for later. Default value is DownloadAndInstall.
                      The setting to apply the cluster profile. `DownloadAndInstall` will download and install packs in one action. `DownloadAndInstallLater` will only download artifact and postpone install for later. Default value is `DownloadAndInstall`.
                    type: string
                  backupPolicy:
                    description: |-
                      (Block List, Max: 1) The backup policy for the cluster. If not specified, no backups will be taken. (see below for nested schema)
                      The backup policy for the cluster. If not specified, no backups will be taken.
                    items:
                      properties:
                        backupLocationId:
                          description: |-
                            (String) The ID of the backup location to use for the backup.
                            The ID of the backup location to use for the backup.
                          type: string
                        clusterUids:
                          description: |-
                            (Set of String) The list of cluster UIDs to include in the backup. If include_all_clusters is set to true, then all clusters will be included.
                            The list of cluster UIDs to include in the backup. If `include_all_clusters` is set to `true`, then all clusters will be included.
                          items:
                            type: string
                          type: array
                        expiryInHour:
                          description: |-
                            (Number) The number of hours after which the backup will be deleted. For example, if the expiry is set to 24, the backup will be deleted after 24 hours.
                            The number of hours after which the backup will be deleted. For example, if the expiry is set to 24, the backup will be deleted after 24 hours.
                          type: number
                        includeAllClusters:
                          description: |-
                            (Boolean) Whether to include all clusters in the backup. If set to false, only the clusters specified in cluster_uids will be included.
                            Whether to include all clusters in the backup. If set to false, only the clusters specified in `cluster_uids` will be included.
                          type: boolean
                        includeClusterResources:
                          description: |-
                            (Boolean) Whether to include the cluster resources in the backup. If set to false, only the cluster configuration and disks will be backed up.
                            Whether to include the cluster resources in the backup. If set to false, only the cluster configuration and disks will be backed up.
                          type: boolean
                        includeDisks:
                          description: |-
                            (Boolean) Whether to include the disks in the backup. If set to false, only the cluster configuration will be backed up.
                            Whether to include the disks in the backup. If set to false, only the cluster configuration will be backed up.
                          type: boolean
                        namespaces:
                          description: |-
                            (Block List) The namespaces for the cluster. (see below for nested schema)
                            The list of Kubernetes namespaces to include in the backup. If not specified, all namespaces will be included.
                          items:
                            type: string
                          type: array
                        prefix:
                          description: |-
                            -.
                            Prefix for the backup name. The backup name will be of the format <prefix>-<cluster-name>-<timestamp>.
                          type: string
                        schedule:
                          description: |-
                            (String) The schedule for the backup. The schedule is specified in cron format. For example, to run the backup every day at 1:00 AM, the schedule should be set to 0 1 * * *.
                            The schedule for the backup. The schedule is specified in cron format. For example, to run the backup every day at 1:00 AM, the schedule should be set to `0 1 * * *`.
                          type: string
                      type: object
                    type: array
                  cloudAccountId:
                    description: (String)
                    type: string
                  cloudConfig:
                    description: '(Block List, Min: 1, Max: 1) (see below for nested
                      schema)'
                    items:
                      properties:
                        controlPlaneCidr:
                          description: (String)
                          type: string
                        controlPlaneSubnetName:
                          description: (String)
                          type: string
                        controlPlaneSubnetSecurityGroupName:
                          description: (String)
                          type: string
                        privateCluster:
                          description: |-
                            (Boolean) Whether to create a private cluster(API endpoint). Default is false.
                            Whether to create a private cluster(API endpoint). Default is `false`.
                          type: boolean
                        region:
                          description: (String)
                          type: string
                        resourceGroup:
                          description: (String)
                          type: string
                        sshKey:
                          description: |-
                            (String) Public SSH key to be used for the cluster nodes.
                            Public SSH key to be used for the cluster nodes.
                          type: string
                        subscriptionId:
                          description: (String)
                          type: string
                        vnetCidrBlock:
                          description: (String)
                          type: string
                        vnetName:
                          description: (String)
                          type: string
                        vnetResourceGroup:
                          description: (String)
                          type: string
                        workerCidr:
                          description: (String)
                          type: string
                        workerSubnetName:
                          description: (String)
                          type: string
                        workerSubnetSecurityGroupName:
                          description: (String)
                          type: string
                      type: object
                    type: array
                  clusterMetaAttribute:
                    description: |-
                      (String) cluster_meta_attribute can be used to set additional cluster metadata information, eg {'nic_name': 'test', 'env': 'stage'}
                      `cluster_meta_attribute` can be used to set additional cluster metadata information, eg `{'nic_name': 'test', 'env': 'stage'}`
                    type: string
                  clusterProfile:
                    description: (Block List) (see below for nested schema)
                    items:
                      properties:
                        id:
                          description: |-
                            (String) The ID of this resource.
                            The ID of the cluster profile.
                          type: string
                        pack:
                          description: |-
                            (Block List) For packs of type spectro, helm, and manifest, at least one pack must be specified. (see below for nested schema)
                            For packs of type `spectro`, `helm`, and `manifest`, at least one pack must be specified.
                          items:
                            properties:
                              manifest:
                                description: (Block List) (see below for nested schema)
                                items:
                                  properties:
                                    content:
                                      description: |-
                                        (String) The content of the manifest. The content is the YAML content of the manifest.
                                        The content of the manifest. The content is the YAML content of the manifest.
                                      type: string
                                    name:
                                      description: |-
                                        (String)
                                        The name of the manifest. The name must be unique within the pack.
                                      type: string
                                  type: object
                                type: array
                              name:
                                description: |-
                                  (String)
                                  The name of the pack. The name must be unique within the cluster profile.
                                type: string
                              registryUid:
                                description: |-
                                  (String) The registry UID of the pack. The registry UID is the unique identifier of the registry. This attribute is required if there is more than one registry that contains a pack with the same name.
                                  The registry UID of the pack. The registry UID is the unique identifier of the registry. This attribute is required if there is more than one registry that contains a pack with the same name.
                                type: string
                              tag:
                                description: |-
                                  (String) The tag of the pack. The tag is the version of the pack. This attribute is required if the pack type is spectro or helm.
                                  The tag of the pack. The tag is the version of the pack. This attribute is required if the pack type is `spectro` or `helm`.
                                type: string
                              type:
                                description: |-
                                  (String) The type of the pack. Allowed values are spectro, manifest or helm. The default value is spectro.
                                  The type of the pack. Allowed values are `spectro`, `manifest` or `helm`. The default value is `spectro`.
                                type: string
                              uid:
                                description: |-
                                  (String) The unique identifier of the pack. The value can be looked up using the spectrocloud_pack data source. This value is required if the pack type is spectro.
                                  The unique identifier of the pack. The value can be looked up using the [`spectrocloud_pack`](https://registry.io/providers/spectrocloud/spectrocloud/latest/docs/data-sources/pack) data source. This value is required if the pack type is `spectro`.
                                type: string
                              values:
                                description: |-
                                  (String) The values of the pack. The values are the configuration values of the pack. The values are specified in YAML format.
                                  The values of the pack. The values are the configuration values of the pack. The values are specified in YAML format.
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                  clusterRbacBinding:
                    description: |-
                      (Block List) The RBAC binding for the cluster. (see below for nested schema)
                      The RBAC binding for the cluster.
                    items:
                      properties:
                        namespace:
                          description: |-
                            (String) The Kubernetes namespace of the RBAC binding. Required if 'type' is set to 'RoleBinding'.
                            The Kubernetes namespace of the RBAC binding. Required if 'type' is set to 'RoleBinding'.
                          type: string
                        role:
                          additionalProperties:
                            type: string
                          description: |-
                            (Map of String) The role of the RBAC binding. Required if 'type' is set to 'RoleBinding'.
                            The role of the RBAC binding. Required if 'type' is set to 'RoleBinding'.
                          type: object
                        subjects:
                          description: (Block List) (see below for nested schema)
                          items:
                            properties:
                              name:
                                description: |-
                                  (String)
                                  The name of the subject. Required if 'type' is set to 'User' or 'Group'.
                                type: string
                              namespace:
                                description: |-
                                  (String) The Kubernetes namespace of the RBAC binding. Required if 'type' is set to 'RoleBinding'.
                                  The Kubernetes namespace of the subject. Required if 'type' is set to 'ServiceAccount'.
                                type: string
                              type:
                                description: |-
                                  (String) The type of the pack. Allowed values are spectro, manifest or helm. The default value is spectro.
                                  The type of the subject. Can be one of the following values: `User`, `Group`, or `ServiceAccount`.
                                type: string
                            type: object
                          type: array
                        type:
                          description: |-
                            (String) The type of the pack. Allowed values are spectro, manifest or helm. The default value is spectro.
                            The type of the RBAC binding. Can be one of the following values: `RoleBinding`, or `ClusterRoleBinding`.
                          type: string
                      type: object
                    type: array
                  context:
                    description: |-
                      (String) The context of the AKS cluster. Allowed values are project or tenant. Default is project. If  the project context is specified, the project name will sourced from the provider configuration parameter project_name.
                      The context of the AKS cluster. Allowed values are `project` or `tenant`. Default is `project`. If  the `project` context is specified, the project name will sourced from the provider configuration parameter [`project_name`](https://registry.io/providers/spectrocloud/spectrocloud/latest/docs#schema).
                    type: string
                  description:
                    description: |-
                      (String) The description of the cluster. Default value is empty string.
                      The description of the cluster. Default value is empty string.
                    type: string
                  forceDelete:
                    description: |-
                      (Boolean) If set to true, the cluster will be force deleted and user has to manually clean up the provisioned cloud resources.
                      If set to `true`, the cluster will be force deleted and user has to manually clean up the provisioned cloud resources.
                    type: boolean
                  forceDeleteDelay:
                    description: |-
                      (Number) Delay duration in minutes to before invoking cluster force delete. Default and minimum is 20.
                      Delay duration in minutes to before invoking cluster force delete. Default and minimum is 20.
                    type: number
                  hostConfig:
                    description: |-
                      (Block List) The host configuration for the cluster. (see below for nested schema)
                      The host configuration for the cluster.
                    items:
                      properties:
                        externalTrafficPolicy:
                          description: |-
                            (String) The external traffic policy for the cluster.
                            The external traffic policy for the cluster.
                          type: string
                        hostEndpointType:
                          description: |-
                            (String) The type of endpoint for the cluster. Can be either 'Ingress' or 'LoadBalancer'. The default is 'Ingress'.
                            The type of endpoint for the cluster. Can be either 'Ingress' or 'LoadBalancer'. The default is 'Ingress'.
                          type: string
                        ingressHost:
                          description: |-
                            (String) The host for the Ingress endpoint. Required if 'host_endpoint_type' is set to 'Ingress'.
                            The host for the Ingress endpoint. Required if 'host_endpoint_type' is set to 'Ingress'.
                          type: string
                        loadBalancerSourceRanges:
                          description: |-
                            (String) The source ranges for the load balancer. Required if 'host_endpoint_type' is set to 'LoadBalancer'.
                            The source ranges for the load balancer. Required if 'host_endpoint_type' is set to 'LoadBalancer'.
                          type: string
                      type: object
                    type: array
                  machinePool:
                    description: '(Block List, Min: 1) (see below for nested schema)'
                    items:
                      properties:
                        additionalLabels:
                          additionalProperties:
                            type: string
                          description: (Map of String)
                          type: object
                        count:
                          description: |-
                            (Number) Number of nodes in the machine pool.
                            Number of nodes in the machine pool.
                          type: number
                        diskSizeGb:
                          description: (Number)
                          type: number
                        instanceType:
                          description: (String)
                          type: string
                        isSystemNodePool:
                          description: (Boolean)
                          type: boolean
                        max:
                          description: |-
                            (Number) Maximum number of nodes in the machine pool. This is used for autoscaling the machine pool.
                            Maximum number of nodes in the machine pool. This is used for autoscaling the machine pool.
                          type: number
                        min:
                          description: |-
                            (Number) Minimum number of nodes in the machine pool. This is used for autoscaling the machine pool.
                            Minimum number of nodes in the machine pool. This is used for autoscaling the machine pool.
                          type: number
                        name:
                          description: (String)
                          type: string
                        node:
                          description: (Block List) (see below for nested schema)
                          items:
                            properties:
                              action:
                                description: |-
                                  (String) The action to perform on the node. Valid values are: cordon, uncordon.
                                  The action to perform on the node. Valid values are: `cordon`, `uncordon`.
                                type: string
                              nodeId:
                                description: |-
                                  07f899a33dee624f7
                                  The node_id of the node, For example `i-07f899a33dee624f7`
                                type: string
                            type: object
                          type: array
                        storageAccountType:
                          description: (String)
                          type: string
                        taints:
                          description: (Block List) (see below for nested schema)
                          items:
                            properties:
                              effect:
                                description: |-
                                  (String) The effect of the taint. Allowed values are: NoSchedule, PreferNoSchedule or NoExecute.
                                  The effect of the taint. Allowed values are: `NoSchedule`, `PreferNoSchedule` or `NoExecute`.
                                type: string
                              key:
                                description: |-
                                  (String) The key of the taint.
                                  The key of the taint.
                                type: string
                              value:
                                description: |-
                                  (String) The value of the taint.
                                  The value of the taint.
                                type: string
                            type: object
                          type: array
                        updateStrategy:
                          description: |-
                            (String) Update strategy for the machine pool. Valid values are RollingUpdateScaleOut and RollingUpdateScaleIn.
                            Update strategy for the machine pool. Valid values are `RollingUpdateScaleOut` and `RollingUpdateScaleIn`.
                          type: string
                      type: object
                    type: array
                  namespaces:
                    description: |-
                      (Block List) The namespaces for the cluster. (see below for nested schema)
                      The namespaces for the cluster.
                    items:
                      properties:
                        imagesBlacklist:
                          description: |-
                            (List of String) List of images to disallow for the namespace. For example, ['nginx:latest', 'redis:latest']
                            List of images to disallow for the namespace. For example, `['nginx:latest', 'redis:latest']`
                          items:
                            type: string
                          type: array
                        name:
                          description: |-
                            (String)
                            Name of the namespace. This is the name of the Kubernetes namespace in the cluster.
                          type: string
                        resourceAllocation:
                          additionalProperties:
                            type: string
                          description: |-
                            (Map of String) Resource allocation for the namespace. This is a map containing the resource type and the resource value. For example, {cpu_cores: '2', memory_MiB: '2048'}
                            Resource allocation for the namespace. This is a map containing the resource type and the resource value. For example, `{cpu_cores: '2', memory_MiB: '2048'}`
                          type: object
                      type: object
                    type: array
                  osPatchAfter:
                    description: |-
                      01-02T15:04:05Z07:00
                      The date and time after which to patch the cluster. Prefix the time value with the respective RFC. Ex: `RFC3339: 2006-01-02T15:04:05Z07:00`
                    type: string
                  osPatchOnBoot:
                    description: |-
                      (Boolean) Whether to apply OS patch on boot. Default is false.
                      Whether to apply OS patch on boot. Default is `false`.
                    type: boolean
                  osPatchSchedule:
                    description: |-
                      (String) The cron schedule for OS patching. This must be in the form of cron syntax. Ex: 0 0 * * *.
                      The cron schedule for OS patching. This must be in the form of cron syntax. Ex: `0 0 * * *`.
                    type: string
                  pauseAgentUpgrades:
                    description: |-
                      (String) The pause agent upgrades setting allows to control the automatic upgrade of the Palette component and agent for an individual cluster. The default value is unlock, meaning upgrades occur automatically. Setting it to lock pauses automatic agent upgrades for the cluster.
                      The pause agent upgrades setting allows to control the automatic upgrade of the Palette component and agent for an individual cluster. The default value is `unlock`, meaning upgrades occur automatically. Setting it to `lock` pauses automatic agent upgrades for the cluster.
                    type: string
                  reviewRepaveState:
                    description: |-
                      (String) To authorize the cluster repave, set the value to Approved for approval and "" to decline. Default value is "".
                      To authorize the cluster repave, set the value to `Approved` for approval and `""` to decline. Default value is `""`.
                    type: string
                  scanPolicy:
                    description: |-
                      (Block List, Max: 1) The scan policy for the cluster. (see below for nested schema)
                      The scan policy for the cluster.
                    items:
                      properties:
                        configurationScanSchedule:
                          description: |-
                            (String) The schedule for configuration scan.
                            The schedule for configuration scan.
                          type: string
                        conformanceScanSchedule:
                          description: |-
                            (String) The schedule for conformance scan.
                            The schedule for conformance scan.
                          type: string
                        penetrationScanSchedule:
                          description: |-
                            (String) The schedule for penetration scan.
                            The schedule for penetration scan.
                          type: string
                      type: object
                    type: array
                  skipCompletion:
                    description: |-
                      (Boolean) If true, the cluster will be created asynchronously. Default value is false.
                      If `true`, the cluster will be created asynchronously. Default value is `false`.
                    type: boolean
                  tags:
                    description: |-
                      (Set of String) A list of tags to be applied to the cluster. Tags must be in the form of key:value.
                      A list of tags to be applied to the cluster. Tags must be in the form of `key:value`.
                    items:
                      type: string
                    type: array
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.cloudAccountId is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.cloudAccountId)
                || (has(self.initProvider) && has(self.initProvider.cloudAccountId))'
            - message: spec.forProvider.cloudConfig is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.cloudConfig)
                || (has(self.initProvider) && has(self.initProvider.cloudConfig))'
            - message: spec.forProvider.machinePool is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.machinePool)
                || (has(self.initProvider) && has(self.initProvider.machinePool))'
          status:
            description: AksStatus defines the observed state of Aks.
            properties:
              atProvider:
                properties:
                  adminKubeConfig:
                    description: |-
                      config for the cluster. This can be used to connect to the cluster using kubectl, With admin privilege.
                      Admin Kube-config for the cluster. This can be used to connect to the cluster using `kubectl`, With admin privilege.
                    type: string
                  applySetting:
                    description: |-
                      (String) The setting to apply the cluster profile. DownloadAndInstall will download and install packs in one action. DownloadAndInstallLater will only download artifact and postpone install for later. Default value is DownloadAndInstall.
                      The setting to apply the cluster profile. `DownloadAndInstall` will download and install packs in one action. `DownloadAndInstallLater` will only download artifact and postpone install for later. Default value is `DownloadAndInstall`.
                    type: string
                  backupPolicy:
                    description: |-
                      (Block List, Max: 1) The backup policy for the cluster. If not specified, no backups will be taken. (see below for nested schema)
                      The backup policy for the cluster. If not specified, no backups will be taken.
                    items:
                      properties:
                        backupLocationId:
                          description: |-
                            (String) The ID of the backup location to use for the backup.
                            The ID of the backup location to use for the backup.
                          type: string
                        clusterUids:
                          description: |-
                            (Set of String) The list of cluster UIDs to include in the backup. If include_all_clusters is set to true, then all clusters will be included.
                            The list of cluster UIDs to include in the backup. If `include_all_clusters` is set to `true`, then all clusters will be included.
                          items:
                            type: string
                          type: array
                        expiryInHour:
                          description: |-
                            (Number) The number of hours after which the backup will be deleted. For example, if the expiry is set to 24, the backup will be deleted after 24 hours.
                            The number of hours after which the backup will be deleted. For example, if the expiry is set to 24, the backup will be deleted after 24 hours.
                          type: number
                        includeAllClusters:
                          description: |-
                            (Boolean) Whether to include all clusters in the backup. If set to false, only the clusters specified in cluster_uids will be included.
                            Whether to include all clusters in the backup. If set to false, only the clusters specified in `cluster_uids` will be included.
                          type: boolean
                        includeClusterResources:
                          description: |-
                            (Boolean) Whether to include the cluster resources in the backup. If set to false, only the cluster configuration and disks will be backed up.
                            Whether to include the cluster resources in the backup. If set to false, only the cluster configuration and disks will be backed up.
                          type: boolean
                        includeDisks:
                          description: |-
                            (Boolean) Whether to include the disks in the backup. If set to false, only the cluster configuration will be backed up.
                            Whether to include the disks in the backup. If set to false, only the cluster configuration will be backed up.
                          type: boolean
                        namespaces:
                          description: |-
                            (Block List) The namespaces for the cluster. (see below for nested schema)
                            The list of Kubernetes namespaces to include in the backup. If not specified, all namespaces will be included.
                          items:
                            type: string
                          type: array
                        prefix:
                          description: |-
                            -.
                            Prefix for the backup name. The backup name will be of the format <prefix>-<cluster-name>-<timestamp>.
                          type: string
                        schedule:
                          description: |-
                            (String) The schedule for the backup. The schedule is specified in cron format. For example, to run the backup every day at 1:00 AM, the schedule should be set to 0 1 * * *.
                            The schedule for the backup. The schedule is specified in cron format. For example, to run the backup every day at 1:00 AM, the schedule should be set to `0 1 * * *`.
                          type: string
                      type: object
                    type: array
                  cloudAccountId:
                    description: (String)
                    type: string
                  cloudConfig:
                    description: '(Block List, Min: 1, Max: 1) (see below for nested
                      schema)'
                    items:
                      properties:
                        controlPlaneCidr:
                          description: (String)
                          type: string
                        controlPlaneSubnetName:
                          description: (String)
                          type: string
                        controlPlaneSubnetSecurityGroupName:
                          description: (String)
                          type: string
                        privateCluster:
                          description: |-
                            (Boolean) Whether to create a private cluster(API endpoint). Default is false.
                            Whether to create a private cluster(API endpoint). Default is `false`.
                          type: boolean
                        region:
                          description: (String)
                          type: string
                        resourceGroup:
                          description: (String)
                          type: string
                        sshKey:
                          description: |-
                            (String) Public SSH key to be used for the cluster nodes.
                            Public SSH key to be used for the cluster nodes.
                          type: string
                        subscriptionId:
                          description: (String)
                          type: string
                        vnetCidrBlock:
                          description: (String)
                          type: string
                        vnetName:
                          description: (String)
                          type: string
                        vnetResourceGroup:
                          description: (String)
                          type: string
                        workerCidr:
                          description: (String)
                          type: string
                        workerSubnetName:
                          description: (String)
                          type: string
                        workerSubnetSecurityGroupName:
                          description: (String)
                          type: string
                      type: object
                    type: array
                  cloudConfigId:
                    description: |-
                      (String, Deprecated) ID of the cloud config used for the cluster. This cloud config must be of type azure.
                      ID of the cloud config used for the cluster. This cloud config must be of type `azure`.
                    type: string
                  clusterMetaAttribute:
                    description: |-
                      (String) cluster_meta_attribute can be used to set additional cluster metadata information, eg {'nic_name': 'test', 'env': 'stage'}
                      `cluster_meta_attribute` can be used to set additional cluster metadata information, eg `{'nic_name': 'test', 'env': 'stage'}`
                    type: string
                  clusterProfile:
                    description: (Block List) (see below for nested schema)
                    items:
                      properties:
                        id:
                          description: |-
                            (String) The ID of this resource.
                            The ID of the cluster profile.
                          type: string
                        pack:
                          description: |-
                            (Block List) For packs of type spectro, helm, and manifest, at least one pack must be specified. (see below for nested schema)
                            For packs of type `spectro`, `helm`, and `manifest`, at least one pack must be specified.
                          items:
                            properties:
                              manifest:
                                description: (Block List) (see below for nested schema)
                                items:
                                  properties:
                                    content:
                                      description: |-
                                        (String) The content of the manifest. The content is the YAML content of the manifest.
                                        The content of the manifest. The content is the YAML content of the manifest.
                                      type: string
                                    name:
                                      description: |-
                                        (String)
                                        The name of the manifest. The name must be unique within the pack.
                                      type: string
                                    uid:
                                      description: (String) The unique identifier
                                        of the pack. The value can be looked up using
                                        the spectrocloud_pack data source. This value
                                        is required if the pack type is spectro.
                                      type: string
                                  type: object
                                type: array
                              name:
                                description: |-
                                  (String)
                                  The name of the pack. The name must be unique within the cluster profile.
                                type: string
                              registryUid:
                                description: |-
                                  (String) The registry UID of the pack. The registry UID is the unique identifier of the registry. This attribute is required if there is more than one registry that contains a pack with the same name.
                                  The registry UID of the pack. The registry UID is the unique identifier of the registry. This attribute is required if there is more than one registry that contains a pack with the same name.
                                type: string
                              tag:
                                description: |-
                                  (String) The tag of the pack. The tag is the version of the pack. This attribute is required if the pack type is spectro or helm.
                                  The tag of the pack. The tag is the version of the pack. This attribute is required if the pack type is `spectro` or `helm`.
                                type: string
                              type:
                                description: |-
                                  (String) The type of the pack. Allowed values are spectro, manifest or helm. The default value is spectro.
                                  The type of the pack. Allowed values are `spectro`, `manifest` or `helm`. The default value is `spectro`.
                                type: string
                              uid:
                                description: |-
                                  (String) The unique identifier of the pack. The value can be looked up using the spectrocloud_pack data source. This value is required if the pack type is spectro.
                                  The unique identifier of the pack. The value can be looked up using the [`spectrocloud_pack`](https://registry.io/providers/spectrocloud/spectrocloud/latest/docs/data-sources/pack) data source. This value is required if the pack type is `spectro`.
                                type: string
                              values:
                                description: |-
                                  (String) The values of the pack. The values are the configuration values of the pack. The values are specified in YAML format.
                                  The values of the pack. The values are the configuration values of the pack. The values are specified in YAML format.
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                  clusterRbacBinding:
                    description: |-
                      (Block List) The RBAC binding for the cluster. (see below for nested schema)
                      The RBAC binding for the cluster.
                    items:
                      properties:
                        namespace:
                          description: |-
                            (String) The Kubernetes namespace of the RBAC binding. Required if 'type' is set to 'RoleBinding'.
                            The Kubernetes namespace of the RBAC binding. Required if 'type' is set to 'RoleBinding'.
                          type: string
                        role:
                          additionalProperties:
                            type: string
                          description: |-
                            (Map of String) The role of the RBAC binding. Required if 'type' is set to 'RoleBinding'.
                            The role of the RBAC binding. Required if 'type' is set to 'RoleBinding'.
                          type: object
                        subjects:
                          description: (Block List) (see below for nested schema)
                          items:
                            properties:
                              name:
                                description: |-
                                  (String)
                                  The name of the subject. Required if 'type' is set to 'User' or 'Group'.
                                type: string
                              namespace:
                                description: |-
                                  (String) The Kubernetes namespace of the RBAC binding. Required if 'type' is set to 'RoleBinding'.
                                  The Kubernetes namespace of the subject. Required if 'type' is set to 'ServiceAccount'.
                                type: string
                              type:
                                description: |-
                                  (String) The type of the pack. Allowed values are spectro, manifest or helm. The default value is spectro.
                                  The type of the subject. Can be one of the following values: `User`, `Group`, or `ServiceAccount`.
                                type: string
                            type: object
                          type: array
                        type:
                          description: |-
                            (String) The type of the pack. Allowed values are spectro, manifest or helm. The default value is spectro.
                            The type of the RBAC binding. Can be one of the following values: `RoleBinding`, or `ClusterRoleBinding`.
                          type: string
                      type: object
                    type: array
                  context:
                    description: |-
                      (String) The context of the AKS cluster. Allowed values are project or tenant. Default is project. If  the project context is specified, the project name will sourced from the provider configuration parameter project_name.
                      The context of the AKS cluster. Allowed values are `project` or `tenant`. Default is `project`. If  the `project` context is specified, the project name will sourced from the provider configuration parameter [`project_name`](https://registry.io/providers/spectrocloud/spectrocloud/latest/docs#schema).
                    type: string
                  description:
                    description: |-
                      (String) The description of the cluster. Default value is empty string.
                      The description of the cluster. Default value is empty string.
                    type: string
                  forceDelete:
                    description: |-
                      (Boolean) If set to true, the cluster will be force deleted and user has to manually clean up the provisioned cloud resources.
                      If set to `true`, the cluster will be force deleted and user has to manually clean up the provisioned cloud resources.
                    type: boolean
                  forceDeleteDelay:
                    description: |-
                      (Number) Delay duration in minutes to before invoking cluster force delete. Default and minimum is 20.
                      Delay duration in minutes to before invoking cluster force delete. Default and minimum is 20.
                    type: number
                  hostConfig:
                    description: |-
                      (Block List) The host configuration for the cluster. (see below for nested schema)
                      The host configuration for the cluster.
                    items:
                      properties:
                        externalTrafficPolicy:
                          description: |-
                            (String) The external traffic policy for the cluster.
                            The external traffic policy for the cluster.
                          type: string
                        hostEndpointType:
                          description: |-
                            (String) The type of endpoint for the cluster. Can be either 'Ingress' or 'LoadBalancer'. The default is 'Ingress'.
                            The type of endpoint for the cluster. Can be either 'Ingress' or 'LoadBalancer'. The default is 'Ingress'.
                          type: string
                        ingressHost:
                          description: |-
                            (String) The host for the Ingress endpoint. Required if 'host_endpoint_type' is set to 'Ingress'.
                            The host for the Ingress endpoint. Required if 'host_endpoint_type' is set to 'Ingress'.
                          type: string
                        loadBalancerSourceRanges:
                          description: |-
                            (String) The source ranges for the load balancer. Required if 'host_endpoint_type' is set to 'LoadBalancer'.
                            The source ranges for the load balancer. Required if 'host_endpoint_type' is set to 'LoadBalancer'.
                          type: string
                      type: object
                    type: array
                  id:
                    description: (String) The ID of this resource.
                    type: string
                  kubeconfig:
                    description: |-
                      (String) Kubeconfig for the cluster. This can be used to connect to the cluster using kubectl.
                      Kubeconfig for the cluster. This can be used to connect to the cluster using `kubectl`.
                    type: string
                  locationConfig:
                    description: |-
                      (List of Object) The location of the cluster. (see below for nested schema)
                      The location of the cluster.
                    items:
                      properties:
                        countryCode:
                          description: (String)
                          type: string
                        countryName:
                          description: (String)
                          type: string
                        latitude:
                          description: (Number)
                          type: number
                        longitude:
                          description: (Number)
                          type: number
                        regionCode:
                          description: (String)
                          type: string
                        regionName:
                          description: (String)
                          type: string
                      type: object
                    type: array
                  machinePool:
                    description: '(Block List, Min: 1) (see below for nested schema)'
                    items:
                      properties:
                        additionalLabels:
                          additionalProperties:
                            type: string
                          description: (Map of String)
                          type: object
                        count:
                          description: |-
                            (Number) Number of nodes in the machine pool.
                            Number of nodes in the machine pool.
                          type: number
                        diskSizeGb:
                          description: (Number)
                          type: number
                        instanceType:
                          description: (String)
                          type: string
                        isSystemNodePool:
                          description: (Boolean)
                          type: boolean
                        max:
                          description: |-
                            (Number) Maximum number of nodes in the machine pool. This is used for autoscaling the machine pool.
                            Maximum number of nodes in the machine pool. This is used for autoscaling the machine pool.
                          type: number
                        min:
                          description: |-
                            (Number) Minimum number of nodes in the machine pool. This is used for autoscaling the machine pool.
                            Minimum number of nodes in the machine pool. This is used for autoscaling the machine pool.
                          type: number
                        name:
                          description: (String)
                          type: string
                        node:
                          description: (Block List) (see below for nested schema)
                          items:
                            properties:
                              action:
                                description: |-
                                  (String) The action to perform on the node. Valid values are: cordon, uncordon.
                                  The action to perform on the node. Valid values are: `cordon`, `uncordon`.
                                type: string
                              nodeId:
                                description: |-
                                  07f899a33dee624f7
                                  The node_id of the node, For example `i-07f899a33dee624f7`
                                type: string
                            type: object
                          type: array
                        storageAccountType:
                          description: (String)
                          type: string
                        taints:
                          description: (Block List) (see below for nested schema)
                          items:
                            properties:
                              effect:
                                description: |-
                                  (String) The effect of the taint. Allowed values are: NoSchedule, PreferNoSchedule or NoExecute.
                                  The effect of the taint. Allowed values are: `NoSchedule`, `PreferNoSchedule` or `NoExecute`.
                                type: string
                              key:
                                description: |-
                                  (String) The key of the taint.
                                  The key of the taint.
                                type: string
                              value:
                                description: |-
                                  (String) The value of the taint.
                                  The value of the taint.
                                type: string
                            type: object
                          type: array
                        updateStrategy:
                          description: |-
                            (String) Update strategy for the machine pool. Valid values are RollingUpdateScaleOut and RollingUpdateScaleIn.
                            Update strategy for the machine pool. Valid values are `RollingUpdateScaleOut` and `RollingUpdateScaleIn`.
                          type: string
                      type: object
                    type: array
                  namespaces:
                    description: |-
                      (Block List) The namespaces for the cluster. (see below for nested schema)
                      The namespaces for the cluster.
                    items:
                      properties:
                        imagesBlacklist:
                          description: |-
                            (List of String) List of images to disallow for the namespace. For example, ['nginx:latest', 'redis:latest']
                            List of images to disallow for the namespace. For example, `['nginx:latest', 'redis:latest']`
                          items:
                            type: string
                          type: array
                        name:
                          description: |-
                            (String)
                            Name of the namespace. This is the name of the Kubernetes namespace in the cluster.
                          type: string
                        resourceAllocation:
                          additionalProperties:
                            type: string
                          description: |-
                            (Map of String) Resource allocation for the namespace. This is a map containing the resource type and the resource value. For example, {cpu_cores: '2', memory_MiB: '2048'}
                            Resource allocation for the namespace. This is a map containing the resource type and the resource value. For example, `{cpu_cores: '2', memory_MiB: '2048'}`
                          type: object
                      type: object
                    type: array
                  osPatchAfter:
                    description: |-
                      01-02T15:04:05Z07:00
                      The date and time after which to patch the cluster. Prefix the time value with the respective RFC. Ex: `RFC3339: 2006-01-02T15:04:05Z07:00`
                    type: string
                  osPatchOnBoot:
                    description: |-
                      (Boolean) Whether to apply OS patch on boot. Default is false.
                      Whether to apply OS patch on boot. Default is `false`.
                    type: boolean
                  osPatchSchedule:
                    description: |-
                      (String) The cron schedule for OS patching. This must be in the form of cron syntax. Ex: 0 0 * * *.
                      The cron schedule for OS patching. This must be in the form of cron syntax. Ex: `0 0 * * *`.
                    type: string
                  pauseAgentUpgrades:
                    description: |-
                      (String) The pause agent upgrades setting allows to control the automatic upgrade of the Palette component and agent for an individual cluster. The default value is unlock, meaning upgrades occur automatically. Setting it to lock pauses automatic agent upgrades for the cluster.
                      The pause agent upgrades setting allows to control the automatic upgrade of the Palette component and agent for an individual cluster. The default value is `unlock`, meaning upgrades occur automatically. Setting it to `lock` pauses automatic agent upgrades for the cluster.
                    type: string
                  reviewRepaveState:
                    description: |-
                      (String) To authorize the cluster repave, set the value to Approved for approval and "" to decline. Default value is "".
                      To authorize the cluster repave, set the value to `Approved` for approval and `""` to decline. Default value is `""`.
                    type: string
                  scanPolicy:
                    description: |-
                      (Block List, Max: 1) The scan policy for the cluster. (see below for nested schema)
                      The scan policy for the cluster.
                    items:
                      properties:
                        configurationScanSchedule:
                          description: |-
                            (String) The schedule for configuration scan.
                            The schedule for configuration scan.
                          type: string
                        conformanceScanSchedule:
                          description: |-
                            (String) The schedule for conformance scan.
                            The schedule for conformance scan.
                          type: string
                        penetrationScanSchedule:
                          description: |-
                            (String) The schedule for penetration scan.
                            The schedule for penetration scan.
                          type: string
                      type: object
                    type: array
                  skipCompletion:
                    description: |-
                      (Boolean) If true, the cluster will be created asynchronously. Default value is false.
                      If `true`, the cluster will be created asynchronously. Default value is `false`.
                    type: boolean
                  tags:
                    description: |-
                      (Set of String) A list of tags to be applied to the cluster. Tags must be in the form of key:value.
                      A list of tags to be applied to the cluster. Tags must be in the form of `key:value`.
                    items:
                      type: string
                    type: array
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
