---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: aws.cluster.jet-palette.upbound.io
spec:
  group: cluster.jet-palette.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - jet-palette
    kind: Aws
    listKind: AwsList
    plural: aws
    singular: aws
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Aws is the Schema for the Awss API. <no value>
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: AwsSpec defines the desired state of Aws
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  applySetting:
                    type: string
                  backupPolicy:
                    items:
                      properties:
                        backupLocationId:
                          type: string
                        expiryInHour:
                          type: number
                        includeClusterResources:
                          type: boolean
                        includeDisks:
                          type: boolean
                        namespaces:
                          items:
                            type: string
                          type: array
                        prefix:
                          type: string
                        schedule:
                          type: string
                      required:
                      - backupLocationId
                      - expiryInHour
                      - prefix
                      - schedule
                      type: object
                    type: array
                  cloudAccountId:
                    type: string
                  cloudConfig:
                    items:
                      properties:
                        region:
                          type: string
                        sshKeyName:
                          type: string
                        vpcId:
                          type: string
                      required:
                      - region
                      - sshKeyName
                      type: object
                    type: array
                  clusterProfile:
                    items:
                      properties:
                        id:
                          type: string
                        pack:
                          items:
                            properties:
                              manifest:
                                items:
                                  properties:
                                    content:
                                      type: string
                                    name:
                                      type: string
                                  required:
                                  - content
                                  - name
                                  type: object
                                type: array
                              name:
                                type: string
                              registryUid:
                                type: string
                              tag:
                                type: string
                              type:
                                type: string
                              values:
                                type: string
                            required:
                            - name
                            - values
                            type: object
                          type: array
                      required:
                      - id
                      type: object
                    type: array
                  clusterProfileId:
                    type: string
                  clusterRbacBinding:
                    items:
                      properties:
                        namespace:
                          type: string
                        role:
                          additionalProperties:
                            type: string
                          type: object
                        subjects:
                          items:
                            properties:
                              name:
                                type: string
                              namespace:
                                type: string
                              type:
                                type: string
                            required:
                            - name
                            - type
                            type: object
                          type: array
                        type:
                          type: string
                      required:
                      - type
                      type: object
                    type: array
                  hostConfig:
                    items:
                      properties:
                        externalTrafficPolicy:
                          description: The external traffic policy for the cluster.
                          type: string
                        hostEndpointType:
                          description: The type of endpoint for the cluster. Can be
                            either 'Ingress' or 'LoadBalancer'. The default is 'Ingress'.
                          type: string
                        ingressHost:
                          description: The host for the Ingress endpoint. Required
                            if 'host_endpoint_type' is set to 'Ingress'.
                          type: string
                        loadBalancerSourceRanges:
                          description: The source ranges for the load balancer. Required
                            if 'host_endpoint_type' is set to 'LoadBalancer'.
                          type: string
                      type: object
                    type: array
                  machinePool:
                    items:
                      properties:
                        additionalLabels:
                          additionalProperties:
                            type: string
                          type: object
                        azSubnets:
                          additionalProperties:
                            type: string
                          description: Mutually exclusive with `azs`. Use `az_subnets`
                            for Static provisioning.
                          type: object
                        azs:
                          description: Mutually exclusive with `az_subnets`. Use `azs`
                            for Dynamic provisioning.
                          items:
                            type: string
                          type: array
                        capacityType:
                          description: Capacity type is an instance type,  can be
                            'on-demand' or 'spot'. Defaults to 'on-demand'.
                          type: string
                        controlPlane:
                          type: boolean
                        controlPlaneAsWorker:
                          type: boolean
                        count:
                          type: number
                        diskSizeGb:
                          type: number
                        instanceType:
                          type: string
                        maxPrice:
                          type: string
                        name:
                          type: string
                        taints:
                          items:
                            properties:
                              effect:
                                type: string
                              key:
                                type: string
                              value:
                                type: string
                            required:
                            - effect
                            - key
                            - value
                            type: object
                          type: array
                        updateStrategy:
                          type: string
                      required:
                      - count
                      - instanceType
                      - name
                      type: object
                    type: array
                  namespaces:
                    items:
                      properties:
                        name:
                          type: string
                        resourceAllocation:
                          additionalProperties:
                            type: string
                          type: object
                      required:
                      - name
                      - resourceAllocation
                      type: object
                    type: array
                  osPatchAfter:
                    type: string
                  osPatchOnBoot:
                    type: boolean
                  osPatchSchedule:
                    type: string
                  pack:
                    items:
                      properties:
                        name:
                          type: string
                        registryUid:
                          type: string
                        tag:
                          type: string
                        values:
                          type: string
                      required:
                      - name
                      - tag
                      - values
                      type: object
                    type: array
                  scanPolicy:
                    items:
                      properties:
                        configurationScanSchedule:
                          type: string
                        conformanceScanSchedule:
                          type: string
                        penetrationScanSchedule:
                          type: string
                      required:
                      - configurationScanSchedule
                      - conformanceScanSchedule
                      - penetrationScanSchedule
                      type: object
                    type: array
                  skipCompletion:
                    type: boolean
                  tags:
                    items:
                      type: string
                    type: array
                required:
                - cloudAccountId
                - cloudConfig
                - machinePool
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: AwsStatus defines the observed state of Aws.
            properties:
              atProvider:
                properties:
                  cloudConfigId:
                    type: string
                  id:
                    type: string
                  kubeconfig:
                    type: string
                  locationConfig:
                    items:
                      properties:
                        countryCode:
                          type: string
                        countryName:
                          type: string
                        latitude:
                          type: number
                        longitude:
                          type: number
                        regionCode:
                          type: string
                        regionName:
                          type: string
                      type: object
                    type: array
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
