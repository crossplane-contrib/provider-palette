apiVersion: cluster.palette.crossplane.io/v1alpha1
kind: Profile
metadata:
  name: ran-cp-vsphere-profile
  annotations:
    description: "VSphere Cluster Profile for Kubernetes deployment"
spec:
  forProvider:
    cloud: vsphere
    context: project
    type: cluster
    description: "A basic cluster profile for VSphere"
    version: "1.0.0"
    pack:
      - name: "ubuntu-vsphere"
        type: oci
        tag: "22.04"
        uid: "<YOUR_PACK_UID>"
        registryUid: "<YOUR_REGISTRY_UID>"
        values: |
          # Spectro Golden images includes most of the hardening as per CIS Ubuntu Linux 22.04 LTS Server L1 v1.0.0 standards

          # Uncomment below section to
          # 1. Include custom files to be copied over to the nodes and/or
          # 2. Execute list of commands before or after kubeadm init/join is executed
          #
          #kubeadmconfig:
          #  preKubeadmCommands:
          #  - echo "Executing pre kube admin config commands"
          #  - update-ca-certificates
          #  - 'systemctl restart containerd; sleep 3'
          #  - 'while [ ! -S /var/run/containerd/containerd.sock ]; do echo "Waiting for containerd..."; sleep 1; done'
          #  postKubeadmCommands:
          #  - echo "Executing post kube admin config commands"
          #  files:
          #  - targetPath: /usr/local/share/ca-certificates/mycom.crt
          #    targetOwner: "root:root"
          #    targetPermissions: "0644"
          #    content: |
          #      -----BEGIN CERTIFICATE-----
          #      MIICyzCCAbOgAwIBAgIBADANBgkqhkiG9w0BAQsFADAVMRMwEQYDVQQDEwprdWJl
          #      cm5ldGVzMB4XDTIwMDkyMjIzNDMyM1oXDTMwMDkyMDIzNDgyM1owFTETMBEGA1UE
          #      AxMKa3ViZXJuZXRlczCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMdA
          #      nZYs1el/6f9PgV/aO9mzy7MvqaZoFnqO7Qi4LZfYzixLYmMUzi+h8/RLPFIoYLiz
          #      qiDn+P8c9I1uxB6UqGrBt7dkXfjrUZPs0JXEOX9U/6GFXL5C+n3AUlAxNCS5jobN
          #      fbLt7DH3WoT6tLcQefTta2K+9S7zJKcIgLmBlPNDijwcQsbenSwDSlSLkGz8v6N2
          #      7SEYNCV542lbYwn42kbcEq2pzzAaCqa5uEPsR9y+uzUiJpv5tDHUdjbFT8tme3vL
          #      9EdCPODkqtMJtCvz0hqd5SxkfeC2L+ypaiHIxbwbWe7GtliROvz9bClIeGY7gFBK
          #      jZqpLdbBVjo0NZBTJFUCAwEAAaMmMCQwDgYDVR0PAQH/BAQDAgKkMBIGA1UdEwEB
          #      /wQIMAYBAf8CAQAwDQYJKoZIhvcNAQELBQADggEBADIKoE0P+aVJGV9LWGLiOhki
          #      HFv/vPPAQ2MPk02rLjWzCaNrXD7aPPgT/1uDMYMHD36u8rYyf4qPtB8S5REWBM/Y
          #      g8uhnpa/tGsaqO8LOFj6zsInKrsXSbE6YMY6+A8qvv5lPWpJfrcCVEo2zOj7WGoJ
          #      ixi4B3fFNI+wih8/+p4xW+n3fvgqVYHJ3zo8aRLXbXwztp00lXurXUyR8EZxyR+6
          #      b+IDLmHPEGsY9KOZ9VLLPcPhx5FR9njFyXvDKmjUMJJgUpRkmsuU1mCFC+OHhj56
          #      IkLaSJf6z/p2a3YjTxvHNCqFMLbJ2FvJwYCRzsoT2wm2oulnUAMWPI10vdVM+Nc=
          #      -----END CERTIFICATE-----

      - name: "kubernetes"
        tag: "1.32.3"
        type: oci
        uid: "<YOUR_PACK_UID>"
        registryUid: "<YOUR_REGISTRY_UID>"
        values: |
          pack:
            content:
              images:
                - image: registry.k8s.io/coredns/coredns:v1.11.3
                - image: registry.k8s.io/etcd:3.5.16-0
                - image: registry.k8s.io/kube-apiserver:v1.32.3
                - image: registry.k8s.io/kube-controller-manager:v1.32.3
                - image: registry.k8s.io/kube-proxy:v1.32.3
                - image: registry.k8s.io/kube-scheduler:v1.32.3
                - image: registry.k8s.io/pause:3.9
                - image: registry.k8s.io/pause:3.8
            #CIDR Range for Pods in cluster
            # Note : This must not overlap with any of the host or service network
            podCIDR: "192.168.0.0/16"
            #CIDR notation IP range from which to assign service cluster IPs
            # Note : This must not overlap with any IP ranges assigned to nodes for pods.
            serviceClusterIpRange: "10.96.0.0/12"
            # serviceDomain: "cluster.local"

          kubeadmconfig:
            apiServer:
              extraArgs:
                # Note : secure-port flag is used during kubeadm init. Do not change this flag on a running cluster
                secure-port: "6443"
                anonymous-auth: "true"
                profiling: "false"
                disable-admission-plugins: "AlwaysAdmit"
                default-not-ready-toleration-seconds: "60"
                default-unreachable-toleration-seconds: "60"
                enable-admission-plugins: "AlwaysPullImages,NamespaceLifecycle,ServiceAccount,NodeRestriction,PodSecurity"
                admission-control-config-file: "/etc/kubernetes/pod-security-standard.yaml"
                audit-log-path: /var/log/apiserver/audit.log
                audit-policy-file: /etc/kubernetes/audit-policy.yaml
                audit-log-maxage: "30"
                audit-log-maxbackup: "10"
                audit-log-maxsize: "100"
                authorization-mode: RBAC,Node
                kubelet-certificate-authority: "/etc/kubernetes/pki/ca.crt"
                tls-cipher-suites: "TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_GCM_SHA256"
              extraVolumes:
                - name: audit-log
                  hostPath: /var/log/apiserver
                  mountPath: /var/log/apiserver
                  pathType: DirectoryOrCreate
                - name: audit-policy
                  hostPath: /etc/kubernetes/audit-policy.yaml
                  mountPath: /etc/kubernetes/audit-policy.yaml
                  readOnly: true
                  pathType: File
                - name: pod-security-standard
                  hostPath: /etc/kubernetes/pod-security-standard.yaml
                  mountPath: /etc/kubernetes/pod-security-standard.yaml
                  readOnly: true
                  pathType: File
            controllerManager:
              extraArgs:
                profiling: "false"
                terminated-pod-gc-threshold: "25"
                use-service-account-credentials: "true"
                feature-gates: "RotateKubeletServerCertificate=true"
            scheduler:
              extraArgs:
                profiling: "false"
            kubeletExtraArgs:
              read-only-port: "0"
              event-qps: "0"
              feature-gates: "RotateKubeletServerCertificate=true"
              protect-kernel-defaults: "true"
              rotate-server-certificates: "true"
              tls-cipher-suites: "TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_GCM_SHA256"
            files:
              - path: hardening/audit-policy.yaml
                targetPath: /etc/kubernetes/audit-policy.yaml
                targetOwner: "root:root"
                targetPermissions: "0600"
              - path: hardening/90-kubelet.conf
                targetPath: /etc/sysctl.d/90-kubelet.conf
                targetOwner: "root:root"
                targetPermissions: "0600"
              - targetPath: /etc/kubernetes/pod-security-standard.yaml
                targetOwner: "root:root"
                targetPermissions: "0600"
                content: |
                  apiVersion: apiserver.config.k8s.io/v1
                  kind: AdmissionConfiguration
                  plugins:
                  - name: PodSecurity
                    configuration:
                      apiVersion: pod-security.admission.config.k8s.io/v1
                      kind: PodSecurityConfiguration
                      defaults:
                        enforce: "baseline"
                        enforce-version: "v1.32"
                        audit: "baseline"
                        audit-version: "v1.32"
                        warn: "restricted"
                        warn-version: "v1.32"
                      exemptions:
                        # Array of authenticated usernames to exempt.
                        usernames: []
                        # Array of runtime class names to exempt.
                        runtimeClasses: []
                        # Array of namespaces to exempt.
                        namespaces: [kube-system]

            preKubeadmCommands:
              # For enabling 'protect-kernel-defaults' flag to kubelet, kernel parameters changes are required
              - 'echo "====> Applying kernel parameters for Kubelet"'
              - 'sysctl -p /etc/sysctl.d/90-kubelet.conf'
            
            postKubeadmCommands:
              - 'chmod 600 /var/lib/kubelet/config.yaml'
              # - 'echo "List of post kubeadm commands to be executed"'

          # Client configuration to add OIDC based authentication flags in kubeconfig
          #clientConfig:
            #oidc-client-secret: "<YOUR_OIDC_CLIENT_SECRET>"
            #oidc-extra-scope: profile,email

      - name: "cni-calico"
        type: oci
        tag: "3.29.3"
        uid: "<YOUR_CNI_PACK_UID>"
        registryUid: "<YOUR_REGISTRY_UID>"
        values: |
          pack:
            content:
              images:
                - image: us-docker.pkg.dev/palette-images/packs/calico/3.29.3/cni:v3.29.3
                - image: us-docker.pkg.dev/palette-images/packs/calico/3.29.3/node:v3.29.3
                - image: us-docker.pkg.dev/palette-images/packs/calico/3.29.3/kube-controllers:v3.29.3

          manifests:
            calico:
              microk8s: "false"
              images:
                cni: ""
                node: ""
                kubecontroller: ""
              # IPAM type to use. Supported types are calico-ipam, host-local
              ipamType: "calico-ipam"

              calico_ipam:
                assign_ipv4: true
                assign_ipv6: false

              # Should be one of CALICO_IPV4POOL_IPIP or CALICO_IPV4POOL_VXLAN  
              encapsulationType: "CALICO_IPV4POOL_IPIP"

              # Should be one of Always, CrossSubnet, Never
              encapsulationMode: "Always"

              env:
                # Additional env variables for calico-node
                calicoNode:
                  #IPV6: "autodetect"
                  #FELIX_IPV6SUPPORT: "true"
                  #CALICO_IPV6POOL_NAT_OUTGOING: "true"
                  #CALICO_IPV4POOL_CIDR: "192.168.0.0/16"
                  # For EKS cluster with static provisioning, set IP_AUTODETECTION_METHOD to "interface=eth0"
                  #IP_AUTODETECTION_METHOD: "first-found"

                # Additional env variables for calico-kube-controller deployment
                calicoKubeControllers:
                  #LOG_LEVEL: "info"
                  #SYNC_NODE_LABELS: "true"

      - name: "csi-vsphere-csi"
        type: oci
        tag: "3.3.1"
        uid: "<YOUR_PACK_UID>"
        registryUid: "<YOUR_REGISTRY_UID>"
        values: |
          pack:
            content:
              images:
                - image: gcr.io/spectro-images-public/packs/csi-vsphere-csi/3.3.1/cpi-manager:v1.29.0
                - image: gcr.io/spectro-images-public/packs/csi-vsphere-csi/3.3.1/cpi-manager:v1.28.0
                - image: gcr.io/spectro-images-public/packs/csi-vsphere-csi/3.3.1/cpi-manager:v1.27.0
                - image: gcr.io/spectro-images-public/packs/csi-vsphere-csi/3.3.1/cpi-manager:v1.30.0
                - image: gcr.io/spectro-images-public/packs/csi-vsphere-csi/3.3.1/csi-attacher:v4.5.1
                - image: gcr.io/spectro-images-public/packs/csi-vsphere-csi/3.3.1/csi-resizer:v1.10.1
                - image: gcr.io/spectro-images-public/packs/csi-vsphere-csi/3.3.1/csi-driver:v3.3.1
                - image: gcr.io/spectro-images-public/packs/csi-vsphere-csi/3.3.1/csi-syncer:v3.3.1
                - image: gcr.io/spectro-images-public/packs/csi-vsphere-csi/3.3.0/csi-provisioner:v4.0.1
                - image: gcr.io/spectro-images-public/packs/csi-vsphere-csi/3.3.0/csi-snapshotter:v7.0.2
                - image: gcr.io/spectro-images-public/packs/csi-vsphere-csi/3.3.0/csi-node-driver-registrar:v2.10.1
                - image: gcr.io/spectro-images-public/packs/csi-vsphere-csi/3.3.0/livenessprobe:v2.12.0
                - image: gcr.io/spectro-images-public/packs/csi-vsphere-csi/3.3.0/csi-node-driver-registrar:v2.10.0

          manifests:
            #Storage class config
            vsphere:

              #Toggle for Default class
              isDefaultClass: "true"

              #Specifies file system type
              fstype: "ext4"

              #Allowed reclaim policies are Delete, Retain
              reclaimPolicy: "Delete"

              #Specifies the URL of the datastore on which the container volume needs to be provisioned.
              datastoreURL: ""

              #Specifies the storage policy for datastores on which the container volume needs to be provisioned.
              storagePolicyName: ""

              volumeBindingMode: "WaitForFirstConsumer"

              #Set this flag to true to enable volume expansion
              allowVolumeExpansion: true

            vsphere-cloud-controller-manager:
              k8sVersion: "{{ .spectro.system.kubernetes.version }}"
              # Override CPI image
              image: ""
              extraArgs:
                - "--cloud-provider=vsphere"
                - "--v=2"
                - "--cloud-config=/etc/cloud/vsphere.conf"

            vsphere-csi-driver:
              replicas: 3
              livenessProbe:
                csiController:
                  initialDelaySeconds: 30
                  timeoutSeconds: 10
                  periodSeconds: 180
                  failureThreshold: 3
              # Override CSI component images
              csiAttacherImage: ""
              csiResizerImage: ""
              csiControllerImage: ""
              csiLivenessProbeImage: ""
              csiSyncerImage: ""
              csiProvisionerImage: ""
              csiSnapshotterImage: ""
              nodeDriverRegistrarImage: ""
              vsphereCsiNodeImage: ""
              extraArgs:
                csiAttacher:
                  - "--v=4"
                  - "--timeout=300s"
                  - "--csi-address=$(ADDRESS)"
                  - "--leader-election"
                  - "--leader-election-lease-duration=120s"
                  - "--leader-election-renew-deadline=60s"
                  - "--leader-election-retry-period=30s"
                  - "--kube-api-qps=100"
                  - "--kube-api-burst=100"
                  - "--worker-threads=100"
                csiResizer:
                  - "--v=4"
                  - "--timeout=300s"
                  - "--handle-volume-inuse-error=false"
                  - "--csi-address=$(ADDRESS)"
                  - "--kube-api-qps=100"
                  - "--kube-api-burst=100"
                  - "--leader-election"
                  - "--leader-election-lease-duration=120s"
                  - "--leader-election-renew-deadline=60s"
                  - "--leader-election-retry-period=30s"
                csiController:
                  - "--fss-name=internal-feature-states.csi.vsphere.vmware.com"
                  - "--fss-namespace=$(CSI_NAMESPACE)"
                csiLivenessProbe:
                  - "--v=4"
                  - "--csi-address=/csi/csi.sock"
                csiSyncer:
                  - "--leader-election"
                  - "--leader-election-lease-duration=30s"
                  - "--leader-election-renew-deadline=20s"
                  - "--leader-election-retry-period=10s"
                  - "--fss-name=internal-feature-states.csi.vsphere.vmware.com"
                  - "--fss-namespace=$(CSI_NAMESPACE)"
                csiProvisioner:
                  - "--v=4"
                  - "--timeout=300s"
                  - "--csi-address=$(ADDRESS)"
                  - "--kube-api-qps=100"
                  - "--kube-api-burst=100"
                  - "--leader-election"
                  - "--leader-election-lease-duration=120s"
                  - "--leader-election-renew-deadline=60s"
                  - "--leader-election-retry-period=30s"
                  - "--default-fstype=ext4"
                  # needed only for topology aware setup
                  - "--feature-gates=Topology=true"
                  - "--strict-topology"
                csiSnapshotter:
                  - "--v=4"
                  - "--kube-api-qps=100"
                  - "--kube-api-burst=100"
                  - "--timeout=300s"
                  - "--csi-address=$(ADDRESS)"
                  - "--leader-election"
                  - "--leader-election-lease-duration=120s"
                  - "--leader-election-renew-deadline=60s"
                  - "--leader-election-retry-period=30s"

    tags:
      - "env:vsphere"
      - "type:qa"
