// SPDX-FileCopyrightText: 2023 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type TencentInitParameters struct {

	// (String) The context of the Tencent account. Allowed values are project or tenant. Default value is project. If  the project context is specified, the project name will sourced from the provider configuration parameter project_name.
	// The context of the Tencent account. Allowed values are `project` or `tenant`. Default value is `project`. If  the `project` context is specified, the project name will sourced from the provider configuration parameter [`project_name`](https://registry.io/providers/spectrocloud/spectrocloud/latest/docs#schema).
	Context *string `json:"context,omitempty" tf:"context,omitempty"`

	// (String)
	TencentSecretID *string `json:"tencentSecretId,omitempty" tf:"tencent_secret_id,omitempty"`
}

type TencentObservation struct {

	// (String) The context of the Tencent account. Allowed values are project or tenant. Default value is project. If  the project context is specified, the project name will sourced from the provider configuration parameter project_name.
	// The context of the Tencent account. Allowed values are `project` or `tenant`. Default value is `project`. If  the `project` context is specified, the project name will sourced from the provider configuration parameter [`project_name`](https://registry.io/providers/spectrocloud/spectrocloud/latest/docs#schema).
	Context *string `json:"context,omitempty" tf:"context,omitempty"`

	// (String) The ID of this resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (String)
	TencentSecretID *string `json:"tencentSecretId,omitempty" tf:"tencent_secret_id,omitempty"`
}

type TencentParameters struct {

	// (String) The context of the Tencent account. Allowed values are project or tenant. Default value is project. If  the project context is specified, the project name will sourced from the provider configuration parameter project_name.
	// The context of the Tencent account. Allowed values are `project` or `tenant`. Default value is `project`. If  the `project` context is specified, the project name will sourced from the provider configuration parameter [`project_name`](https://registry.io/providers/spectrocloud/spectrocloud/latest/docs#schema).
	// +kubebuilder:validation:Optional
	Context *string `json:"context,omitempty" tf:"context,omitempty"`

	// (String)
	// +kubebuilder:validation:Optional
	TencentSecretID *string `json:"tencentSecretId,omitempty" tf:"tencent_secret_id,omitempty"`

	// (String, Sensitive)
	// +kubebuilder:validation:Optional
	TencentSecretKeySecretRef *v1.SecretKeySelector `json:"tencentSecretKeySecretRef,omitempty" tf:"-"`
}

// TencentSpec defines the desired state of Tencent
type TencentSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     TencentParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider TencentInitParameters `json:"initProvider,omitempty"`
}

// TencentStatus defines the observed state of Tencent.
type TencentStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        TencentObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// Tencent is the Schema for the Tencents API.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,palette}
type Tencent struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              TencentSpec   `json:"spec"`
	Status            TencentStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// TencentList contains a list of Tencents
type TencentList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Tencent `json:"items"`
}

// Repository type metadata.
var (
	Tencent_Kind             = "Tencent"
	Tencent_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: Tencent_Kind}.String()
	Tencent_KindAPIVersion   = Tencent_Kind + "." + CRDGroupVersion.String()
	Tencent_GroupVersionKind = CRDGroupVersion.WithKind(Tencent_Kind)
)

func init() {
	SchemeBuilder.Register(&Tencent{}, &TencentList{})
}
