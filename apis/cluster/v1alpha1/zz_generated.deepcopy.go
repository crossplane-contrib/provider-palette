//go:build !ignore_autogenerated

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Aks) DeepCopyInto(out *Aks) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Aks.
func (in *Aks) DeepCopy() *Aks {
	if in == nil {
		return nil
	}
	out := new(Aks)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Aks) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AksInitParameters) DeepCopyInto(out *AksInitParameters) {
	*out = *in
	if in.ApplySetting != nil {
		in, out := &in.ApplySetting, &out.ApplySetting
		*out = new(string)
		**out = **in
	}
	if in.BackupPolicy != nil {
		in, out := &in.BackupPolicy, &out.BackupPolicy
		*out = make([]BackupPolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CloudAccountID != nil {
		in, out := &in.CloudAccountID, &out.CloudAccountID
		*out = new(string)
		**out = **in
	}
	if in.CloudConfig != nil {
		in, out := &in.CloudConfig, &out.CloudConfig
		*out = make([]CloudConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterMetaAttribute != nil {
		in, out := &in.ClusterMetaAttribute, &out.ClusterMetaAttribute
		*out = new(string)
		**out = **in
	}
	if in.ClusterProfile != nil {
		in, out := &in.ClusterProfile, &out.ClusterProfile
		*out = make([]ClusterProfileInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterRbacBinding != nil {
		in, out := &in.ClusterRbacBinding, &out.ClusterRbacBinding
		*out = make([]ClusterRbacBindingInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Context != nil {
		in, out := &in.Context, &out.Context
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ForceDelete != nil {
		in, out := &in.ForceDelete, &out.ForceDelete
		*out = new(bool)
		**out = **in
	}
	if in.ForceDeleteDelay != nil {
		in, out := &in.ForceDeleteDelay, &out.ForceDeleteDelay
		*out = new(float64)
		**out = **in
	}
	if in.HostConfig != nil {
		in, out := &in.HostConfig, &out.HostConfig
		*out = make([]HostConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MachinePool != nil {
		in, out := &in.MachinePool, &out.MachinePool
		*out = make([]MachinePoolInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]NamespacesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OsPatchAfter != nil {
		in, out := &in.OsPatchAfter, &out.OsPatchAfter
		*out = new(string)
		**out = **in
	}
	if in.OsPatchOnBoot != nil {
		in, out := &in.OsPatchOnBoot, &out.OsPatchOnBoot
		*out = new(bool)
		**out = **in
	}
	if in.OsPatchSchedule != nil {
		in, out := &in.OsPatchSchedule, &out.OsPatchSchedule
		*out = new(string)
		**out = **in
	}
	if in.PauseAgentUpgrades != nil {
		in, out := &in.PauseAgentUpgrades, &out.PauseAgentUpgrades
		*out = new(string)
		**out = **in
	}
	if in.ReviewRepaveState != nil {
		in, out := &in.ReviewRepaveState, &out.ReviewRepaveState
		*out = new(string)
		**out = **in
	}
	if in.ScanPolicy != nil {
		in, out := &in.ScanPolicy, &out.ScanPolicy
		*out = make([]ScanPolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SkipCompletion != nil {
		in, out := &in.SkipCompletion, &out.SkipCompletion
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AksInitParameters.
func (in *AksInitParameters) DeepCopy() *AksInitParameters {
	if in == nil {
		return nil
	}
	out := new(AksInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AksList) DeepCopyInto(out *AksList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Aks, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AksList.
func (in *AksList) DeepCopy() *AksList {
	if in == nil {
		return nil
	}
	out := new(AksList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AksList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AksObservation) DeepCopyInto(out *AksObservation) {
	*out = *in
	if in.AdminKubeConfig != nil {
		in, out := &in.AdminKubeConfig, &out.AdminKubeConfig
		*out = new(string)
		**out = **in
	}
	if in.ApplySetting != nil {
		in, out := &in.ApplySetting, &out.ApplySetting
		*out = new(string)
		**out = **in
	}
	if in.BackupPolicy != nil {
		in, out := &in.BackupPolicy, &out.BackupPolicy
		*out = make([]BackupPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CloudAccountID != nil {
		in, out := &in.CloudAccountID, &out.CloudAccountID
		*out = new(string)
		**out = **in
	}
	if in.CloudConfig != nil {
		in, out := &in.CloudConfig, &out.CloudConfig
		*out = make([]CloudConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CloudConfigID != nil {
		in, out := &in.CloudConfigID, &out.CloudConfigID
		*out = new(string)
		**out = **in
	}
	if in.ClusterMetaAttribute != nil {
		in, out := &in.ClusterMetaAttribute, &out.ClusterMetaAttribute
		*out = new(string)
		**out = **in
	}
	if in.ClusterProfile != nil {
		in, out := &in.ClusterProfile, &out.ClusterProfile
		*out = make([]ClusterProfileObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterRbacBinding != nil {
		in, out := &in.ClusterRbacBinding, &out.ClusterRbacBinding
		*out = make([]ClusterRbacBindingObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Context != nil {
		in, out := &in.Context, &out.Context
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ForceDelete != nil {
		in, out := &in.ForceDelete, &out.ForceDelete
		*out = new(bool)
		**out = **in
	}
	if in.ForceDeleteDelay != nil {
		in, out := &in.ForceDeleteDelay, &out.ForceDeleteDelay
		*out = new(float64)
		**out = **in
	}
	if in.HostConfig != nil {
		in, out := &in.HostConfig, &out.HostConfig
		*out = make([]HostConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Kubeconfig != nil {
		in, out := &in.Kubeconfig, &out.Kubeconfig
		*out = new(string)
		**out = **in
	}
	if in.LocationConfig != nil {
		in, out := &in.LocationConfig, &out.LocationConfig
		*out = make([]LocationConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MachinePool != nil {
		in, out := &in.MachinePool, &out.MachinePool
		*out = make([]MachinePoolObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]NamespacesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OsPatchAfter != nil {
		in, out := &in.OsPatchAfter, &out.OsPatchAfter
		*out = new(string)
		**out = **in
	}
	if in.OsPatchOnBoot != nil {
		in, out := &in.OsPatchOnBoot, &out.OsPatchOnBoot
		*out = new(bool)
		**out = **in
	}
	if in.OsPatchSchedule != nil {
		in, out := &in.OsPatchSchedule, &out.OsPatchSchedule
		*out = new(string)
		**out = **in
	}
	if in.PauseAgentUpgrades != nil {
		in, out := &in.PauseAgentUpgrades, &out.PauseAgentUpgrades
		*out = new(string)
		**out = **in
	}
	if in.ReviewRepaveState != nil {
		in, out := &in.ReviewRepaveState, &out.ReviewRepaveState
		*out = new(string)
		**out = **in
	}
	if in.ScanPolicy != nil {
		in, out := &in.ScanPolicy, &out.ScanPolicy
		*out = make([]ScanPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SkipCompletion != nil {
		in, out := &in.SkipCompletion, &out.SkipCompletion
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AksObservation.
func (in *AksObservation) DeepCopy() *AksObservation {
	if in == nil {
		return nil
	}
	out := new(AksObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AksParameters) DeepCopyInto(out *AksParameters) {
	*out = *in
	if in.ApplySetting != nil {
		in, out := &in.ApplySetting, &out.ApplySetting
		*out = new(string)
		**out = **in
	}
	if in.BackupPolicy != nil {
		in, out := &in.BackupPolicy, &out.BackupPolicy
		*out = make([]BackupPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CloudAccountID != nil {
		in, out := &in.CloudAccountID, &out.CloudAccountID
		*out = new(string)
		**out = **in
	}
	if in.CloudConfig != nil {
		in, out := &in.CloudConfig, &out.CloudConfig
		*out = make([]CloudConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterMetaAttribute != nil {
		in, out := &in.ClusterMetaAttribute, &out.ClusterMetaAttribute
		*out = new(string)
		**out = **in
	}
	if in.ClusterProfile != nil {
		in, out := &in.ClusterProfile, &out.ClusterProfile
		*out = make([]ClusterProfileParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterRbacBinding != nil {
		in, out := &in.ClusterRbacBinding, &out.ClusterRbacBinding
		*out = make([]ClusterRbacBindingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Context != nil {
		in, out := &in.Context, &out.Context
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ForceDelete != nil {
		in, out := &in.ForceDelete, &out.ForceDelete
		*out = new(bool)
		**out = **in
	}
	if in.ForceDeleteDelay != nil {
		in, out := &in.ForceDeleteDelay, &out.ForceDeleteDelay
		*out = new(float64)
		**out = **in
	}
	if in.HostConfig != nil {
		in, out := &in.HostConfig, &out.HostConfig
		*out = make([]HostConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MachinePool != nil {
		in, out := &in.MachinePool, &out.MachinePool
		*out = make([]MachinePoolParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]NamespacesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OsPatchAfter != nil {
		in, out := &in.OsPatchAfter, &out.OsPatchAfter
		*out = new(string)
		**out = **in
	}
	if in.OsPatchOnBoot != nil {
		in, out := &in.OsPatchOnBoot, &out.OsPatchOnBoot
		*out = new(bool)
		**out = **in
	}
	if in.OsPatchSchedule != nil {
		in, out := &in.OsPatchSchedule, &out.OsPatchSchedule
		*out = new(string)
		**out = **in
	}
	if in.PauseAgentUpgrades != nil {
		in, out := &in.PauseAgentUpgrades, &out.PauseAgentUpgrades
		*out = new(string)
		**out = **in
	}
	if in.ReviewRepaveState != nil {
		in, out := &in.ReviewRepaveState, &out.ReviewRepaveState
		*out = new(string)
		**out = **in
	}
	if in.ScanPolicy != nil {
		in, out := &in.ScanPolicy, &out.ScanPolicy
		*out = make([]ScanPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SkipCompletion != nil {
		in, out := &in.SkipCompletion, &out.SkipCompletion
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AksParameters.
func (in *AksParameters) DeepCopy() *AksParameters {
	if in == nil {
		return nil
	}
	out := new(AksParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AksSpec) DeepCopyInto(out *AksSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AksSpec.
func (in *AksSpec) DeepCopy() *AksSpec {
	if in == nil {
		return nil
	}
	out := new(AksSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AksStatus) DeepCopyInto(out *AksStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AksStatus.
func (in *AksStatus) DeepCopy() *AksStatus {
	if in == nil {
		return nil
	}
	out := new(AksStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AttachedDisksInitParameters) DeepCopyInto(out *AttachedDisksInitParameters) {
	*out = *in
	if in.Managed != nil {
		in, out := &in.Managed, &out.Managed
		*out = new(bool)
		**out = **in
	}
	if in.SizeInGb != nil {
		in, out := &in.SizeInGb, &out.SizeInGb
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AttachedDisksInitParameters.
func (in *AttachedDisksInitParameters) DeepCopy() *AttachedDisksInitParameters {
	if in == nil {
		return nil
	}
	out := new(AttachedDisksInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AttachedDisksObservation) DeepCopyInto(out *AttachedDisksObservation) {
	*out = *in
	if in.Managed != nil {
		in, out := &in.Managed, &out.Managed
		*out = new(bool)
		**out = **in
	}
	if in.SizeInGb != nil {
		in, out := &in.SizeInGb, &out.SizeInGb
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AttachedDisksObservation.
func (in *AttachedDisksObservation) DeepCopy() *AttachedDisksObservation {
	if in == nil {
		return nil
	}
	out := new(AttachedDisksObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AttachedDisksParameters) DeepCopyInto(out *AttachedDisksParameters) {
	*out = *in
	if in.Managed != nil {
		in, out := &in.Managed, &out.Managed
		*out = new(bool)
		**out = **in
	}
	if in.SizeInGb != nil {
		in, out := &in.SizeInGb, &out.SizeInGb
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AttachedDisksParameters.
func (in *AttachedDisksParameters) DeepCopy() *AttachedDisksParameters {
	if in == nil {
		return nil
	}
	out := new(AttachedDisksParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Aws) DeepCopyInto(out *Aws) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Aws.
func (in *Aws) DeepCopy() *Aws {
	if in == nil {
		return nil
	}
	out := new(Aws)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Aws) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AwsBackupPolicyInitParameters) DeepCopyInto(out *AwsBackupPolicyInitParameters) {
	*out = *in
	if in.BackupLocationID != nil {
		in, out := &in.BackupLocationID, &out.BackupLocationID
		*out = new(string)
		**out = **in
	}
	if in.ClusterUids != nil {
		in, out := &in.ClusterUids, &out.ClusterUids
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExpiryInHour != nil {
		in, out := &in.ExpiryInHour, &out.ExpiryInHour
		*out = new(float64)
		**out = **in
	}
	if in.IncludeAllClusters != nil {
		in, out := &in.IncludeAllClusters, &out.IncludeAllClusters
		*out = new(bool)
		**out = **in
	}
	if in.IncludeClusterResources != nil {
		in, out := &in.IncludeClusterResources, &out.IncludeClusterResources
		*out = new(bool)
		**out = **in
	}
	if in.IncludeDisks != nil {
		in, out := &in.IncludeDisks, &out.IncludeDisks
		*out = new(bool)
		**out = **in
	}
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AwsBackupPolicyInitParameters.
func (in *AwsBackupPolicyInitParameters) DeepCopy() *AwsBackupPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(AwsBackupPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AwsBackupPolicyObservation) DeepCopyInto(out *AwsBackupPolicyObservation) {
	*out = *in
	if in.BackupLocationID != nil {
		in, out := &in.BackupLocationID, &out.BackupLocationID
		*out = new(string)
		**out = **in
	}
	if in.ClusterUids != nil {
		in, out := &in.ClusterUids, &out.ClusterUids
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExpiryInHour != nil {
		in, out := &in.ExpiryInHour, &out.ExpiryInHour
		*out = new(float64)
		**out = **in
	}
	if in.IncludeAllClusters != nil {
		in, out := &in.IncludeAllClusters, &out.IncludeAllClusters
		*out = new(bool)
		**out = **in
	}
	if in.IncludeClusterResources != nil {
		in, out := &in.IncludeClusterResources, &out.IncludeClusterResources
		*out = new(bool)
		**out = **in
	}
	if in.IncludeDisks != nil {
		in, out := &in.IncludeDisks, &out.IncludeDisks
		*out = new(bool)
		**out = **in
	}
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AwsBackupPolicyObservation.
func (in *AwsBackupPolicyObservation) DeepCopy() *AwsBackupPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(AwsBackupPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AwsBackupPolicyParameters) DeepCopyInto(out *AwsBackupPolicyParameters) {
	*out = *in
	if in.BackupLocationID != nil {
		in, out := &in.BackupLocationID, &out.BackupLocationID
		*out = new(string)
		**out = **in
	}
	if in.ClusterUids != nil {
		in, out := &in.ClusterUids, &out.ClusterUids
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExpiryInHour != nil {
		in, out := &in.ExpiryInHour, &out.ExpiryInHour
		*out = new(float64)
		**out = **in
	}
	if in.IncludeAllClusters != nil {
		in, out := &in.IncludeAllClusters, &out.IncludeAllClusters
		*out = new(bool)
		**out = **in
	}
	if in.IncludeClusterResources != nil {
		in, out := &in.IncludeClusterResources, &out.IncludeClusterResources
		*out = new(bool)
		**out = **in
	}
	if in.IncludeDisks != nil {
		in, out := &in.IncludeDisks, &out.IncludeDisks
		*out = new(bool)
		**out = **in
	}
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AwsBackupPolicyParameters.
func (in *AwsBackupPolicyParameters) DeepCopy() *AwsBackupPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(AwsBackupPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AwsCloudConfigInitParameters) DeepCopyInto(out *AwsCloudConfigInitParameters) {
	*out = *in
	if in.ControlPlaneLB != nil {
		in, out := &in.ControlPlaneLB, &out.ControlPlaneLB
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SSHKeyName != nil {
		in, out := &in.SSHKeyName, &out.SSHKeyName
		*out = new(string)
		**out = **in
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AwsCloudConfigInitParameters.
func (in *AwsCloudConfigInitParameters) DeepCopy() *AwsCloudConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(AwsCloudConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AwsCloudConfigObservation) DeepCopyInto(out *AwsCloudConfigObservation) {
	*out = *in
	if in.ControlPlaneLB != nil {
		in, out := &in.ControlPlaneLB, &out.ControlPlaneLB
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SSHKeyName != nil {
		in, out := &in.SSHKeyName, &out.SSHKeyName
		*out = new(string)
		**out = **in
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AwsCloudConfigObservation.
func (in *AwsCloudConfigObservation) DeepCopy() *AwsCloudConfigObservation {
	if in == nil {
		return nil
	}
	out := new(AwsCloudConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AwsCloudConfigParameters) DeepCopyInto(out *AwsCloudConfigParameters) {
	*out = *in
	if in.ControlPlaneLB != nil {
		in, out := &in.ControlPlaneLB, &out.ControlPlaneLB
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SSHKeyName != nil {
		in, out := &in.SSHKeyName, &out.SSHKeyName
		*out = new(string)
		**out = **in
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AwsCloudConfigParameters.
func (in *AwsCloudConfigParameters) DeepCopy() *AwsCloudConfigParameters {
	if in == nil {
		return nil
	}
	out := new(AwsCloudConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AwsClusterProfileInitParameters) DeepCopyInto(out *AwsClusterProfileInitParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Pack != nil {
		in, out := &in.Pack, &out.Pack
		*out = make([]ClusterProfilePackInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AwsClusterProfileInitParameters.
func (in *AwsClusterProfileInitParameters) DeepCopy() *AwsClusterProfileInitParameters {
	if in == nil {
		return nil
	}
	out := new(AwsClusterProfileInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AwsClusterProfileObservation) DeepCopyInto(out *AwsClusterProfileObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Pack != nil {
		in, out := &in.Pack, &out.Pack
		*out = make([]ClusterProfilePackObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AwsClusterProfileObservation.
func (in *AwsClusterProfileObservation) DeepCopy() *AwsClusterProfileObservation {
	if in == nil {
		return nil
	}
	out := new(AwsClusterProfileObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AwsClusterProfileParameters) DeepCopyInto(out *AwsClusterProfileParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Pack != nil {
		in, out := &in.Pack, &out.Pack
		*out = make([]ClusterProfilePackParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AwsClusterProfileParameters.
func (in *AwsClusterProfileParameters) DeepCopy() *AwsClusterProfileParameters {
	if in == nil {
		return nil
	}
	out := new(AwsClusterProfileParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AwsClusterRbacBindingInitParameters) DeepCopyInto(out *AwsClusterRbacBindingInitParameters) {
	*out = *in
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Subjects != nil {
		in, out := &in.Subjects, &out.Subjects
		*out = make([]ClusterRbacBindingSubjectsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AwsClusterRbacBindingInitParameters.
func (in *AwsClusterRbacBindingInitParameters) DeepCopy() *AwsClusterRbacBindingInitParameters {
	if in == nil {
		return nil
	}
	out := new(AwsClusterRbacBindingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AwsClusterRbacBindingObservation) DeepCopyInto(out *AwsClusterRbacBindingObservation) {
	*out = *in
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Subjects != nil {
		in, out := &in.Subjects, &out.Subjects
		*out = make([]ClusterRbacBindingSubjectsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AwsClusterRbacBindingObservation.
func (in *AwsClusterRbacBindingObservation) DeepCopy() *AwsClusterRbacBindingObservation {
	if in == nil {
		return nil
	}
	out := new(AwsClusterRbacBindingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AwsClusterRbacBindingParameters) DeepCopyInto(out *AwsClusterRbacBindingParameters) {
	*out = *in
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Subjects != nil {
		in, out := &in.Subjects, &out.Subjects
		*out = make([]ClusterRbacBindingSubjectsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AwsClusterRbacBindingParameters.
func (in *AwsClusterRbacBindingParameters) DeepCopy() *AwsClusterRbacBindingParameters {
	if in == nil {
		return nil
	}
	out := new(AwsClusterRbacBindingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AwsHostConfigInitParameters) DeepCopyInto(out *AwsHostConfigInitParameters) {
	*out = *in
	if in.ExternalTrafficPolicy != nil {
		in, out := &in.ExternalTrafficPolicy, &out.ExternalTrafficPolicy
		*out = new(string)
		**out = **in
	}
	if in.HostEndpointType != nil {
		in, out := &in.HostEndpointType, &out.HostEndpointType
		*out = new(string)
		**out = **in
	}
	if in.IngressHost != nil {
		in, out := &in.IngressHost, &out.IngressHost
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancerSourceRanges != nil {
		in, out := &in.LoadBalancerSourceRanges, &out.LoadBalancerSourceRanges
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AwsHostConfigInitParameters.
func (in *AwsHostConfigInitParameters) DeepCopy() *AwsHostConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(AwsHostConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AwsHostConfigObservation) DeepCopyInto(out *AwsHostConfigObservation) {
	*out = *in
	if in.ExternalTrafficPolicy != nil {
		in, out := &in.ExternalTrafficPolicy, &out.ExternalTrafficPolicy
		*out = new(string)
		**out = **in
	}
	if in.HostEndpointType != nil {
		in, out := &in.HostEndpointType, &out.HostEndpointType
		*out = new(string)
		**out = **in
	}
	if in.IngressHost != nil {
		in, out := &in.IngressHost, &out.IngressHost
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancerSourceRanges != nil {
		in, out := &in.LoadBalancerSourceRanges, &out.LoadBalancerSourceRanges
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AwsHostConfigObservation.
func (in *AwsHostConfigObservation) DeepCopy() *AwsHostConfigObservation {
	if in == nil {
		return nil
	}
	out := new(AwsHostConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AwsHostConfigParameters) DeepCopyInto(out *AwsHostConfigParameters) {
	*out = *in
	if in.ExternalTrafficPolicy != nil {
		in, out := &in.ExternalTrafficPolicy, &out.ExternalTrafficPolicy
		*out = new(string)
		**out = **in
	}
	if in.HostEndpointType != nil {
		in, out := &in.HostEndpointType, &out.HostEndpointType
		*out = new(string)
		**out = **in
	}
	if in.IngressHost != nil {
		in, out := &in.IngressHost, &out.IngressHost
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancerSourceRanges != nil {
		in, out := &in.LoadBalancerSourceRanges, &out.LoadBalancerSourceRanges
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AwsHostConfigParameters.
func (in *AwsHostConfigParameters) DeepCopy() *AwsHostConfigParameters {
	if in == nil {
		return nil
	}
	out := new(AwsHostConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AwsInitParameters) DeepCopyInto(out *AwsInitParameters) {
	*out = *in
	if in.ApplySetting != nil {
		in, out := &in.ApplySetting, &out.ApplySetting
		*out = new(string)
		**out = **in
	}
	if in.BackupPolicy != nil {
		in, out := &in.BackupPolicy, &out.BackupPolicy
		*out = make([]AwsBackupPolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CloudAccountID != nil {
		in, out := &in.CloudAccountID, &out.CloudAccountID
		*out = new(string)
		**out = **in
	}
	if in.CloudConfig != nil {
		in, out := &in.CloudConfig, &out.CloudConfig
		*out = make([]AwsCloudConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterMetaAttribute != nil {
		in, out := &in.ClusterMetaAttribute, &out.ClusterMetaAttribute
		*out = new(string)
		**out = **in
	}
	if in.ClusterProfile != nil {
		in, out := &in.ClusterProfile, &out.ClusterProfile
		*out = make([]AwsClusterProfileInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterRbacBinding != nil {
		in, out := &in.ClusterRbacBinding, &out.ClusterRbacBinding
		*out = make([]AwsClusterRbacBindingInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Context != nil {
		in, out := &in.Context, &out.Context
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ForceDelete != nil {
		in, out := &in.ForceDelete, &out.ForceDelete
		*out = new(bool)
		**out = **in
	}
	if in.ForceDeleteDelay != nil {
		in, out := &in.ForceDeleteDelay, &out.ForceDeleteDelay
		*out = new(float64)
		**out = **in
	}
	if in.HostConfig != nil {
		in, out := &in.HostConfig, &out.HostConfig
		*out = make([]AwsHostConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MachinePool != nil {
		in, out := &in.MachinePool, &out.MachinePool
		*out = make([]AwsMachinePoolInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]AwsNamespacesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OsPatchAfter != nil {
		in, out := &in.OsPatchAfter, &out.OsPatchAfter
		*out = new(string)
		**out = **in
	}
	if in.OsPatchOnBoot != nil {
		in, out := &in.OsPatchOnBoot, &out.OsPatchOnBoot
		*out = new(bool)
		**out = **in
	}
	if in.OsPatchSchedule != nil {
		in, out := &in.OsPatchSchedule, &out.OsPatchSchedule
		*out = new(string)
		**out = **in
	}
	if in.PauseAgentUpgrades != nil {
		in, out := &in.PauseAgentUpgrades, &out.PauseAgentUpgrades
		*out = new(string)
		**out = **in
	}
	if in.ReviewRepaveState != nil {
		in, out := &in.ReviewRepaveState, &out.ReviewRepaveState
		*out = new(string)
		**out = **in
	}
	if in.ScanPolicy != nil {
		in, out := &in.ScanPolicy, &out.ScanPolicy
		*out = make([]AwsScanPolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SkipCompletion != nil {
		in, out := &in.SkipCompletion, &out.SkipCompletion
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AwsInitParameters.
func (in *AwsInitParameters) DeepCopy() *AwsInitParameters {
	if in == nil {
		return nil
	}
	out := new(AwsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AwsList) DeepCopyInto(out *AwsList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Aws, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AwsList.
func (in *AwsList) DeepCopy() *AwsList {
	if in == nil {
		return nil
	}
	out := new(AwsList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AwsList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AwsLocationConfigInitParameters) DeepCopyInto(out *AwsLocationConfigInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AwsLocationConfigInitParameters.
func (in *AwsLocationConfigInitParameters) DeepCopy() *AwsLocationConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(AwsLocationConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AwsLocationConfigObservation) DeepCopyInto(out *AwsLocationConfigObservation) {
	*out = *in
	if in.CountryCode != nil {
		in, out := &in.CountryCode, &out.CountryCode
		*out = new(string)
		**out = **in
	}
	if in.CountryName != nil {
		in, out := &in.CountryName, &out.CountryName
		*out = new(string)
		**out = **in
	}
	if in.Latitude != nil {
		in, out := &in.Latitude, &out.Latitude
		*out = new(float64)
		**out = **in
	}
	if in.Longitude != nil {
		in, out := &in.Longitude, &out.Longitude
		*out = new(float64)
		**out = **in
	}
	if in.RegionCode != nil {
		in, out := &in.RegionCode, &out.RegionCode
		*out = new(string)
		**out = **in
	}
	if in.RegionName != nil {
		in, out := &in.RegionName, &out.RegionName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AwsLocationConfigObservation.
func (in *AwsLocationConfigObservation) DeepCopy() *AwsLocationConfigObservation {
	if in == nil {
		return nil
	}
	out := new(AwsLocationConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AwsLocationConfigParameters) DeepCopyInto(out *AwsLocationConfigParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AwsLocationConfigParameters.
func (in *AwsLocationConfigParameters) DeepCopy() *AwsLocationConfigParameters {
	if in == nil {
		return nil
	}
	out := new(AwsLocationConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AwsMachinePoolInitParameters) DeepCopyInto(out *AwsMachinePoolInitParameters) {
	*out = *in
	if in.AdditionalLabels != nil {
		in, out := &in.AdditionalLabels, &out.AdditionalLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.AdditionalSecurityGroups != nil {
		in, out := &in.AdditionalSecurityGroups, &out.AdditionalSecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AzSubnets != nil {
		in, out := &in.AzSubnets, &out.AzSubnets
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Azs != nil {
		in, out := &in.Azs, &out.Azs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CapacityType != nil {
		in, out := &in.CapacityType, &out.CapacityType
		*out = new(string)
		**out = **in
	}
	if in.ControlPlane != nil {
		in, out := &in.ControlPlane, &out.ControlPlane
		*out = new(bool)
		**out = **in
	}
	if in.ControlPlaneAsWorker != nil {
		in, out := &in.ControlPlaneAsWorker, &out.ControlPlaneAsWorker
		*out = new(bool)
		**out = **in
	}
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.DiskSizeGb != nil {
		in, out := &in.DiskSizeGb, &out.DiskSizeGb
		*out = new(float64)
		**out = **in
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.MaxPrice != nil {
		in, out := &in.MaxPrice, &out.MaxPrice
		*out = new(string)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Node != nil {
		in, out := &in.Node, &out.Node
		*out = make([]MachinePoolNodeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NodeRepaveInterval != nil {
		in, out := &in.NodeRepaveInterval, &out.NodeRepaveInterval
		*out = new(float64)
		**out = **in
	}
	if in.Taints != nil {
		in, out := &in.Taints, &out.Taints
		*out = make([]MachinePoolTaintsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UpdateStrategy != nil {
		in, out := &in.UpdateStrategy, &out.UpdateStrategy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AwsMachinePoolInitParameters.
func (in *AwsMachinePoolInitParameters) DeepCopy() *AwsMachinePoolInitParameters {
	if in == nil {
		return nil
	}
	out := new(AwsMachinePoolInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AwsMachinePoolObservation) DeepCopyInto(out *AwsMachinePoolObservation) {
	*out = *in
	if in.AdditionalLabels != nil {
		in, out := &in.AdditionalLabels, &out.AdditionalLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.AdditionalSecurityGroups != nil {
		in, out := &in.AdditionalSecurityGroups, &out.AdditionalSecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AzSubnets != nil {
		in, out := &in.AzSubnets, &out.AzSubnets
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Azs != nil {
		in, out := &in.Azs, &out.Azs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CapacityType != nil {
		in, out := &in.CapacityType, &out.CapacityType
		*out = new(string)
		**out = **in
	}
	if in.ControlPlane != nil {
		in, out := &in.ControlPlane, &out.ControlPlane
		*out = new(bool)
		**out = **in
	}
	if in.ControlPlaneAsWorker != nil {
		in, out := &in.ControlPlaneAsWorker, &out.ControlPlaneAsWorker
		*out = new(bool)
		**out = **in
	}
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.DiskSizeGb != nil {
		in, out := &in.DiskSizeGb, &out.DiskSizeGb
		*out = new(float64)
		**out = **in
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.MaxPrice != nil {
		in, out := &in.MaxPrice, &out.MaxPrice
		*out = new(string)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Node != nil {
		in, out := &in.Node, &out.Node
		*out = make([]MachinePoolNodeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NodeRepaveInterval != nil {
		in, out := &in.NodeRepaveInterval, &out.NodeRepaveInterval
		*out = new(float64)
		**out = **in
	}
	if in.Taints != nil {
		in, out := &in.Taints, &out.Taints
		*out = make([]MachinePoolTaintsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UpdateStrategy != nil {
		in, out := &in.UpdateStrategy, &out.UpdateStrategy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AwsMachinePoolObservation.
func (in *AwsMachinePoolObservation) DeepCopy() *AwsMachinePoolObservation {
	if in == nil {
		return nil
	}
	out := new(AwsMachinePoolObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AwsMachinePoolParameters) DeepCopyInto(out *AwsMachinePoolParameters) {
	*out = *in
	if in.AdditionalLabels != nil {
		in, out := &in.AdditionalLabels, &out.AdditionalLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.AdditionalSecurityGroups != nil {
		in, out := &in.AdditionalSecurityGroups, &out.AdditionalSecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AzSubnets != nil {
		in, out := &in.AzSubnets, &out.AzSubnets
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Azs != nil {
		in, out := &in.Azs, &out.Azs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CapacityType != nil {
		in, out := &in.CapacityType, &out.CapacityType
		*out = new(string)
		**out = **in
	}
	if in.ControlPlane != nil {
		in, out := &in.ControlPlane, &out.ControlPlane
		*out = new(bool)
		**out = **in
	}
	if in.ControlPlaneAsWorker != nil {
		in, out := &in.ControlPlaneAsWorker, &out.ControlPlaneAsWorker
		*out = new(bool)
		**out = **in
	}
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.DiskSizeGb != nil {
		in, out := &in.DiskSizeGb, &out.DiskSizeGb
		*out = new(float64)
		**out = **in
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.MaxPrice != nil {
		in, out := &in.MaxPrice, &out.MaxPrice
		*out = new(string)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Node != nil {
		in, out := &in.Node, &out.Node
		*out = make([]MachinePoolNodeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NodeRepaveInterval != nil {
		in, out := &in.NodeRepaveInterval, &out.NodeRepaveInterval
		*out = new(float64)
		**out = **in
	}
	if in.Taints != nil {
		in, out := &in.Taints, &out.Taints
		*out = make([]MachinePoolTaintsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UpdateStrategy != nil {
		in, out := &in.UpdateStrategy, &out.UpdateStrategy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AwsMachinePoolParameters.
func (in *AwsMachinePoolParameters) DeepCopy() *AwsMachinePoolParameters {
	if in == nil {
		return nil
	}
	out := new(AwsMachinePoolParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AwsNamespacesInitParameters) DeepCopyInto(out *AwsNamespacesInitParameters) {
	*out = *in
	if in.ImagesBlacklist != nil {
		in, out := &in.ImagesBlacklist, &out.ImagesBlacklist
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ResourceAllocation != nil {
		in, out := &in.ResourceAllocation, &out.ResourceAllocation
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AwsNamespacesInitParameters.
func (in *AwsNamespacesInitParameters) DeepCopy() *AwsNamespacesInitParameters {
	if in == nil {
		return nil
	}
	out := new(AwsNamespacesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AwsNamespacesObservation) DeepCopyInto(out *AwsNamespacesObservation) {
	*out = *in
	if in.ImagesBlacklist != nil {
		in, out := &in.ImagesBlacklist, &out.ImagesBlacklist
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ResourceAllocation != nil {
		in, out := &in.ResourceAllocation, &out.ResourceAllocation
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AwsNamespacesObservation.
func (in *AwsNamespacesObservation) DeepCopy() *AwsNamespacesObservation {
	if in == nil {
		return nil
	}
	out := new(AwsNamespacesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AwsNamespacesParameters) DeepCopyInto(out *AwsNamespacesParameters) {
	*out = *in
	if in.ImagesBlacklist != nil {
		in, out := &in.ImagesBlacklist, &out.ImagesBlacklist
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ResourceAllocation != nil {
		in, out := &in.ResourceAllocation, &out.ResourceAllocation
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AwsNamespacesParameters.
func (in *AwsNamespacesParameters) DeepCopy() *AwsNamespacesParameters {
	if in == nil {
		return nil
	}
	out := new(AwsNamespacesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AwsObservation) DeepCopyInto(out *AwsObservation) {
	*out = *in
	if in.AdminKubeConfig != nil {
		in, out := &in.AdminKubeConfig, &out.AdminKubeConfig
		*out = new(string)
		**out = **in
	}
	if in.ApplySetting != nil {
		in, out := &in.ApplySetting, &out.ApplySetting
		*out = new(string)
		**out = **in
	}
	if in.BackupPolicy != nil {
		in, out := &in.BackupPolicy, &out.BackupPolicy
		*out = make([]AwsBackupPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CloudAccountID != nil {
		in, out := &in.CloudAccountID, &out.CloudAccountID
		*out = new(string)
		**out = **in
	}
	if in.CloudConfig != nil {
		in, out := &in.CloudConfig, &out.CloudConfig
		*out = make([]AwsCloudConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CloudConfigID != nil {
		in, out := &in.CloudConfigID, &out.CloudConfigID
		*out = new(string)
		**out = **in
	}
	if in.ClusterMetaAttribute != nil {
		in, out := &in.ClusterMetaAttribute, &out.ClusterMetaAttribute
		*out = new(string)
		**out = **in
	}
	if in.ClusterProfile != nil {
		in, out := &in.ClusterProfile, &out.ClusterProfile
		*out = make([]AwsClusterProfileObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterRbacBinding != nil {
		in, out := &in.ClusterRbacBinding, &out.ClusterRbacBinding
		*out = make([]AwsClusterRbacBindingObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Context != nil {
		in, out := &in.Context, &out.Context
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ForceDelete != nil {
		in, out := &in.ForceDelete, &out.ForceDelete
		*out = new(bool)
		**out = **in
	}
	if in.ForceDeleteDelay != nil {
		in, out := &in.ForceDeleteDelay, &out.ForceDeleteDelay
		*out = new(float64)
		**out = **in
	}
	if in.HostConfig != nil {
		in, out := &in.HostConfig, &out.HostConfig
		*out = make([]AwsHostConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Kubeconfig != nil {
		in, out := &in.Kubeconfig, &out.Kubeconfig
		*out = new(string)
		**out = **in
	}
	if in.LocationConfig != nil {
		in, out := &in.LocationConfig, &out.LocationConfig
		*out = make([]AwsLocationConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MachinePool != nil {
		in, out := &in.MachinePool, &out.MachinePool
		*out = make([]AwsMachinePoolObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]AwsNamespacesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OsPatchAfter != nil {
		in, out := &in.OsPatchAfter, &out.OsPatchAfter
		*out = new(string)
		**out = **in
	}
	if in.OsPatchOnBoot != nil {
		in, out := &in.OsPatchOnBoot, &out.OsPatchOnBoot
		*out = new(bool)
		**out = **in
	}
	if in.OsPatchSchedule != nil {
		in, out := &in.OsPatchSchedule, &out.OsPatchSchedule
		*out = new(string)
		**out = **in
	}
	if in.PauseAgentUpgrades != nil {
		in, out := &in.PauseAgentUpgrades, &out.PauseAgentUpgrades
		*out = new(string)
		**out = **in
	}
	if in.ReviewRepaveState != nil {
		in, out := &in.ReviewRepaveState, &out.ReviewRepaveState
		*out = new(string)
		**out = **in
	}
	if in.ScanPolicy != nil {
		in, out := &in.ScanPolicy, &out.ScanPolicy
		*out = make([]AwsScanPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SkipCompletion != nil {
		in, out := &in.SkipCompletion, &out.SkipCompletion
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AwsObservation.
func (in *AwsObservation) DeepCopy() *AwsObservation {
	if in == nil {
		return nil
	}
	out := new(AwsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AwsParameters) DeepCopyInto(out *AwsParameters) {
	*out = *in
	if in.ApplySetting != nil {
		in, out := &in.ApplySetting, &out.ApplySetting
		*out = new(string)
		**out = **in
	}
	if in.BackupPolicy != nil {
		in, out := &in.BackupPolicy, &out.BackupPolicy
		*out = make([]AwsBackupPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CloudAccountID != nil {
		in, out := &in.CloudAccountID, &out.CloudAccountID
		*out = new(string)
		**out = **in
	}
	if in.CloudConfig != nil {
		in, out := &in.CloudConfig, &out.CloudConfig
		*out = make([]AwsCloudConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterMetaAttribute != nil {
		in, out := &in.ClusterMetaAttribute, &out.ClusterMetaAttribute
		*out = new(string)
		**out = **in
	}
	if in.ClusterProfile != nil {
		in, out := &in.ClusterProfile, &out.ClusterProfile
		*out = make([]AwsClusterProfileParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterRbacBinding != nil {
		in, out := &in.ClusterRbacBinding, &out.ClusterRbacBinding
		*out = make([]AwsClusterRbacBindingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Context != nil {
		in, out := &in.Context, &out.Context
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ForceDelete != nil {
		in, out := &in.ForceDelete, &out.ForceDelete
		*out = new(bool)
		**out = **in
	}
	if in.ForceDeleteDelay != nil {
		in, out := &in.ForceDeleteDelay, &out.ForceDeleteDelay
		*out = new(float64)
		**out = **in
	}
	if in.HostConfig != nil {
		in, out := &in.HostConfig, &out.HostConfig
		*out = make([]AwsHostConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MachinePool != nil {
		in, out := &in.MachinePool, &out.MachinePool
		*out = make([]AwsMachinePoolParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]AwsNamespacesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OsPatchAfter != nil {
		in, out := &in.OsPatchAfter, &out.OsPatchAfter
		*out = new(string)
		**out = **in
	}
	if in.OsPatchOnBoot != nil {
		in, out := &in.OsPatchOnBoot, &out.OsPatchOnBoot
		*out = new(bool)
		**out = **in
	}
	if in.OsPatchSchedule != nil {
		in, out := &in.OsPatchSchedule, &out.OsPatchSchedule
		*out = new(string)
		**out = **in
	}
	if in.PauseAgentUpgrades != nil {
		in, out := &in.PauseAgentUpgrades, &out.PauseAgentUpgrades
		*out = new(string)
		**out = **in
	}
	if in.ReviewRepaveState != nil {
		in, out := &in.ReviewRepaveState, &out.ReviewRepaveState
		*out = new(string)
		**out = **in
	}
	if in.ScanPolicy != nil {
		in, out := &in.ScanPolicy, &out.ScanPolicy
		*out = make([]AwsScanPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SkipCompletion != nil {
		in, out := &in.SkipCompletion, &out.SkipCompletion
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AwsParameters.
func (in *AwsParameters) DeepCopy() *AwsParameters {
	if in == nil {
		return nil
	}
	out := new(AwsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AwsScanPolicyInitParameters) DeepCopyInto(out *AwsScanPolicyInitParameters) {
	*out = *in
	if in.ConfigurationScanSchedule != nil {
		in, out := &in.ConfigurationScanSchedule, &out.ConfigurationScanSchedule
		*out = new(string)
		**out = **in
	}
	if in.ConformanceScanSchedule != nil {
		in, out := &in.ConformanceScanSchedule, &out.ConformanceScanSchedule
		*out = new(string)
		**out = **in
	}
	if in.PenetrationScanSchedule != nil {
		in, out := &in.PenetrationScanSchedule, &out.PenetrationScanSchedule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AwsScanPolicyInitParameters.
func (in *AwsScanPolicyInitParameters) DeepCopy() *AwsScanPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(AwsScanPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AwsScanPolicyObservation) DeepCopyInto(out *AwsScanPolicyObservation) {
	*out = *in
	if in.ConfigurationScanSchedule != nil {
		in, out := &in.ConfigurationScanSchedule, &out.ConfigurationScanSchedule
		*out = new(string)
		**out = **in
	}
	if in.ConformanceScanSchedule != nil {
		in, out := &in.ConformanceScanSchedule, &out.ConformanceScanSchedule
		*out = new(string)
		**out = **in
	}
	if in.PenetrationScanSchedule != nil {
		in, out := &in.PenetrationScanSchedule, &out.PenetrationScanSchedule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AwsScanPolicyObservation.
func (in *AwsScanPolicyObservation) DeepCopy() *AwsScanPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(AwsScanPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AwsScanPolicyParameters) DeepCopyInto(out *AwsScanPolicyParameters) {
	*out = *in
	if in.ConfigurationScanSchedule != nil {
		in, out := &in.ConfigurationScanSchedule, &out.ConfigurationScanSchedule
		*out = new(string)
		**out = **in
	}
	if in.ConformanceScanSchedule != nil {
		in, out := &in.ConformanceScanSchedule, &out.ConformanceScanSchedule
		*out = new(string)
		**out = **in
	}
	if in.PenetrationScanSchedule != nil {
		in, out := &in.PenetrationScanSchedule, &out.PenetrationScanSchedule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AwsScanPolicyParameters.
func (in *AwsScanPolicyParameters) DeepCopy() *AwsScanPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(AwsScanPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AwsSpec) DeepCopyInto(out *AwsSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AwsSpec.
func (in *AwsSpec) DeepCopy() *AwsSpec {
	if in == nil {
		return nil
	}
	out := new(AwsSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AwsStatus) DeepCopyInto(out *AwsStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AwsStatus.
func (in *AwsStatus) DeepCopy() *AwsStatus {
	if in == nil {
		return nil
	}
	out := new(AwsStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Azure) DeepCopyInto(out *Azure) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Azure.
func (in *Azure) DeepCopy() *Azure {
	if in == nil {
		return nil
	}
	out := new(Azure)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Azure) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureBackupPolicyInitParameters) DeepCopyInto(out *AzureBackupPolicyInitParameters) {
	*out = *in
	if in.BackupLocationID != nil {
		in, out := &in.BackupLocationID, &out.BackupLocationID
		*out = new(string)
		**out = **in
	}
	if in.ClusterUids != nil {
		in, out := &in.ClusterUids, &out.ClusterUids
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExpiryInHour != nil {
		in, out := &in.ExpiryInHour, &out.ExpiryInHour
		*out = new(float64)
		**out = **in
	}
	if in.IncludeAllClusters != nil {
		in, out := &in.IncludeAllClusters, &out.IncludeAllClusters
		*out = new(bool)
		**out = **in
	}
	if in.IncludeClusterResources != nil {
		in, out := &in.IncludeClusterResources, &out.IncludeClusterResources
		*out = new(bool)
		**out = **in
	}
	if in.IncludeDisks != nil {
		in, out := &in.IncludeDisks, &out.IncludeDisks
		*out = new(bool)
		**out = **in
	}
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureBackupPolicyInitParameters.
func (in *AzureBackupPolicyInitParameters) DeepCopy() *AzureBackupPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(AzureBackupPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureBackupPolicyObservation) DeepCopyInto(out *AzureBackupPolicyObservation) {
	*out = *in
	if in.BackupLocationID != nil {
		in, out := &in.BackupLocationID, &out.BackupLocationID
		*out = new(string)
		**out = **in
	}
	if in.ClusterUids != nil {
		in, out := &in.ClusterUids, &out.ClusterUids
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExpiryInHour != nil {
		in, out := &in.ExpiryInHour, &out.ExpiryInHour
		*out = new(float64)
		**out = **in
	}
	if in.IncludeAllClusters != nil {
		in, out := &in.IncludeAllClusters, &out.IncludeAllClusters
		*out = new(bool)
		**out = **in
	}
	if in.IncludeClusterResources != nil {
		in, out := &in.IncludeClusterResources, &out.IncludeClusterResources
		*out = new(bool)
		**out = **in
	}
	if in.IncludeDisks != nil {
		in, out := &in.IncludeDisks, &out.IncludeDisks
		*out = new(bool)
		**out = **in
	}
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureBackupPolicyObservation.
func (in *AzureBackupPolicyObservation) DeepCopy() *AzureBackupPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(AzureBackupPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureBackupPolicyParameters) DeepCopyInto(out *AzureBackupPolicyParameters) {
	*out = *in
	if in.BackupLocationID != nil {
		in, out := &in.BackupLocationID, &out.BackupLocationID
		*out = new(string)
		**out = **in
	}
	if in.ClusterUids != nil {
		in, out := &in.ClusterUids, &out.ClusterUids
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExpiryInHour != nil {
		in, out := &in.ExpiryInHour, &out.ExpiryInHour
		*out = new(float64)
		**out = **in
	}
	if in.IncludeAllClusters != nil {
		in, out := &in.IncludeAllClusters, &out.IncludeAllClusters
		*out = new(bool)
		**out = **in
	}
	if in.IncludeClusterResources != nil {
		in, out := &in.IncludeClusterResources, &out.IncludeClusterResources
		*out = new(bool)
		**out = **in
	}
	if in.IncludeDisks != nil {
		in, out := &in.IncludeDisks, &out.IncludeDisks
		*out = new(bool)
		**out = **in
	}
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureBackupPolicyParameters.
func (in *AzureBackupPolicyParameters) DeepCopy() *AzureBackupPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(AzureBackupPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureCloudConfigInitParameters) DeepCopyInto(out *AzureCloudConfigInitParameters) {
	*out = *in
	if in.ContainerName != nil {
		in, out := &in.ContainerName, &out.ContainerName
		*out = new(string)
		**out = **in
	}
	if in.ControlPlaneSubnet != nil {
		in, out := &in.ControlPlaneSubnet, &out.ControlPlaneSubnet
		*out = make([]ControlPlaneSubnetInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NetworkResourceGroup != nil {
		in, out := &in.NetworkResourceGroup, &out.NetworkResourceGroup
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroup != nil {
		in, out := &in.ResourceGroup, &out.ResourceGroup
		*out = new(string)
		**out = **in
	}
	if in.SSHKey != nil {
		in, out := &in.SSHKey, &out.SSHKey
		*out = new(string)
		**out = **in
	}
	if in.StorageAccountName != nil {
		in, out := &in.StorageAccountName, &out.StorageAccountName
		*out = new(string)
		**out = **in
	}
	if in.SubscriptionID != nil {
		in, out := &in.SubscriptionID, &out.SubscriptionID
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkCidrBlock != nil {
		in, out := &in.VirtualNetworkCidrBlock, &out.VirtualNetworkCidrBlock
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkName != nil {
		in, out := &in.VirtualNetworkName, &out.VirtualNetworkName
		*out = new(string)
		**out = **in
	}
	if in.WorkerNodeSubnet != nil {
		in, out := &in.WorkerNodeSubnet, &out.WorkerNodeSubnet
		*out = make([]WorkerNodeSubnetInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureCloudConfigInitParameters.
func (in *AzureCloudConfigInitParameters) DeepCopy() *AzureCloudConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(AzureCloudConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureCloudConfigObservation) DeepCopyInto(out *AzureCloudConfigObservation) {
	*out = *in
	if in.ContainerName != nil {
		in, out := &in.ContainerName, &out.ContainerName
		*out = new(string)
		**out = **in
	}
	if in.ControlPlaneSubnet != nil {
		in, out := &in.ControlPlaneSubnet, &out.ControlPlaneSubnet
		*out = make([]ControlPlaneSubnetObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NetworkResourceGroup != nil {
		in, out := &in.NetworkResourceGroup, &out.NetworkResourceGroup
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroup != nil {
		in, out := &in.ResourceGroup, &out.ResourceGroup
		*out = new(string)
		**out = **in
	}
	if in.SSHKey != nil {
		in, out := &in.SSHKey, &out.SSHKey
		*out = new(string)
		**out = **in
	}
	if in.StorageAccountName != nil {
		in, out := &in.StorageAccountName, &out.StorageAccountName
		*out = new(string)
		**out = **in
	}
	if in.SubscriptionID != nil {
		in, out := &in.SubscriptionID, &out.SubscriptionID
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkCidrBlock != nil {
		in, out := &in.VirtualNetworkCidrBlock, &out.VirtualNetworkCidrBlock
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkName != nil {
		in, out := &in.VirtualNetworkName, &out.VirtualNetworkName
		*out = new(string)
		**out = **in
	}
	if in.WorkerNodeSubnet != nil {
		in, out := &in.WorkerNodeSubnet, &out.WorkerNodeSubnet
		*out = make([]WorkerNodeSubnetObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureCloudConfigObservation.
func (in *AzureCloudConfigObservation) DeepCopy() *AzureCloudConfigObservation {
	if in == nil {
		return nil
	}
	out := new(AzureCloudConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureCloudConfigParameters) DeepCopyInto(out *AzureCloudConfigParameters) {
	*out = *in
	if in.ContainerName != nil {
		in, out := &in.ContainerName, &out.ContainerName
		*out = new(string)
		**out = **in
	}
	if in.ControlPlaneSubnet != nil {
		in, out := &in.ControlPlaneSubnet, &out.ControlPlaneSubnet
		*out = make([]ControlPlaneSubnetParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NetworkResourceGroup != nil {
		in, out := &in.NetworkResourceGroup, &out.NetworkResourceGroup
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroup != nil {
		in, out := &in.ResourceGroup, &out.ResourceGroup
		*out = new(string)
		**out = **in
	}
	if in.SSHKey != nil {
		in, out := &in.SSHKey, &out.SSHKey
		*out = new(string)
		**out = **in
	}
	if in.StorageAccountName != nil {
		in, out := &in.StorageAccountName, &out.StorageAccountName
		*out = new(string)
		**out = **in
	}
	if in.SubscriptionID != nil {
		in, out := &in.SubscriptionID, &out.SubscriptionID
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkCidrBlock != nil {
		in, out := &in.VirtualNetworkCidrBlock, &out.VirtualNetworkCidrBlock
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkName != nil {
		in, out := &in.VirtualNetworkName, &out.VirtualNetworkName
		*out = new(string)
		**out = **in
	}
	if in.WorkerNodeSubnet != nil {
		in, out := &in.WorkerNodeSubnet, &out.WorkerNodeSubnet
		*out = make([]WorkerNodeSubnetParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureCloudConfigParameters.
func (in *AzureCloudConfigParameters) DeepCopy() *AzureCloudConfigParameters {
	if in == nil {
		return nil
	}
	out := new(AzureCloudConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureClusterProfileInitParameters) DeepCopyInto(out *AzureClusterProfileInitParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Pack != nil {
		in, out := &in.Pack, &out.Pack
		*out = make([]AzureClusterProfilePackInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureClusterProfileInitParameters.
func (in *AzureClusterProfileInitParameters) DeepCopy() *AzureClusterProfileInitParameters {
	if in == nil {
		return nil
	}
	out := new(AzureClusterProfileInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureClusterProfileObservation) DeepCopyInto(out *AzureClusterProfileObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Pack != nil {
		in, out := &in.Pack, &out.Pack
		*out = make([]AzureClusterProfilePackObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureClusterProfileObservation.
func (in *AzureClusterProfileObservation) DeepCopy() *AzureClusterProfileObservation {
	if in == nil {
		return nil
	}
	out := new(AzureClusterProfileObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureClusterProfilePackInitParameters) DeepCopyInto(out *AzureClusterProfilePackInitParameters) {
	*out = *in
	if in.Manifest != nil {
		in, out := &in.Manifest, &out.Manifest
		*out = make([]ClusterProfilePackManifestInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RegistryUID != nil {
		in, out := &in.RegistryUID, &out.RegistryUID
		*out = new(string)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureClusterProfilePackInitParameters.
func (in *AzureClusterProfilePackInitParameters) DeepCopy() *AzureClusterProfilePackInitParameters {
	if in == nil {
		return nil
	}
	out := new(AzureClusterProfilePackInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureClusterProfilePackObservation) DeepCopyInto(out *AzureClusterProfilePackObservation) {
	*out = *in
	if in.Manifest != nil {
		in, out := &in.Manifest, &out.Manifest
		*out = make([]ClusterProfilePackManifestObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RegistryUID != nil {
		in, out := &in.RegistryUID, &out.RegistryUID
		*out = new(string)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureClusterProfilePackObservation.
func (in *AzureClusterProfilePackObservation) DeepCopy() *AzureClusterProfilePackObservation {
	if in == nil {
		return nil
	}
	out := new(AzureClusterProfilePackObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureClusterProfilePackParameters) DeepCopyInto(out *AzureClusterProfilePackParameters) {
	*out = *in
	if in.Manifest != nil {
		in, out := &in.Manifest, &out.Manifest
		*out = make([]ClusterProfilePackManifestParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RegistryUID != nil {
		in, out := &in.RegistryUID, &out.RegistryUID
		*out = new(string)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureClusterProfilePackParameters.
func (in *AzureClusterProfilePackParameters) DeepCopy() *AzureClusterProfilePackParameters {
	if in == nil {
		return nil
	}
	out := new(AzureClusterProfilePackParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureClusterProfileParameters) DeepCopyInto(out *AzureClusterProfileParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Pack != nil {
		in, out := &in.Pack, &out.Pack
		*out = make([]AzureClusterProfilePackParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureClusterProfileParameters.
func (in *AzureClusterProfileParameters) DeepCopy() *AzureClusterProfileParameters {
	if in == nil {
		return nil
	}
	out := new(AzureClusterProfileParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureClusterRbacBindingInitParameters) DeepCopyInto(out *AzureClusterRbacBindingInitParameters) {
	*out = *in
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Subjects != nil {
		in, out := &in.Subjects, &out.Subjects
		*out = make([]AzureClusterRbacBindingSubjectsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureClusterRbacBindingInitParameters.
func (in *AzureClusterRbacBindingInitParameters) DeepCopy() *AzureClusterRbacBindingInitParameters {
	if in == nil {
		return nil
	}
	out := new(AzureClusterRbacBindingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureClusterRbacBindingObservation) DeepCopyInto(out *AzureClusterRbacBindingObservation) {
	*out = *in
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Subjects != nil {
		in, out := &in.Subjects, &out.Subjects
		*out = make([]AzureClusterRbacBindingSubjectsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureClusterRbacBindingObservation.
func (in *AzureClusterRbacBindingObservation) DeepCopy() *AzureClusterRbacBindingObservation {
	if in == nil {
		return nil
	}
	out := new(AzureClusterRbacBindingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureClusterRbacBindingParameters) DeepCopyInto(out *AzureClusterRbacBindingParameters) {
	*out = *in
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Subjects != nil {
		in, out := &in.Subjects, &out.Subjects
		*out = make([]AzureClusterRbacBindingSubjectsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureClusterRbacBindingParameters.
func (in *AzureClusterRbacBindingParameters) DeepCopy() *AzureClusterRbacBindingParameters {
	if in == nil {
		return nil
	}
	out := new(AzureClusterRbacBindingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureClusterRbacBindingSubjectsInitParameters) DeepCopyInto(out *AzureClusterRbacBindingSubjectsInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureClusterRbacBindingSubjectsInitParameters.
func (in *AzureClusterRbacBindingSubjectsInitParameters) DeepCopy() *AzureClusterRbacBindingSubjectsInitParameters {
	if in == nil {
		return nil
	}
	out := new(AzureClusterRbacBindingSubjectsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureClusterRbacBindingSubjectsObservation) DeepCopyInto(out *AzureClusterRbacBindingSubjectsObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureClusterRbacBindingSubjectsObservation.
func (in *AzureClusterRbacBindingSubjectsObservation) DeepCopy() *AzureClusterRbacBindingSubjectsObservation {
	if in == nil {
		return nil
	}
	out := new(AzureClusterRbacBindingSubjectsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureClusterRbacBindingSubjectsParameters) DeepCopyInto(out *AzureClusterRbacBindingSubjectsParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureClusterRbacBindingSubjectsParameters.
func (in *AzureClusterRbacBindingSubjectsParameters) DeepCopy() *AzureClusterRbacBindingSubjectsParameters {
	if in == nil {
		return nil
	}
	out := new(AzureClusterRbacBindingSubjectsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureHostConfigInitParameters) DeepCopyInto(out *AzureHostConfigInitParameters) {
	*out = *in
	if in.ExternalTrafficPolicy != nil {
		in, out := &in.ExternalTrafficPolicy, &out.ExternalTrafficPolicy
		*out = new(string)
		**out = **in
	}
	if in.HostEndpointType != nil {
		in, out := &in.HostEndpointType, &out.HostEndpointType
		*out = new(string)
		**out = **in
	}
	if in.IngressHost != nil {
		in, out := &in.IngressHost, &out.IngressHost
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancerSourceRanges != nil {
		in, out := &in.LoadBalancerSourceRanges, &out.LoadBalancerSourceRanges
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureHostConfigInitParameters.
func (in *AzureHostConfigInitParameters) DeepCopy() *AzureHostConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(AzureHostConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureHostConfigObservation) DeepCopyInto(out *AzureHostConfigObservation) {
	*out = *in
	if in.ExternalTrafficPolicy != nil {
		in, out := &in.ExternalTrafficPolicy, &out.ExternalTrafficPolicy
		*out = new(string)
		**out = **in
	}
	if in.HostEndpointType != nil {
		in, out := &in.HostEndpointType, &out.HostEndpointType
		*out = new(string)
		**out = **in
	}
	if in.IngressHost != nil {
		in, out := &in.IngressHost, &out.IngressHost
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancerSourceRanges != nil {
		in, out := &in.LoadBalancerSourceRanges, &out.LoadBalancerSourceRanges
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureHostConfigObservation.
func (in *AzureHostConfigObservation) DeepCopy() *AzureHostConfigObservation {
	if in == nil {
		return nil
	}
	out := new(AzureHostConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureHostConfigParameters) DeepCopyInto(out *AzureHostConfigParameters) {
	*out = *in
	if in.ExternalTrafficPolicy != nil {
		in, out := &in.ExternalTrafficPolicy, &out.ExternalTrafficPolicy
		*out = new(string)
		**out = **in
	}
	if in.HostEndpointType != nil {
		in, out := &in.HostEndpointType, &out.HostEndpointType
		*out = new(string)
		**out = **in
	}
	if in.IngressHost != nil {
		in, out := &in.IngressHost, &out.IngressHost
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancerSourceRanges != nil {
		in, out := &in.LoadBalancerSourceRanges, &out.LoadBalancerSourceRanges
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureHostConfigParameters.
func (in *AzureHostConfigParameters) DeepCopy() *AzureHostConfigParameters {
	if in == nil {
		return nil
	}
	out := new(AzureHostConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureInitParameters) DeepCopyInto(out *AzureInitParameters) {
	*out = *in
	if in.ApplySetting != nil {
		in, out := &in.ApplySetting, &out.ApplySetting
		*out = new(string)
		**out = **in
	}
	if in.BackupPolicy != nil {
		in, out := &in.BackupPolicy, &out.BackupPolicy
		*out = make([]AzureBackupPolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CloudAccountID != nil {
		in, out := &in.CloudAccountID, &out.CloudAccountID
		*out = new(string)
		**out = **in
	}
	if in.CloudConfig != nil {
		in, out := &in.CloudConfig, &out.CloudConfig
		*out = make([]AzureCloudConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterMetaAttribute != nil {
		in, out := &in.ClusterMetaAttribute, &out.ClusterMetaAttribute
		*out = new(string)
		**out = **in
	}
	if in.ClusterProfile != nil {
		in, out := &in.ClusterProfile, &out.ClusterProfile
		*out = make([]AzureClusterProfileInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterRbacBinding != nil {
		in, out := &in.ClusterRbacBinding, &out.ClusterRbacBinding
		*out = make([]AzureClusterRbacBindingInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Context != nil {
		in, out := &in.Context, &out.Context
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ForceDelete != nil {
		in, out := &in.ForceDelete, &out.ForceDelete
		*out = new(bool)
		**out = **in
	}
	if in.ForceDeleteDelay != nil {
		in, out := &in.ForceDeleteDelay, &out.ForceDeleteDelay
		*out = new(float64)
		**out = **in
	}
	if in.HostConfig != nil {
		in, out := &in.HostConfig, &out.HostConfig
		*out = make([]AzureHostConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MachinePool != nil {
		in, out := &in.MachinePool, &out.MachinePool
		*out = make([]AzureMachinePoolInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]AzureNamespacesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OsPatchAfter != nil {
		in, out := &in.OsPatchAfter, &out.OsPatchAfter
		*out = new(string)
		**out = **in
	}
	if in.OsPatchOnBoot != nil {
		in, out := &in.OsPatchOnBoot, &out.OsPatchOnBoot
		*out = new(bool)
		**out = **in
	}
	if in.OsPatchSchedule != nil {
		in, out := &in.OsPatchSchedule, &out.OsPatchSchedule
		*out = new(string)
		**out = **in
	}
	if in.PauseAgentUpgrades != nil {
		in, out := &in.PauseAgentUpgrades, &out.PauseAgentUpgrades
		*out = new(string)
		**out = **in
	}
	if in.ReviewRepaveState != nil {
		in, out := &in.ReviewRepaveState, &out.ReviewRepaveState
		*out = new(string)
		**out = **in
	}
	if in.ScanPolicy != nil {
		in, out := &in.ScanPolicy, &out.ScanPolicy
		*out = make([]AzureScanPolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SkipCompletion != nil {
		in, out := &in.SkipCompletion, &out.SkipCompletion
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureInitParameters.
func (in *AzureInitParameters) DeepCopy() *AzureInitParameters {
	if in == nil {
		return nil
	}
	out := new(AzureInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureList) DeepCopyInto(out *AzureList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Azure, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureList.
func (in *AzureList) DeepCopy() *AzureList {
	if in == nil {
		return nil
	}
	out := new(AzureList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AzureList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureLocationConfigInitParameters) DeepCopyInto(out *AzureLocationConfigInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureLocationConfigInitParameters.
func (in *AzureLocationConfigInitParameters) DeepCopy() *AzureLocationConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(AzureLocationConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureLocationConfigObservation) DeepCopyInto(out *AzureLocationConfigObservation) {
	*out = *in
	if in.CountryCode != nil {
		in, out := &in.CountryCode, &out.CountryCode
		*out = new(string)
		**out = **in
	}
	if in.CountryName != nil {
		in, out := &in.CountryName, &out.CountryName
		*out = new(string)
		**out = **in
	}
	if in.Latitude != nil {
		in, out := &in.Latitude, &out.Latitude
		*out = new(float64)
		**out = **in
	}
	if in.Longitude != nil {
		in, out := &in.Longitude, &out.Longitude
		*out = new(float64)
		**out = **in
	}
	if in.RegionCode != nil {
		in, out := &in.RegionCode, &out.RegionCode
		*out = new(string)
		**out = **in
	}
	if in.RegionName != nil {
		in, out := &in.RegionName, &out.RegionName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureLocationConfigObservation.
func (in *AzureLocationConfigObservation) DeepCopy() *AzureLocationConfigObservation {
	if in == nil {
		return nil
	}
	out := new(AzureLocationConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureLocationConfigParameters) DeepCopyInto(out *AzureLocationConfigParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureLocationConfigParameters.
func (in *AzureLocationConfigParameters) DeepCopy() *AzureLocationConfigParameters {
	if in == nil {
		return nil
	}
	out := new(AzureLocationConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureMachinePoolInitParameters) DeepCopyInto(out *AzureMachinePoolInitParameters) {
	*out = *in
	if in.AdditionalLabels != nil {
		in, out := &in.AdditionalLabels, &out.AdditionalLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Azs != nil {
		in, out := &in.Azs, &out.Azs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ControlPlane != nil {
		in, out := &in.ControlPlane, &out.ControlPlane
		*out = new(bool)
		**out = **in
	}
	if in.ControlPlaneAsWorker != nil {
		in, out := &in.ControlPlaneAsWorker, &out.ControlPlaneAsWorker
		*out = new(bool)
		**out = **in
	}
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]DiskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.IsSystemNodePool != nil {
		in, out := &in.IsSystemNodePool, &out.IsSystemNodePool
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Node != nil {
		in, out := &in.Node, &out.Node
		*out = make([]AzureMachinePoolNodeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NodeRepaveInterval != nil {
		in, out := &in.NodeRepaveInterval, &out.NodeRepaveInterval
		*out = new(float64)
		**out = **in
	}
	if in.OsType != nil {
		in, out := &in.OsType, &out.OsType
		*out = new(string)
		**out = **in
	}
	if in.Taints != nil {
		in, out := &in.Taints, &out.Taints
		*out = make([]AzureMachinePoolTaintsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UpdateStrategy != nil {
		in, out := &in.UpdateStrategy, &out.UpdateStrategy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureMachinePoolInitParameters.
func (in *AzureMachinePoolInitParameters) DeepCopy() *AzureMachinePoolInitParameters {
	if in == nil {
		return nil
	}
	out := new(AzureMachinePoolInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureMachinePoolNodeInitParameters) DeepCopyInto(out *AzureMachinePoolNodeInitParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.NodeID != nil {
		in, out := &in.NodeID, &out.NodeID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureMachinePoolNodeInitParameters.
func (in *AzureMachinePoolNodeInitParameters) DeepCopy() *AzureMachinePoolNodeInitParameters {
	if in == nil {
		return nil
	}
	out := new(AzureMachinePoolNodeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureMachinePoolNodeObservation) DeepCopyInto(out *AzureMachinePoolNodeObservation) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.NodeID != nil {
		in, out := &in.NodeID, &out.NodeID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureMachinePoolNodeObservation.
func (in *AzureMachinePoolNodeObservation) DeepCopy() *AzureMachinePoolNodeObservation {
	if in == nil {
		return nil
	}
	out := new(AzureMachinePoolNodeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureMachinePoolNodeParameters) DeepCopyInto(out *AzureMachinePoolNodeParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.NodeID != nil {
		in, out := &in.NodeID, &out.NodeID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureMachinePoolNodeParameters.
func (in *AzureMachinePoolNodeParameters) DeepCopy() *AzureMachinePoolNodeParameters {
	if in == nil {
		return nil
	}
	out := new(AzureMachinePoolNodeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureMachinePoolObservation) DeepCopyInto(out *AzureMachinePoolObservation) {
	*out = *in
	if in.AdditionalLabels != nil {
		in, out := &in.AdditionalLabels, &out.AdditionalLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Azs != nil {
		in, out := &in.Azs, &out.Azs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ControlPlane != nil {
		in, out := &in.ControlPlane, &out.ControlPlane
		*out = new(bool)
		**out = **in
	}
	if in.ControlPlaneAsWorker != nil {
		in, out := &in.ControlPlaneAsWorker, &out.ControlPlaneAsWorker
		*out = new(bool)
		**out = **in
	}
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]DiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.IsSystemNodePool != nil {
		in, out := &in.IsSystemNodePool, &out.IsSystemNodePool
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Node != nil {
		in, out := &in.Node, &out.Node
		*out = make([]AzureMachinePoolNodeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NodeRepaveInterval != nil {
		in, out := &in.NodeRepaveInterval, &out.NodeRepaveInterval
		*out = new(float64)
		**out = **in
	}
	if in.OsType != nil {
		in, out := &in.OsType, &out.OsType
		*out = new(string)
		**out = **in
	}
	if in.Taints != nil {
		in, out := &in.Taints, &out.Taints
		*out = make([]AzureMachinePoolTaintsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UpdateStrategy != nil {
		in, out := &in.UpdateStrategy, &out.UpdateStrategy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureMachinePoolObservation.
func (in *AzureMachinePoolObservation) DeepCopy() *AzureMachinePoolObservation {
	if in == nil {
		return nil
	}
	out := new(AzureMachinePoolObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureMachinePoolParameters) DeepCopyInto(out *AzureMachinePoolParameters) {
	*out = *in
	if in.AdditionalLabels != nil {
		in, out := &in.AdditionalLabels, &out.AdditionalLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Azs != nil {
		in, out := &in.Azs, &out.Azs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ControlPlane != nil {
		in, out := &in.ControlPlane, &out.ControlPlane
		*out = new(bool)
		**out = **in
	}
	if in.ControlPlaneAsWorker != nil {
		in, out := &in.ControlPlaneAsWorker, &out.ControlPlaneAsWorker
		*out = new(bool)
		**out = **in
	}
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]DiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.IsSystemNodePool != nil {
		in, out := &in.IsSystemNodePool, &out.IsSystemNodePool
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Node != nil {
		in, out := &in.Node, &out.Node
		*out = make([]AzureMachinePoolNodeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NodeRepaveInterval != nil {
		in, out := &in.NodeRepaveInterval, &out.NodeRepaveInterval
		*out = new(float64)
		**out = **in
	}
	if in.OsType != nil {
		in, out := &in.OsType, &out.OsType
		*out = new(string)
		**out = **in
	}
	if in.Taints != nil {
		in, out := &in.Taints, &out.Taints
		*out = make([]AzureMachinePoolTaintsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UpdateStrategy != nil {
		in, out := &in.UpdateStrategy, &out.UpdateStrategy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureMachinePoolParameters.
func (in *AzureMachinePoolParameters) DeepCopy() *AzureMachinePoolParameters {
	if in == nil {
		return nil
	}
	out := new(AzureMachinePoolParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureMachinePoolTaintsInitParameters) DeepCopyInto(out *AzureMachinePoolTaintsInitParameters) {
	*out = *in
	if in.Effect != nil {
		in, out := &in.Effect, &out.Effect
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureMachinePoolTaintsInitParameters.
func (in *AzureMachinePoolTaintsInitParameters) DeepCopy() *AzureMachinePoolTaintsInitParameters {
	if in == nil {
		return nil
	}
	out := new(AzureMachinePoolTaintsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureMachinePoolTaintsObservation) DeepCopyInto(out *AzureMachinePoolTaintsObservation) {
	*out = *in
	if in.Effect != nil {
		in, out := &in.Effect, &out.Effect
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureMachinePoolTaintsObservation.
func (in *AzureMachinePoolTaintsObservation) DeepCopy() *AzureMachinePoolTaintsObservation {
	if in == nil {
		return nil
	}
	out := new(AzureMachinePoolTaintsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureMachinePoolTaintsParameters) DeepCopyInto(out *AzureMachinePoolTaintsParameters) {
	*out = *in
	if in.Effect != nil {
		in, out := &in.Effect, &out.Effect
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureMachinePoolTaintsParameters.
func (in *AzureMachinePoolTaintsParameters) DeepCopy() *AzureMachinePoolTaintsParameters {
	if in == nil {
		return nil
	}
	out := new(AzureMachinePoolTaintsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureNamespacesInitParameters) DeepCopyInto(out *AzureNamespacesInitParameters) {
	*out = *in
	if in.ImagesBlacklist != nil {
		in, out := &in.ImagesBlacklist, &out.ImagesBlacklist
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ResourceAllocation != nil {
		in, out := &in.ResourceAllocation, &out.ResourceAllocation
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureNamespacesInitParameters.
func (in *AzureNamespacesInitParameters) DeepCopy() *AzureNamespacesInitParameters {
	if in == nil {
		return nil
	}
	out := new(AzureNamespacesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureNamespacesObservation) DeepCopyInto(out *AzureNamespacesObservation) {
	*out = *in
	if in.ImagesBlacklist != nil {
		in, out := &in.ImagesBlacklist, &out.ImagesBlacklist
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ResourceAllocation != nil {
		in, out := &in.ResourceAllocation, &out.ResourceAllocation
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureNamespacesObservation.
func (in *AzureNamespacesObservation) DeepCopy() *AzureNamespacesObservation {
	if in == nil {
		return nil
	}
	out := new(AzureNamespacesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureNamespacesParameters) DeepCopyInto(out *AzureNamespacesParameters) {
	*out = *in
	if in.ImagesBlacklist != nil {
		in, out := &in.ImagesBlacklist, &out.ImagesBlacklist
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ResourceAllocation != nil {
		in, out := &in.ResourceAllocation, &out.ResourceAllocation
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureNamespacesParameters.
func (in *AzureNamespacesParameters) DeepCopy() *AzureNamespacesParameters {
	if in == nil {
		return nil
	}
	out := new(AzureNamespacesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureObservation) DeepCopyInto(out *AzureObservation) {
	*out = *in
	if in.AdminKubeConfig != nil {
		in, out := &in.AdminKubeConfig, &out.AdminKubeConfig
		*out = new(string)
		**out = **in
	}
	if in.ApplySetting != nil {
		in, out := &in.ApplySetting, &out.ApplySetting
		*out = new(string)
		**out = **in
	}
	if in.BackupPolicy != nil {
		in, out := &in.BackupPolicy, &out.BackupPolicy
		*out = make([]AzureBackupPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CloudAccountID != nil {
		in, out := &in.CloudAccountID, &out.CloudAccountID
		*out = new(string)
		**out = **in
	}
	if in.CloudConfig != nil {
		in, out := &in.CloudConfig, &out.CloudConfig
		*out = make([]AzureCloudConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CloudConfigID != nil {
		in, out := &in.CloudConfigID, &out.CloudConfigID
		*out = new(string)
		**out = **in
	}
	if in.ClusterMetaAttribute != nil {
		in, out := &in.ClusterMetaAttribute, &out.ClusterMetaAttribute
		*out = new(string)
		**out = **in
	}
	if in.ClusterProfile != nil {
		in, out := &in.ClusterProfile, &out.ClusterProfile
		*out = make([]AzureClusterProfileObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterRbacBinding != nil {
		in, out := &in.ClusterRbacBinding, &out.ClusterRbacBinding
		*out = make([]AzureClusterRbacBindingObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Context != nil {
		in, out := &in.Context, &out.Context
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ForceDelete != nil {
		in, out := &in.ForceDelete, &out.ForceDelete
		*out = new(bool)
		**out = **in
	}
	if in.ForceDeleteDelay != nil {
		in, out := &in.ForceDeleteDelay, &out.ForceDeleteDelay
		*out = new(float64)
		**out = **in
	}
	if in.HostConfig != nil {
		in, out := &in.HostConfig, &out.HostConfig
		*out = make([]AzureHostConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Kubeconfig != nil {
		in, out := &in.Kubeconfig, &out.Kubeconfig
		*out = new(string)
		**out = **in
	}
	if in.LocationConfig != nil {
		in, out := &in.LocationConfig, &out.LocationConfig
		*out = make([]AzureLocationConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MachinePool != nil {
		in, out := &in.MachinePool, &out.MachinePool
		*out = make([]AzureMachinePoolObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]AzureNamespacesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OsPatchAfter != nil {
		in, out := &in.OsPatchAfter, &out.OsPatchAfter
		*out = new(string)
		**out = **in
	}
	if in.OsPatchOnBoot != nil {
		in, out := &in.OsPatchOnBoot, &out.OsPatchOnBoot
		*out = new(bool)
		**out = **in
	}
	if in.OsPatchSchedule != nil {
		in, out := &in.OsPatchSchedule, &out.OsPatchSchedule
		*out = new(string)
		**out = **in
	}
	if in.PauseAgentUpgrades != nil {
		in, out := &in.PauseAgentUpgrades, &out.PauseAgentUpgrades
		*out = new(string)
		**out = **in
	}
	if in.ReviewRepaveState != nil {
		in, out := &in.ReviewRepaveState, &out.ReviewRepaveState
		*out = new(string)
		**out = **in
	}
	if in.ScanPolicy != nil {
		in, out := &in.ScanPolicy, &out.ScanPolicy
		*out = make([]AzureScanPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SkipCompletion != nil {
		in, out := &in.SkipCompletion, &out.SkipCompletion
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureObservation.
func (in *AzureObservation) DeepCopy() *AzureObservation {
	if in == nil {
		return nil
	}
	out := new(AzureObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureParameters) DeepCopyInto(out *AzureParameters) {
	*out = *in
	if in.ApplySetting != nil {
		in, out := &in.ApplySetting, &out.ApplySetting
		*out = new(string)
		**out = **in
	}
	if in.BackupPolicy != nil {
		in, out := &in.BackupPolicy, &out.BackupPolicy
		*out = make([]AzureBackupPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CloudAccountID != nil {
		in, out := &in.CloudAccountID, &out.CloudAccountID
		*out = new(string)
		**out = **in
	}
	if in.CloudConfig != nil {
		in, out := &in.CloudConfig, &out.CloudConfig
		*out = make([]AzureCloudConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterMetaAttribute != nil {
		in, out := &in.ClusterMetaAttribute, &out.ClusterMetaAttribute
		*out = new(string)
		**out = **in
	}
	if in.ClusterProfile != nil {
		in, out := &in.ClusterProfile, &out.ClusterProfile
		*out = make([]AzureClusterProfileParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterRbacBinding != nil {
		in, out := &in.ClusterRbacBinding, &out.ClusterRbacBinding
		*out = make([]AzureClusterRbacBindingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Context != nil {
		in, out := &in.Context, &out.Context
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ForceDelete != nil {
		in, out := &in.ForceDelete, &out.ForceDelete
		*out = new(bool)
		**out = **in
	}
	if in.ForceDeleteDelay != nil {
		in, out := &in.ForceDeleteDelay, &out.ForceDeleteDelay
		*out = new(float64)
		**out = **in
	}
	if in.HostConfig != nil {
		in, out := &in.HostConfig, &out.HostConfig
		*out = make([]AzureHostConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MachinePool != nil {
		in, out := &in.MachinePool, &out.MachinePool
		*out = make([]AzureMachinePoolParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]AzureNamespacesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OsPatchAfter != nil {
		in, out := &in.OsPatchAfter, &out.OsPatchAfter
		*out = new(string)
		**out = **in
	}
	if in.OsPatchOnBoot != nil {
		in, out := &in.OsPatchOnBoot, &out.OsPatchOnBoot
		*out = new(bool)
		**out = **in
	}
	if in.OsPatchSchedule != nil {
		in, out := &in.OsPatchSchedule, &out.OsPatchSchedule
		*out = new(string)
		**out = **in
	}
	if in.PauseAgentUpgrades != nil {
		in, out := &in.PauseAgentUpgrades, &out.PauseAgentUpgrades
		*out = new(string)
		**out = **in
	}
	if in.ReviewRepaveState != nil {
		in, out := &in.ReviewRepaveState, &out.ReviewRepaveState
		*out = new(string)
		**out = **in
	}
	if in.ScanPolicy != nil {
		in, out := &in.ScanPolicy, &out.ScanPolicy
		*out = make([]AzureScanPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SkipCompletion != nil {
		in, out := &in.SkipCompletion, &out.SkipCompletion
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureParameters.
func (in *AzureParameters) DeepCopy() *AzureParameters {
	if in == nil {
		return nil
	}
	out := new(AzureParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureScanPolicyInitParameters) DeepCopyInto(out *AzureScanPolicyInitParameters) {
	*out = *in
	if in.ConfigurationScanSchedule != nil {
		in, out := &in.ConfigurationScanSchedule, &out.ConfigurationScanSchedule
		*out = new(string)
		**out = **in
	}
	if in.ConformanceScanSchedule != nil {
		in, out := &in.ConformanceScanSchedule, &out.ConformanceScanSchedule
		*out = new(string)
		**out = **in
	}
	if in.PenetrationScanSchedule != nil {
		in, out := &in.PenetrationScanSchedule, &out.PenetrationScanSchedule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureScanPolicyInitParameters.
func (in *AzureScanPolicyInitParameters) DeepCopy() *AzureScanPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(AzureScanPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureScanPolicyObservation) DeepCopyInto(out *AzureScanPolicyObservation) {
	*out = *in
	if in.ConfigurationScanSchedule != nil {
		in, out := &in.ConfigurationScanSchedule, &out.ConfigurationScanSchedule
		*out = new(string)
		**out = **in
	}
	if in.ConformanceScanSchedule != nil {
		in, out := &in.ConformanceScanSchedule, &out.ConformanceScanSchedule
		*out = new(string)
		**out = **in
	}
	if in.PenetrationScanSchedule != nil {
		in, out := &in.PenetrationScanSchedule, &out.PenetrationScanSchedule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureScanPolicyObservation.
func (in *AzureScanPolicyObservation) DeepCopy() *AzureScanPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(AzureScanPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureScanPolicyParameters) DeepCopyInto(out *AzureScanPolicyParameters) {
	*out = *in
	if in.ConfigurationScanSchedule != nil {
		in, out := &in.ConfigurationScanSchedule, &out.ConfigurationScanSchedule
		*out = new(string)
		**out = **in
	}
	if in.ConformanceScanSchedule != nil {
		in, out := &in.ConformanceScanSchedule, &out.ConformanceScanSchedule
		*out = new(string)
		**out = **in
	}
	if in.PenetrationScanSchedule != nil {
		in, out := &in.PenetrationScanSchedule, &out.PenetrationScanSchedule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureScanPolicyParameters.
func (in *AzureScanPolicyParameters) DeepCopy() *AzureScanPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(AzureScanPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureSpec) DeepCopyInto(out *AzureSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureSpec.
func (in *AzureSpec) DeepCopy() *AzureSpec {
	if in == nil {
		return nil
	}
	out := new(AzureSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureStatus) DeepCopyInto(out *AzureStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureStatus.
func (in *AzureStatus) DeepCopy() *AzureStatus {
	if in == nil {
		return nil
	}
	out := new(AzureStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupPolicyInitParameters) DeepCopyInto(out *BackupPolicyInitParameters) {
	*out = *in
	if in.BackupLocationID != nil {
		in, out := &in.BackupLocationID, &out.BackupLocationID
		*out = new(string)
		**out = **in
	}
	if in.ClusterUids != nil {
		in, out := &in.ClusterUids, &out.ClusterUids
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExpiryInHour != nil {
		in, out := &in.ExpiryInHour, &out.ExpiryInHour
		*out = new(float64)
		**out = **in
	}
	if in.IncludeAllClusters != nil {
		in, out := &in.IncludeAllClusters, &out.IncludeAllClusters
		*out = new(bool)
		**out = **in
	}
	if in.IncludeClusterResources != nil {
		in, out := &in.IncludeClusterResources, &out.IncludeClusterResources
		*out = new(bool)
		**out = **in
	}
	if in.IncludeDisks != nil {
		in, out := &in.IncludeDisks, &out.IncludeDisks
		*out = new(bool)
		**out = **in
	}
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupPolicyInitParameters.
func (in *BackupPolicyInitParameters) DeepCopy() *BackupPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(BackupPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupPolicyObservation) DeepCopyInto(out *BackupPolicyObservation) {
	*out = *in
	if in.BackupLocationID != nil {
		in, out := &in.BackupLocationID, &out.BackupLocationID
		*out = new(string)
		**out = **in
	}
	if in.ClusterUids != nil {
		in, out := &in.ClusterUids, &out.ClusterUids
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExpiryInHour != nil {
		in, out := &in.ExpiryInHour, &out.ExpiryInHour
		*out = new(float64)
		**out = **in
	}
	if in.IncludeAllClusters != nil {
		in, out := &in.IncludeAllClusters, &out.IncludeAllClusters
		*out = new(bool)
		**out = **in
	}
	if in.IncludeClusterResources != nil {
		in, out := &in.IncludeClusterResources, &out.IncludeClusterResources
		*out = new(bool)
		**out = **in
	}
	if in.IncludeDisks != nil {
		in, out := &in.IncludeDisks, &out.IncludeDisks
		*out = new(bool)
		**out = **in
	}
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupPolicyObservation.
func (in *BackupPolicyObservation) DeepCopy() *BackupPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(BackupPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupPolicyParameters) DeepCopyInto(out *BackupPolicyParameters) {
	*out = *in
	if in.BackupLocationID != nil {
		in, out := &in.BackupLocationID, &out.BackupLocationID
		*out = new(string)
		**out = **in
	}
	if in.ClusterUids != nil {
		in, out := &in.ClusterUids, &out.ClusterUids
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExpiryInHour != nil {
		in, out := &in.ExpiryInHour, &out.ExpiryInHour
		*out = new(float64)
		**out = **in
	}
	if in.IncludeAllClusters != nil {
		in, out := &in.IncludeAllClusters, &out.IncludeAllClusters
		*out = new(bool)
		**out = **in
	}
	if in.IncludeClusterResources != nil {
		in, out := &in.IncludeClusterResources, &out.IncludeClusterResources
		*out = new(bool)
		**out = **in
	}
	if in.IncludeDisks != nil {
		in, out := &in.IncludeDisks, &out.IncludeDisks
		*out = new(bool)
		**out = **in
	}
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupPolicyParameters.
func (in *BackupPolicyParameters) DeepCopy() *BackupPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(BackupPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudConfigInitParameters) DeepCopyInto(out *CloudConfigInitParameters) {
	*out = *in
	if in.ControlPlaneCidr != nil {
		in, out := &in.ControlPlaneCidr, &out.ControlPlaneCidr
		*out = new(string)
		**out = **in
	}
	if in.ControlPlaneSubnetName != nil {
		in, out := &in.ControlPlaneSubnetName, &out.ControlPlaneSubnetName
		*out = new(string)
		**out = **in
	}
	if in.ControlPlaneSubnetSecurityGroupName != nil {
		in, out := &in.ControlPlaneSubnetSecurityGroupName, &out.ControlPlaneSubnetSecurityGroupName
		*out = new(string)
		**out = **in
	}
	if in.PrivateCluster != nil {
		in, out := &in.PrivateCluster, &out.PrivateCluster
		*out = new(bool)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroup != nil {
		in, out := &in.ResourceGroup, &out.ResourceGroup
		*out = new(string)
		**out = **in
	}
	if in.SSHKey != nil {
		in, out := &in.SSHKey, &out.SSHKey
		*out = new(string)
		**out = **in
	}
	if in.SubscriptionID != nil {
		in, out := &in.SubscriptionID, &out.SubscriptionID
		*out = new(string)
		**out = **in
	}
	if in.VnetCidrBlock != nil {
		in, out := &in.VnetCidrBlock, &out.VnetCidrBlock
		*out = new(string)
		**out = **in
	}
	if in.VnetName != nil {
		in, out := &in.VnetName, &out.VnetName
		*out = new(string)
		**out = **in
	}
	if in.VnetResourceGroup != nil {
		in, out := &in.VnetResourceGroup, &out.VnetResourceGroup
		*out = new(string)
		**out = **in
	}
	if in.WorkerCidr != nil {
		in, out := &in.WorkerCidr, &out.WorkerCidr
		*out = new(string)
		**out = **in
	}
	if in.WorkerSubnetName != nil {
		in, out := &in.WorkerSubnetName, &out.WorkerSubnetName
		*out = new(string)
		**out = **in
	}
	if in.WorkerSubnetSecurityGroupName != nil {
		in, out := &in.WorkerSubnetSecurityGroupName, &out.WorkerSubnetSecurityGroupName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudConfigInitParameters.
func (in *CloudConfigInitParameters) DeepCopy() *CloudConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(CloudConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudConfigObservation) DeepCopyInto(out *CloudConfigObservation) {
	*out = *in
	if in.ControlPlaneCidr != nil {
		in, out := &in.ControlPlaneCidr, &out.ControlPlaneCidr
		*out = new(string)
		**out = **in
	}
	if in.ControlPlaneSubnetName != nil {
		in, out := &in.ControlPlaneSubnetName, &out.ControlPlaneSubnetName
		*out = new(string)
		**out = **in
	}
	if in.ControlPlaneSubnetSecurityGroupName != nil {
		in, out := &in.ControlPlaneSubnetSecurityGroupName, &out.ControlPlaneSubnetSecurityGroupName
		*out = new(string)
		**out = **in
	}
	if in.PrivateCluster != nil {
		in, out := &in.PrivateCluster, &out.PrivateCluster
		*out = new(bool)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroup != nil {
		in, out := &in.ResourceGroup, &out.ResourceGroup
		*out = new(string)
		**out = **in
	}
	if in.SSHKey != nil {
		in, out := &in.SSHKey, &out.SSHKey
		*out = new(string)
		**out = **in
	}
	if in.SubscriptionID != nil {
		in, out := &in.SubscriptionID, &out.SubscriptionID
		*out = new(string)
		**out = **in
	}
	if in.VnetCidrBlock != nil {
		in, out := &in.VnetCidrBlock, &out.VnetCidrBlock
		*out = new(string)
		**out = **in
	}
	if in.VnetName != nil {
		in, out := &in.VnetName, &out.VnetName
		*out = new(string)
		**out = **in
	}
	if in.VnetResourceGroup != nil {
		in, out := &in.VnetResourceGroup, &out.VnetResourceGroup
		*out = new(string)
		**out = **in
	}
	if in.WorkerCidr != nil {
		in, out := &in.WorkerCidr, &out.WorkerCidr
		*out = new(string)
		**out = **in
	}
	if in.WorkerSubnetName != nil {
		in, out := &in.WorkerSubnetName, &out.WorkerSubnetName
		*out = new(string)
		**out = **in
	}
	if in.WorkerSubnetSecurityGroupName != nil {
		in, out := &in.WorkerSubnetSecurityGroupName, &out.WorkerSubnetSecurityGroupName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudConfigObservation.
func (in *CloudConfigObservation) DeepCopy() *CloudConfigObservation {
	if in == nil {
		return nil
	}
	out := new(CloudConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudConfigParameters) DeepCopyInto(out *CloudConfigParameters) {
	*out = *in
	if in.ControlPlaneCidr != nil {
		in, out := &in.ControlPlaneCidr, &out.ControlPlaneCidr
		*out = new(string)
		**out = **in
	}
	if in.ControlPlaneSubnetName != nil {
		in, out := &in.ControlPlaneSubnetName, &out.ControlPlaneSubnetName
		*out = new(string)
		**out = **in
	}
	if in.ControlPlaneSubnetSecurityGroupName != nil {
		in, out := &in.ControlPlaneSubnetSecurityGroupName, &out.ControlPlaneSubnetSecurityGroupName
		*out = new(string)
		**out = **in
	}
	if in.PrivateCluster != nil {
		in, out := &in.PrivateCluster, &out.PrivateCluster
		*out = new(bool)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroup != nil {
		in, out := &in.ResourceGroup, &out.ResourceGroup
		*out = new(string)
		**out = **in
	}
	if in.SSHKey != nil {
		in, out := &in.SSHKey, &out.SSHKey
		*out = new(string)
		**out = **in
	}
	if in.SubscriptionID != nil {
		in, out := &in.SubscriptionID, &out.SubscriptionID
		*out = new(string)
		**out = **in
	}
	if in.VnetCidrBlock != nil {
		in, out := &in.VnetCidrBlock, &out.VnetCidrBlock
		*out = new(string)
		**out = **in
	}
	if in.VnetName != nil {
		in, out := &in.VnetName, &out.VnetName
		*out = new(string)
		**out = **in
	}
	if in.VnetResourceGroup != nil {
		in, out := &in.VnetResourceGroup, &out.VnetResourceGroup
		*out = new(string)
		**out = **in
	}
	if in.WorkerCidr != nil {
		in, out := &in.WorkerCidr, &out.WorkerCidr
		*out = new(string)
		**out = **in
	}
	if in.WorkerSubnetName != nil {
		in, out := &in.WorkerSubnetName, &out.WorkerSubnetName
		*out = new(string)
		**out = **in
	}
	if in.WorkerSubnetSecurityGroupName != nil {
		in, out := &in.WorkerSubnetSecurityGroupName, &out.WorkerSubnetSecurityGroupName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudConfigParameters.
func (in *CloudConfigParameters) DeepCopy() *CloudConfigParameters {
	if in == nil {
		return nil
	}
	out := new(CloudConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterProfileInitParameters) DeepCopyInto(out *ClusterProfileInitParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Pack != nil {
		in, out := &in.Pack, &out.Pack
		*out = make([]PackInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterProfileInitParameters.
func (in *ClusterProfileInitParameters) DeepCopy() *ClusterProfileInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterProfileInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterProfileObservation) DeepCopyInto(out *ClusterProfileObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Pack != nil {
		in, out := &in.Pack, &out.Pack
		*out = make([]PackObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterProfileObservation.
func (in *ClusterProfileObservation) DeepCopy() *ClusterProfileObservation {
	if in == nil {
		return nil
	}
	out := new(ClusterProfileObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterProfilePackInitParameters) DeepCopyInto(out *ClusterProfilePackInitParameters) {
	*out = *in
	if in.Manifest != nil {
		in, out := &in.Manifest, &out.Manifest
		*out = make([]PackManifestInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RegistryUID != nil {
		in, out := &in.RegistryUID, &out.RegistryUID
		*out = new(string)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterProfilePackInitParameters.
func (in *ClusterProfilePackInitParameters) DeepCopy() *ClusterProfilePackInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterProfilePackInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterProfilePackManifestInitParameters) DeepCopyInto(out *ClusterProfilePackManifestInitParameters) {
	*out = *in
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterProfilePackManifestInitParameters.
func (in *ClusterProfilePackManifestInitParameters) DeepCopy() *ClusterProfilePackManifestInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterProfilePackManifestInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterProfilePackManifestObservation) DeepCopyInto(out *ClusterProfilePackManifestObservation) {
	*out = *in
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterProfilePackManifestObservation.
func (in *ClusterProfilePackManifestObservation) DeepCopy() *ClusterProfilePackManifestObservation {
	if in == nil {
		return nil
	}
	out := new(ClusterProfilePackManifestObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterProfilePackManifestParameters) DeepCopyInto(out *ClusterProfilePackManifestParameters) {
	*out = *in
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterProfilePackManifestParameters.
func (in *ClusterProfilePackManifestParameters) DeepCopy() *ClusterProfilePackManifestParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterProfilePackManifestParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterProfilePackObservation) DeepCopyInto(out *ClusterProfilePackObservation) {
	*out = *in
	if in.Manifest != nil {
		in, out := &in.Manifest, &out.Manifest
		*out = make([]PackManifestObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RegistryUID != nil {
		in, out := &in.RegistryUID, &out.RegistryUID
		*out = new(string)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterProfilePackObservation.
func (in *ClusterProfilePackObservation) DeepCopy() *ClusterProfilePackObservation {
	if in == nil {
		return nil
	}
	out := new(ClusterProfilePackObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterProfilePackParameters) DeepCopyInto(out *ClusterProfilePackParameters) {
	*out = *in
	if in.Manifest != nil {
		in, out := &in.Manifest, &out.Manifest
		*out = make([]PackManifestParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RegistryUID != nil {
		in, out := &in.RegistryUID, &out.RegistryUID
		*out = new(string)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterProfilePackParameters.
func (in *ClusterProfilePackParameters) DeepCopy() *ClusterProfilePackParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterProfilePackParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterProfileParameters) DeepCopyInto(out *ClusterProfileParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Pack != nil {
		in, out := &in.Pack, &out.Pack
		*out = make([]PackParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterProfileParameters.
func (in *ClusterProfileParameters) DeepCopy() *ClusterProfileParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterProfileParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterRbacBindingInitParameters) DeepCopyInto(out *ClusterRbacBindingInitParameters) {
	*out = *in
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Subjects != nil {
		in, out := &in.Subjects, &out.Subjects
		*out = make([]SubjectsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterRbacBindingInitParameters.
func (in *ClusterRbacBindingInitParameters) DeepCopy() *ClusterRbacBindingInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterRbacBindingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterRbacBindingObservation) DeepCopyInto(out *ClusterRbacBindingObservation) {
	*out = *in
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Subjects != nil {
		in, out := &in.Subjects, &out.Subjects
		*out = make([]SubjectsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterRbacBindingObservation.
func (in *ClusterRbacBindingObservation) DeepCopy() *ClusterRbacBindingObservation {
	if in == nil {
		return nil
	}
	out := new(ClusterRbacBindingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterRbacBindingParameters) DeepCopyInto(out *ClusterRbacBindingParameters) {
	*out = *in
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Subjects != nil {
		in, out := &in.Subjects, &out.Subjects
		*out = make([]SubjectsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterRbacBindingParameters.
func (in *ClusterRbacBindingParameters) DeepCopy() *ClusterRbacBindingParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterRbacBindingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterRbacBindingSubjectsInitParameters) DeepCopyInto(out *ClusterRbacBindingSubjectsInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterRbacBindingSubjectsInitParameters.
func (in *ClusterRbacBindingSubjectsInitParameters) DeepCopy() *ClusterRbacBindingSubjectsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterRbacBindingSubjectsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterRbacBindingSubjectsObservation) DeepCopyInto(out *ClusterRbacBindingSubjectsObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterRbacBindingSubjectsObservation.
func (in *ClusterRbacBindingSubjectsObservation) DeepCopy() *ClusterRbacBindingSubjectsObservation {
	if in == nil {
		return nil
	}
	out := new(ClusterRbacBindingSubjectsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterRbacBindingSubjectsParameters) DeepCopyInto(out *ClusterRbacBindingSubjectsParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterRbacBindingSubjectsParameters.
func (in *ClusterRbacBindingSubjectsParameters) DeepCopy() *ClusterRbacBindingSubjectsParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterRbacBindingSubjectsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClustersInitParameters) DeepCopyInto(out *ClustersInitParameters) {
	*out = *in
	if in.ClusterUID != nil {
		in, out := &in.ClusterUID, &out.ClusterUID
		*out = new(string)
		**out = **in
	}
	if in.HostDNS != nil {
		in, out := &in.HostDNS, &out.HostDNS
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClustersInitParameters.
func (in *ClustersInitParameters) DeepCopy() *ClustersInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClustersInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClustersObservation) DeepCopyInto(out *ClustersObservation) {
	*out = *in
	if in.ClusterUID != nil {
		in, out := &in.ClusterUID, &out.ClusterUID
		*out = new(string)
		**out = **in
	}
	if in.HostDNS != nil {
		in, out := &in.HostDNS, &out.HostDNS
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClustersObservation.
func (in *ClustersObservation) DeepCopy() *ClustersObservation {
	if in == nil {
		return nil
	}
	out := new(ClustersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClustersParameters) DeepCopyInto(out *ClustersParameters) {
	*out = *in
	if in.ClusterUID != nil {
		in, out := &in.ClusterUID, &out.ClusterUID
		*out = new(string)
		**out = **in
	}
	if in.HostDNS != nil {
		in, out := &in.HostDNS, &out.HostDNS
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClustersParameters.
func (in *ClustersParameters) DeepCopy() *ClustersParameters {
	if in == nil {
		return nil
	}
	out := new(ClustersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigInitParameters) DeepCopyInto(out *ConfigInitParameters) {
	*out = *in
	if in.CPUMillicore != nil {
		in, out := &in.CPUMillicore, &out.CPUMillicore
		*out = new(float64)
		**out = **in
	}
	if in.HostEndpointType != nil {
		in, out := &in.HostEndpointType, &out.HostEndpointType
		*out = new(string)
		**out = **in
	}
	if in.K8SDistribution != nil {
		in, out := &in.K8SDistribution, &out.K8SDistribution
		*out = new(string)
		**out = **in
	}
	if in.MemoryInMb != nil {
		in, out := &in.MemoryInMb, &out.MemoryInMb
		*out = new(float64)
		**out = **in
	}
	if in.OversubscriptionPercent != nil {
		in, out := &in.OversubscriptionPercent, &out.OversubscriptionPercent
		*out = new(float64)
		**out = **in
	}
	if in.StorageInGb != nil {
		in, out := &in.StorageInGb, &out.StorageInGb
		*out = new(float64)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigInitParameters.
func (in *ConfigInitParameters) DeepCopy() *ConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigObservation) DeepCopyInto(out *ConfigObservation) {
	*out = *in
	if in.CPUMillicore != nil {
		in, out := &in.CPUMillicore, &out.CPUMillicore
		*out = new(float64)
		**out = **in
	}
	if in.HostEndpointType != nil {
		in, out := &in.HostEndpointType, &out.HostEndpointType
		*out = new(string)
		**out = **in
	}
	if in.K8SDistribution != nil {
		in, out := &in.K8SDistribution, &out.K8SDistribution
		*out = new(string)
		**out = **in
	}
	if in.MemoryInMb != nil {
		in, out := &in.MemoryInMb, &out.MemoryInMb
		*out = new(float64)
		**out = **in
	}
	if in.OversubscriptionPercent != nil {
		in, out := &in.OversubscriptionPercent, &out.OversubscriptionPercent
		*out = new(float64)
		**out = **in
	}
	if in.StorageInGb != nil {
		in, out := &in.StorageInGb, &out.StorageInGb
		*out = new(float64)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigObservation.
func (in *ConfigObservation) DeepCopy() *ConfigObservation {
	if in == nil {
		return nil
	}
	out := new(ConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigParameters) DeepCopyInto(out *ConfigParameters) {
	*out = *in
	if in.CPUMillicore != nil {
		in, out := &in.CPUMillicore, &out.CPUMillicore
		*out = new(float64)
		**out = **in
	}
	if in.HostEndpointType != nil {
		in, out := &in.HostEndpointType, &out.HostEndpointType
		*out = new(string)
		**out = **in
	}
	if in.K8SDistribution != nil {
		in, out := &in.K8SDistribution, &out.K8SDistribution
		*out = new(string)
		**out = **in
	}
	if in.MemoryInMb != nil {
		in, out := &in.MemoryInMb, &out.MemoryInMb
		*out = new(float64)
		**out = **in
	}
	if in.OversubscriptionPercent != nil {
		in, out := &in.OversubscriptionPercent, &out.OversubscriptionPercent
		*out = new(float64)
		**out = **in
	}
	if in.StorageInGb != nil {
		in, out := &in.StorageInGb, &out.StorageInGb
		*out = new(float64)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigParameters.
func (in *ConfigParameters) DeepCopy() *ConfigParameters {
	if in == nil {
		return nil
	}
	out := new(ConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ControlPlaneSubnetInitParameters) DeepCopyInto(out *ControlPlaneSubnetInitParameters) {
	*out = *in
	if in.CidrBlock != nil {
		in, out := &in.CidrBlock, &out.CidrBlock
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroupName != nil {
		in, out := &in.SecurityGroupName, &out.SecurityGroupName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ControlPlaneSubnetInitParameters.
func (in *ControlPlaneSubnetInitParameters) DeepCopy() *ControlPlaneSubnetInitParameters {
	if in == nil {
		return nil
	}
	out := new(ControlPlaneSubnetInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ControlPlaneSubnetObservation) DeepCopyInto(out *ControlPlaneSubnetObservation) {
	*out = *in
	if in.CidrBlock != nil {
		in, out := &in.CidrBlock, &out.CidrBlock
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroupName != nil {
		in, out := &in.SecurityGroupName, &out.SecurityGroupName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ControlPlaneSubnetObservation.
func (in *ControlPlaneSubnetObservation) DeepCopy() *ControlPlaneSubnetObservation {
	if in == nil {
		return nil
	}
	out := new(ControlPlaneSubnetObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ControlPlaneSubnetParameters) DeepCopyInto(out *ControlPlaneSubnetParameters) {
	*out = *in
	if in.CidrBlock != nil {
		in, out := &in.CidrBlock, &out.CidrBlock
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroupName != nil {
		in, out := &in.SecurityGroupName, &out.SecurityGroupName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ControlPlaneSubnetParameters.
func (in *ControlPlaneSubnetParameters) DeepCopy() *ControlPlaneSubnetParameters {
	if in == nil {
		return nil
	}
	out := new(ControlPlaneSubnetParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomCloud) DeepCopyInto(out *CustomCloud) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomCloud.
func (in *CustomCloud) DeepCopy() *CustomCloud {
	if in == nil {
		return nil
	}
	out := new(CustomCloud)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CustomCloud) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomCloudBackupPolicyInitParameters) DeepCopyInto(out *CustomCloudBackupPolicyInitParameters) {
	*out = *in
	if in.BackupLocationID != nil {
		in, out := &in.BackupLocationID, &out.BackupLocationID
		*out = new(string)
		**out = **in
	}
	if in.ClusterUids != nil {
		in, out := &in.ClusterUids, &out.ClusterUids
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExpiryInHour != nil {
		in, out := &in.ExpiryInHour, &out.ExpiryInHour
		*out = new(float64)
		**out = **in
	}
	if in.IncludeAllClusters != nil {
		in, out := &in.IncludeAllClusters, &out.IncludeAllClusters
		*out = new(bool)
		**out = **in
	}
	if in.IncludeClusterResources != nil {
		in, out := &in.IncludeClusterResources, &out.IncludeClusterResources
		*out = new(bool)
		**out = **in
	}
	if in.IncludeDisks != nil {
		in, out := &in.IncludeDisks, &out.IncludeDisks
		*out = new(bool)
		**out = **in
	}
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomCloudBackupPolicyInitParameters.
func (in *CustomCloudBackupPolicyInitParameters) DeepCopy() *CustomCloudBackupPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(CustomCloudBackupPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomCloudBackupPolicyObservation) DeepCopyInto(out *CustomCloudBackupPolicyObservation) {
	*out = *in
	if in.BackupLocationID != nil {
		in, out := &in.BackupLocationID, &out.BackupLocationID
		*out = new(string)
		**out = **in
	}
	if in.ClusterUids != nil {
		in, out := &in.ClusterUids, &out.ClusterUids
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExpiryInHour != nil {
		in, out := &in.ExpiryInHour, &out.ExpiryInHour
		*out = new(float64)
		**out = **in
	}
	if in.IncludeAllClusters != nil {
		in, out := &in.IncludeAllClusters, &out.IncludeAllClusters
		*out = new(bool)
		**out = **in
	}
	if in.IncludeClusterResources != nil {
		in, out := &in.IncludeClusterResources, &out.IncludeClusterResources
		*out = new(bool)
		**out = **in
	}
	if in.IncludeDisks != nil {
		in, out := &in.IncludeDisks, &out.IncludeDisks
		*out = new(bool)
		**out = **in
	}
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomCloudBackupPolicyObservation.
func (in *CustomCloudBackupPolicyObservation) DeepCopy() *CustomCloudBackupPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(CustomCloudBackupPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomCloudBackupPolicyParameters) DeepCopyInto(out *CustomCloudBackupPolicyParameters) {
	*out = *in
	if in.BackupLocationID != nil {
		in, out := &in.BackupLocationID, &out.BackupLocationID
		*out = new(string)
		**out = **in
	}
	if in.ClusterUids != nil {
		in, out := &in.ClusterUids, &out.ClusterUids
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExpiryInHour != nil {
		in, out := &in.ExpiryInHour, &out.ExpiryInHour
		*out = new(float64)
		**out = **in
	}
	if in.IncludeAllClusters != nil {
		in, out := &in.IncludeAllClusters, &out.IncludeAllClusters
		*out = new(bool)
		**out = **in
	}
	if in.IncludeClusterResources != nil {
		in, out := &in.IncludeClusterResources, &out.IncludeClusterResources
		*out = new(bool)
		**out = **in
	}
	if in.IncludeDisks != nil {
		in, out := &in.IncludeDisks, &out.IncludeDisks
		*out = new(bool)
		**out = **in
	}
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomCloudBackupPolicyParameters.
func (in *CustomCloudBackupPolicyParameters) DeepCopy() *CustomCloudBackupPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(CustomCloudBackupPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomCloudCloudConfigInitParameters) DeepCopyInto(out *CustomCloudCloudConfigInitParameters) {
	*out = *in
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomCloudCloudConfigInitParameters.
func (in *CustomCloudCloudConfigInitParameters) DeepCopy() *CustomCloudCloudConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(CustomCloudCloudConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomCloudCloudConfigObservation) DeepCopyInto(out *CustomCloudCloudConfigObservation) {
	*out = *in
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomCloudCloudConfigObservation.
func (in *CustomCloudCloudConfigObservation) DeepCopy() *CustomCloudCloudConfigObservation {
	if in == nil {
		return nil
	}
	out := new(CustomCloudCloudConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomCloudCloudConfigParameters) DeepCopyInto(out *CustomCloudCloudConfigParameters) {
	*out = *in
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomCloudCloudConfigParameters.
func (in *CustomCloudCloudConfigParameters) DeepCopy() *CustomCloudCloudConfigParameters {
	if in == nil {
		return nil
	}
	out := new(CustomCloudCloudConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomCloudClusterProfileInitParameters) DeepCopyInto(out *CustomCloudClusterProfileInitParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Pack != nil {
		in, out := &in.Pack, &out.Pack
		*out = make([]CustomCloudClusterProfilePackInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomCloudClusterProfileInitParameters.
func (in *CustomCloudClusterProfileInitParameters) DeepCopy() *CustomCloudClusterProfileInitParameters {
	if in == nil {
		return nil
	}
	out := new(CustomCloudClusterProfileInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomCloudClusterProfileObservation) DeepCopyInto(out *CustomCloudClusterProfileObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Pack != nil {
		in, out := &in.Pack, &out.Pack
		*out = make([]CustomCloudClusterProfilePackObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomCloudClusterProfileObservation.
func (in *CustomCloudClusterProfileObservation) DeepCopy() *CustomCloudClusterProfileObservation {
	if in == nil {
		return nil
	}
	out := new(CustomCloudClusterProfileObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomCloudClusterProfilePackInitParameters) DeepCopyInto(out *CustomCloudClusterProfilePackInitParameters) {
	*out = *in
	if in.Manifest != nil {
		in, out := &in.Manifest, &out.Manifest
		*out = make([]CustomCloudClusterProfilePackManifestInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RegistryUID != nil {
		in, out := &in.RegistryUID, &out.RegistryUID
		*out = new(string)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomCloudClusterProfilePackInitParameters.
func (in *CustomCloudClusterProfilePackInitParameters) DeepCopy() *CustomCloudClusterProfilePackInitParameters {
	if in == nil {
		return nil
	}
	out := new(CustomCloudClusterProfilePackInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomCloudClusterProfilePackManifestInitParameters) DeepCopyInto(out *CustomCloudClusterProfilePackManifestInitParameters) {
	*out = *in
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomCloudClusterProfilePackManifestInitParameters.
func (in *CustomCloudClusterProfilePackManifestInitParameters) DeepCopy() *CustomCloudClusterProfilePackManifestInitParameters {
	if in == nil {
		return nil
	}
	out := new(CustomCloudClusterProfilePackManifestInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomCloudClusterProfilePackManifestObservation) DeepCopyInto(out *CustomCloudClusterProfilePackManifestObservation) {
	*out = *in
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomCloudClusterProfilePackManifestObservation.
func (in *CustomCloudClusterProfilePackManifestObservation) DeepCopy() *CustomCloudClusterProfilePackManifestObservation {
	if in == nil {
		return nil
	}
	out := new(CustomCloudClusterProfilePackManifestObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomCloudClusterProfilePackManifestParameters) DeepCopyInto(out *CustomCloudClusterProfilePackManifestParameters) {
	*out = *in
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomCloudClusterProfilePackManifestParameters.
func (in *CustomCloudClusterProfilePackManifestParameters) DeepCopy() *CustomCloudClusterProfilePackManifestParameters {
	if in == nil {
		return nil
	}
	out := new(CustomCloudClusterProfilePackManifestParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomCloudClusterProfilePackObservation) DeepCopyInto(out *CustomCloudClusterProfilePackObservation) {
	*out = *in
	if in.Manifest != nil {
		in, out := &in.Manifest, &out.Manifest
		*out = make([]CustomCloudClusterProfilePackManifestObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RegistryUID != nil {
		in, out := &in.RegistryUID, &out.RegistryUID
		*out = new(string)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomCloudClusterProfilePackObservation.
func (in *CustomCloudClusterProfilePackObservation) DeepCopy() *CustomCloudClusterProfilePackObservation {
	if in == nil {
		return nil
	}
	out := new(CustomCloudClusterProfilePackObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomCloudClusterProfilePackParameters) DeepCopyInto(out *CustomCloudClusterProfilePackParameters) {
	*out = *in
	if in.Manifest != nil {
		in, out := &in.Manifest, &out.Manifest
		*out = make([]CustomCloudClusterProfilePackManifestParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RegistryUID != nil {
		in, out := &in.RegistryUID, &out.RegistryUID
		*out = new(string)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomCloudClusterProfilePackParameters.
func (in *CustomCloudClusterProfilePackParameters) DeepCopy() *CustomCloudClusterProfilePackParameters {
	if in == nil {
		return nil
	}
	out := new(CustomCloudClusterProfilePackParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomCloudClusterProfileParameters) DeepCopyInto(out *CustomCloudClusterProfileParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Pack != nil {
		in, out := &in.Pack, &out.Pack
		*out = make([]CustomCloudClusterProfilePackParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomCloudClusterProfileParameters.
func (in *CustomCloudClusterProfileParameters) DeepCopy() *CustomCloudClusterProfileParameters {
	if in == nil {
		return nil
	}
	out := new(CustomCloudClusterProfileParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomCloudClusterRbacBindingInitParameters) DeepCopyInto(out *CustomCloudClusterRbacBindingInitParameters) {
	*out = *in
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Subjects != nil {
		in, out := &in.Subjects, &out.Subjects
		*out = make([]CustomCloudClusterRbacBindingSubjectsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomCloudClusterRbacBindingInitParameters.
func (in *CustomCloudClusterRbacBindingInitParameters) DeepCopy() *CustomCloudClusterRbacBindingInitParameters {
	if in == nil {
		return nil
	}
	out := new(CustomCloudClusterRbacBindingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomCloudClusterRbacBindingObservation) DeepCopyInto(out *CustomCloudClusterRbacBindingObservation) {
	*out = *in
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Subjects != nil {
		in, out := &in.Subjects, &out.Subjects
		*out = make([]CustomCloudClusterRbacBindingSubjectsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomCloudClusterRbacBindingObservation.
func (in *CustomCloudClusterRbacBindingObservation) DeepCopy() *CustomCloudClusterRbacBindingObservation {
	if in == nil {
		return nil
	}
	out := new(CustomCloudClusterRbacBindingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomCloudClusterRbacBindingParameters) DeepCopyInto(out *CustomCloudClusterRbacBindingParameters) {
	*out = *in
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Subjects != nil {
		in, out := &in.Subjects, &out.Subjects
		*out = make([]CustomCloudClusterRbacBindingSubjectsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomCloudClusterRbacBindingParameters.
func (in *CustomCloudClusterRbacBindingParameters) DeepCopy() *CustomCloudClusterRbacBindingParameters {
	if in == nil {
		return nil
	}
	out := new(CustomCloudClusterRbacBindingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomCloudClusterRbacBindingSubjectsInitParameters) DeepCopyInto(out *CustomCloudClusterRbacBindingSubjectsInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomCloudClusterRbacBindingSubjectsInitParameters.
func (in *CustomCloudClusterRbacBindingSubjectsInitParameters) DeepCopy() *CustomCloudClusterRbacBindingSubjectsInitParameters {
	if in == nil {
		return nil
	}
	out := new(CustomCloudClusterRbacBindingSubjectsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomCloudClusterRbacBindingSubjectsObservation) DeepCopyInto(out *CustomCloudClusterRbacBindingSubjectsObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomCloudClusterRbacBindingSubjectsObservation.
func (in *CustomCloudClusterRbacBindingSubjectsObservation) DeepCopy() *CustomCloudClusterRbacBindingSubjectsObservation {
	if in == nil {
		return nil
	}
	out := new(CustomCloudClusterRbacBindingSubjectsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomCloudClusterRbacBindingSubjectsParameters) DeepCopyInto(out *CustomCloudClusterRbacBindingSubjectsParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomCloudClusterRbacBindingSubjectsParameters.
func (in *CustomCloudClusterRbacBindingSubjectsParameters) DeepCopy() *CustomCloudClusterRbacBindingSubjectsParameters {
	if in == nil {
		return nil
	}
	out := new(CustomCloudClusterRbacBindingSubjectsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomCloudInitParameters) DeepCopyInto(out *CustomCloudInitParameters) {
	*out = *in
	if in.ApplySetting != nil {
		in, out := &in.ApplySetting, &out.ApplySetting
		*out = new(string)
		**out = **in
	}
	if in.BackupPolicy != nil {
		in, out := &in.BackupPolicy, &out.BackupPolicy
		*out = make([]CustomCloudBackupPolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloud != nil {
		in, out := &in.Cloud, &out.Cloud
		*out = new(string)
		**out = **in
	}
	if in.CloudAccountID != nil {
		in, out := &in.CloudAccountID, &out.CloudAccountID
		*out = new(string)
		**out = **in
	}
	if in.CloudConfig != nil {
		in, out := &in.CloudConfig, &out.CloudConfig
		*out = make([]CustomCloudCloudConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterProfile != nil {
		in, out := &in.ClusterProfile, &out.ClusterProfile
		*out = make([]CustomCloudClusterProfileInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterRbacBinding != nil {
		in, out := &in.ClusterRbacBinding, &out.ClusterRbacBinding
		*out = make([]CustomCloudClusterRbacBindingInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Context != nil {
		in, out := &in.Context, &out.Context
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ForceDelete != nil {
		in, out := &in.ForceDelete, &out.ForceDelete
		*out = new(bool)
		**out = **in
	}
	if in.ForceDeleteDelay != nil {
		in, out := &in.ForceDeleteDelay, &out.ForceDeleteDelay
		*out = new(float64)
		**out = **in
	}
	if in.LocationConfig != nil {
		in, out := &in.LocationConfig, &out.LocationConfig
		*out = make([]CustomCloudLocationConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MachinePool != nil {
		in, out := &in.MachinePool, &out.MachinePool
		*out = make([]CustomCloudMachinePoolInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]CustomCloudNamespacesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OsPatchAfter != nil {
		in, out := &in.OsPatchAfter, &out.OsPatchAfter
		*out = new(string)
		**out = **in
	}
	if in.OsPatchOnBoot != nil {
		in, out := &in.OsPatchOnBoot, &out.OsPatchOnBoot
		*out = new(bool)
		**out = **in
	}
	if in.OsPatchSchedule != nil {
		in, out := &in.OsPatchSchedule, &out.OsPatchSchedule
		*out = new(string)
		**out = **in
	}
	if in.PauseAgentUpgrades != nil {
		in, out := &in.PauseAgentUpgrades, &out.PauseAgentUpgrades
		*out = new(string)
		**out = **in
	}
	if in.ScanPolicy != nil {
		in, out := &in.ScanPolicy, &out.ScanPolicy
		*out = make([]CustomCloudScanPolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SkipCompletion != nil {
		in, out := &in.SkipCompletion, &out.SkipCompletion
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomCloudInitParameters.
func (in *CustomCloudInitParameters) DeepCopy() *CustomCloudInitParameters {
	if in == nil {
		return nil
	}
	out := new(CustomCloudInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomCloudList) DeepCopyInto(out *CustomCloudList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]CustomCloud, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomCloudList.
func (in *CustomCloudList) DeepCopy() *CustomCloudList {
	if in == nil {
		return nil
	}
	out := new(CustomCloudList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CustomCloudList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomCloudLocationConfigInitParameters) DeepCopyInto(out *CustomCloudLocationConfigInitParameters) {
	*out = *in
	if in.CountryCode != nil {
		in, out := &in.CountryCode, &out.CountryCode
		*out = new(string)
		**out = **in
	}
	if in.CountryName != nil {
		in, out := &in.CountryName, &out.CountryName
		*out = new(string)
		**out = **in
	}
	if in.Latitude != nil {
		in, out := &in.Latitude, &out.Latitude
		*out = new(float64)
		**out = **in
	}
	if in.Longitude != nil {
		in, out := &in.Longitude, &out.Longitude
		*out = new(float64)
		**out = **in
	}
	if in.RegionCode != nil {
		in, out := &in.RegionCode, &out.RegionCode
		*out = new(string)
		**out = **in
	}
	if in.RegionName != nil {
		in, out := &in.RegionName, &out.RegionName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomCloudLocationConfigInitParameters.
func (in *CustomCloudLocationConfigInitParameters) DeepCopy() *CustomCloudLocationConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(CustomCloudLocationConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomCloudLocationConfigObservation) DeepCopyInto(out *CustomCloudLocationConfigObservation) {
	*out = *in
	if in.CountryCode != nil {
		in, out := &in.CountryCode, &out.CountryCode
		*out = new(string)
		**out = **in
	}
	if in.CountryName != nil {
		in, out := &in.CountryName, &out.CountryName
		*out = new(string)
		**out = **in
	}
	if in.Latitude != nil {
		in, out := &in.Latitude, &out.Latitude
		*out = new(float64)
		**out = **in
	}
	if in.Longitude != nil {
		in, out := &in.Longitude, &out.Longitude
		*out = new(float64)
		**out = **in
	}
	if in.RegionCode != nil {
		in, out := &in.RegionCode, &out.RegionCode
		*out = new(string)
		**out = **in
	}
	if in.RegionName != nil {
		in, out := &in.RegionName, &out.RegionName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomCloudLocationConfigObservation.
func (in *CustomCloudLocationConfigObservation) DeepCopy() *CustomCloudLocationConfigObservation {
	if in == nil {
		return nil
	}
	out := new(CustomCloudLocationConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomCloudLocationConfigParameters) DeepCopyInto(out *CustomCloudLocationConfigParameters) {
	*out = *in
	if in.CountryCode != nil {
		in, out := &in.CountryCode, &out.CountryCode
		*out = new(string)
		**out = **in
	}
	if in.CountryName != nil {
		in, out := &in.CountryName, &out.CountryName
		*out = new(string)
		**out = **in
	}
	if in.Latitude != nil {
		in, out := &in.Latitude, &out.Latitude
		*out = new(float64)
		**out = **in
	}
	if in.Longitude != nil {
		in, out := &in.Longitude, &out.Longitude
		*out = new(float64)
		**out = **in
	}
	if in.RegionCode != nil {
		in, out := &in.RegionCode, &out.RegionCode
		*out = new(string)
		**out = **in
	}
	if in.RegionName != nil {
		in, out := &in.RegionName, &out.RegionName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomCloudLocationConfigParameters.
func (in *CustomCloudLocationConfigParameters) DeepCopy() *CustomCloudLocationConfigParameters {
	if in == nil {
		return nil
	}
	out := new(CustomCloudLocationConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomCloudMachinePoolInitParameters) DeepCopyInto(out *CustomCloudMachinePoolInitParameters) {
	*out = *in
	if in.ControlPlane != nil {
		in, out := &in.ControlPlane, &out.ControlPlane
		*out = new(bool)
		**out = **in
	}
	if in.ControlPlaneAsWorker != nil {
		in, out := &in.ControlPlaneAsWorker, &out.ControlPlaneAsWorker
		*out = new(bool)
		**out = **in
	}
	if in.NodePoolConfig != nil {
		in, out := &in.NodePoolConfig, &out.NodePoolConfig
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomCloudMachinePoolInitParameters.
func (in *CustomCloudMachinePoolInitParameters) DeepCopy() *CustomCloudMachinePoolInitParameters {
	if in == nil {
		return nil
	}
	out := new(CustomCloudMachinePoolInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomCloudMachinePoolObservation) DeepCopyInto(out *CustomCloudMachinePoolObservation) {
	*out = *in
	if in.ControlPlane != nil {
		in, out := &in.ControlPlane, &out.ControlPlane
		*out = new(bool)
		**out = **in
	}
	if in.ControlPlaneAsWorker != nil {
		in, out := &in.ControlPlaneAsWorker, &out.ControlPlaneAsWorker
		*out = new(bool)
		**out = **in
	}
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NodePoolConfig != nil {
		in, out := &in.NodePoolConfig, &out.NodePoolConfig
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomCloudMachinePoolObservation.
func (in *CustomCloudMachinePoolObservation) DeepCopy() *CustomCloudMachinePoolObservation {
	if in == nil {
		return nil
	}
	out := new(CustomCloudMachinePoolObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomCloudMachinePoolParameters) DeepCopyInto(out *CustomCloudMachinePoolParameters) {
	*out = *in
	if in.ControlPlane != nil {
		in, out := &in.ControlPlane, &out.ControlPlane
		*out = new(bool)
		**out = **in
	}
	if in.ControlPlaneAsWorker != nil {
		in, out := &in.ControlPlaneAsWorker, &out.ControlPlaneAsWorker
		*out = new(bool)
		**out = **in
	}
	if in.NodePoolConfig != nil {
		in, out := &in.NodePoolConfig, &out.NodePoolConfig
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomCloudMachinePoolParameters.
func (in *CustomCloudMachinePoolParameters) DeepCopy() *CustomCloudMachinePoolParameters {
	if in == nil {
		return nil
	}
	out := new(CustomCloudMachinePoolParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomCloudNamespacesInitParameters) DeepCopyInto(out *CustomCloudNamespacesInitParameters) {
	*out = *in
	if in.ImagesBlacklist != nil {
		in, out := &in.ImagesBlacklist, &out.ImagesBlacklist
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ResourceAllocation != nil {
		in, out := &in.ResourceAllocation, &out.ResourceAllocation
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomCloudNamespacesInitParameters.
func (in *CustomCloudNamespacesInitParameters) DeepCopy() *CustomCloudNamespacesInitParameters {
	if in == nil {
		return nil
	}
	out := new(CustomCloudNamespacesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomCloudNamespacesObservation) DeepCopyInto(out *CustomCloudNamespacesObservation) {
	*out = *in
	if in.ImagesBlacklist != nil {
		in, out := &in.ImagesBlacklist, &out.ImagesBlacklist
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ResourceAllocation != nil {
		in, out := &in.ResourceAllocation, &out.ResourceAllocation
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomCloudNamespacesObservation.
func (in *CustomCloudNamespacesObservation) DeepCopy() *CustomCloudNamespacesObservation {
	if in == nil {
		return nil
	}
	out := new(CustomCloudNamespacesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomCloudNamespacesParameters) DeepCopyInto(out *CustomCloudNamespacesParameters) {
	*out = *in
	if in.ImagesBlacklist != nil {
		in, out := &in.ImagesBlacklist, &out.ImagesBlacklist
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ResourceAllocation != nil {
		in, out := &in.ResourceAllocation, &out.ResourceAllocation
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomCloudNamespacesParameters.
func (in *CustomCloudNamespacesParameters) DeepCopy() *CustomCloudNamespacesParameters {
	if in == nil {
		return nil
	}
	out := new(CustomCloudNamespacesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomCloudObservation) DeepCopyInto(out *CustomCloudObservation) {
	*out = *in
	if in.AdminKubeConfig != nil {
		in, out := &in.AdminKubeConfig, &out.AdminKubeConfig
		*out = new(string)
		**out = **in
	}
	if in.ApplySetting != nil {
		in, out := &in.ApplySetting, &out.ApplySetting
		*out = new(string)
		**out = **in
	}
	if in.BackupPolicy != nil {
		in, out := &in.BackupPolicy, &out.BackupPolicy
		*out = make([]CustomCloudBackupPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloud != nil {
		in, out := &in.Cloud, &out.Cloud
		*out = new(string)
		**out = **in
	}
	if in.CloudAccountID != nil {
		in, out := &in.CloudAccountID, &out.CloudAccountID
		*out = new(string)
		**out = **in
	}
	if in.CloudConfig != nil {
		in, out := &in.CloudConfig, &out.CloudConfig
		*out = make([]CustomCloudCloudConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CloudConfigID != nil {
		in, out := &in.CloudConfigID, &out.CloudConfigID
		*out = new(string)
		**out = **in
	}
	if in.ClusterProfile != nil {
		in, out := &in.ClusterProfile, &out.ClusterProfile
		*out = make([]CustomCloudClusterProfileObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterRbacBinding != nil {
		in, out := &in.ClusterRbacBinding, &out.ClusterRbacBinding
		*out = make([]CustomCloudClusterRbacBindingObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Context != nil {
		in, out := &in.Context, &out.Context
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ForceDelete != nil {
		in, out := &in.ForceDelete, &out.ForceDelete
		*out = new(bool)
		**out = **in
	}
	if in.ForceDeleteDelay != nil {
		in, out := &in.ForceDeleteDelay, &out.ForceDeleteDelay
		*out = new(float64)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Kubeconfig != nil {
		in, out := &in.Kubeconfig, &out.Kubeconfig
		*out = new(string)
		**out = **in
	}
	if in.LocationConfig != nil {
		in, out := &in.LocationConfig, &out.LocationConfig
		*out = make([]CustomCloudLocationConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MachinePool != nil {
		in, out := &in.MachinePool, &out.MachinePool
		*out = make([]CustomCloudMachinePoolObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]CustomCloudNamespacesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OsPatchAfter != nil {
		in, out := &in.OsPatchAfter, &out.OsPatchAfter
		*out = new(string)
		**out = **in
	}
	if in.OsPatchOnBoot != nil {
		in, out := &in.OsPatchOnBoot, &out.OsPatchOnBoot
		*out = new(bool)
		**out = **in
	}
	if in.OsPatchSchedule != nil {
		in, out := &in.OsPatchSchedule, &out.OsPatchSchedule
		*out = new(string)
		**out = **in
	}
	if in.PauseAgentUpgrades != nil {
		in, out := &in.PauseAgentUpgrades, &out.PauseAgentUpgrades
		*out = new(string)
		**out = **in
	}
	if in.ScanPolicy != nil {
		in, out := &in.ScanPolicy, &out.ScanPolicy
		*out = make([]CustomCloudScanPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SkipCompletion != nil {
		in, out := &in.SkipCompletion, &out.SkipCompletion
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomCloudObservation.
func (in *CustomCloudObservation) DeepCopy() *CustomCloudObservation {
	if in == nil {
		return nil
	}
	out := new(CustomCloudObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomCloudParameters) DeepCopyInto(out *CustomCloudParameters) {
	*out = *in
	if in.ApplySetting != nil {
		in, out := &in.ApplySetting, &out.ApplySetting
		*out = new(string)
		**out = **in
	}
	if in.BackupPolicy != nil {
		in, out := &in.BackupPolicy, &out.BackupPolicy
		*out = make([]CustomCloudBackupPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cloud != nil {
		in, out := &in.Cloud, &out.Cloud
		*out = new(string)
		**out = **in
	}
	if in.CloudAccountID != nil {
		in, out := &in.CloudAccountID, &out.CloudAccountID
		*out = new(string)
		**out = **in
	}
	if in.CloudConfig != nil {
		in, out := &in.CloudConfig, &out.CloudConfig
		*out = make([]CustomCloudCloudConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterProfile != nil {
		in, out := &in.ClusterProfile, &out.ClusterProfile
		*out = make([]CustomCloudClusterProfileParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterRbacBinding != nil {
		in, out := &in.ClusterRbacBinding, &out.ClusterRbacBinding
		*out = make([]CustomCloudClusterRbacBindingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Context != nil {
		in, out := &in.Context, &out.Context
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ForceDelete != nil {
		in, out := &in.ForceDelete, &out.ForceDelete
		*out = new(bool)
		**out = **in
	}
	if in.ForceDeleteDelay != nil {
		in, out := &in.ForceDeleteDelay, &out.ForceDeleteDelay
		*out = new(float64)
		**out = **in
	}
	if in.LocationConfig != nil {
		in, out := &in.LocationConfig, &out.LocationConfig
		*out = make([]CustomCloudLocationConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MachinePool != nil {
		in, out := &in.MachinePool, &out.MachinePool
		*out = make([]CustomCloudMachinePoolParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]CustomCloudNamespacesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OsPatchAfter != nil {
		in, out := &in.OsPatchAfter, &out.OsPatchAfter
		*out = new(string)
		**out = **in
	}
	if in.OsPatchOnBoot != nil {
		in, out := &in.OsPatchOnBoot, &out.OsPatchOnBoot
		*out = new(bool)
		**out = **in
	}
	if in.OsPatchSchedule != nil {
		in, out := &in.OsPatchSchedule, &out.OsPatchSchedule
		*out = new(string)
		**out = **in
	}
	if in.PauseAgentUpgrades != nil {
		in, out := &in.PauseAgentUpgrades, &out.PauseAgentUpgrades
		*out = new(string)
		**out = **in
	}
	if in.ScanPolicy != nil {
		in, out := &in.ScanPolicy, &out.ScanPolicy
		*out = make([]CustomCloudScanPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SkipCompletion != nil {
		in, out := &in.SkipCompletion, &out.SkipCompletion
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomCloudParameters.
func (in *CustomCloudParameters) DeepCopy() *CustomCloudParameters {
	if in == nil {
		return nil
	}
	out := new(CustomCloudParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomCloudScanPolicyInitParameters) DeepCopyInto(out *CustomCloudScanPolicyInitParameters) {
	*out = *in
	if in.ConfigurationScanSchedule != nil {
		in, out := &in.ConfigurationScanSchedule, &out.ConfigurationScanSchedule
		*out = new(string)
		**out = **in
	}
	if in.ConformanceScanSchedule != nil {
		in, out := &in.ConformanceScanSchedule, &out.ConformanceScanSchedule
		*out = new(string)
		**out = **in
	}
	if in.PenetrationScanSchedule != nil {
		in, out := &in.PenetrationScanSchedule, &out.PenetrationScanSchedule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomCloudScanPolicyInitParameters.
func (in *CustomCloudScanPolicyInitParameters) DeepCopy() *CustomCloudScanPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(CustomCloudScanPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomCloudScanPolicyObservation) DeepCopyInto(out *CustomCloudScanPolicyObservation) {
	*out = *in
	if in.ConfigurationScanSchedule != nil {
		in, out := &in.ConfigurationScanSchedule, &out.ConfigurationScanSchedule
		*out = new(string)
		**out = **in
	}
	if in.ConformanceScanSchedule != nil {
		in, out := &in.ConformanceScanSchedule, &out.ConformanceScanSchedule
		*out = new(string)
		**out = **in
	}
	if in.PenetrationScanSchedule != nil {
		in, out := &in.PenetrationScanSchedule, &out.PenetrationScanSchedule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomCloudScanPolicyObservation.
func (in *CustomCloudScanPolicyObservation) DeepCopy() *CustomCloudScanPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(CustomCloudScanPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomCloudScanPolicyParameters) DeepCopyInto(out *CustomCloudScanPolicyParameters) {
	*out = *in
	if in.ConfigurationScanSchedule != nil {
		in, out := &in.ConfigurationScanSchedule, &out.ConfigurationScanSchedule
		*out = new(string)
		**out = **in
	}
	if in.ConformanceScanSchedule != nil {
		in, out := &in.ConformanceScanSchedule, &out.ConformanceScanSchedule
		*out = new(string)
		**out = **in
	}
	if in.PenetrationScanSchedule != nil {
		in, out := &in.PenetrationScanSchedule, &out.PenetrationScanSchedule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomCloudScanPolicyParameters.
func (in *CustomCloudScanPolicyParameters) DeepCopy() *CustomCloudScanPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(CustomCloudScanPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomCloudSpec) DeepCopyInto(out *CustomCloudSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomCloudSpec.
func (in *CustomCloudSpec) DeepCopy() *CustomCloudSpec {
	if in == nil {
		return nil
	}
	out := new(CustomCloudSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomCloudStatus) DeepCopyInto(out *CustomCloudStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomCloudStatus.
func (in *CustomCloudStatus) DeepCopy() *CustomCloudStatus {
	if in == nil {
		return nil
	}
	out := new(CustomCloudStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiskInitParameters) DeepCopyInto(out *DiskInitParameters) {
	*out = *in
	if in.SizeGb != nil {
		in, out := &in.SizeGb, &out.SizeGb
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiskInitParameters.
func (in *DiskInitParameters) DeepCopy() *DiskInitParameters {
	if in == nil {
		return nil
	}
	out := new(DiskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiskObservation) DeepCopyInto(out *DiskObservation) {
	*out = *in
	if in.SizeGb != nil {
		in, out := &in.SizeGb, &out.SizeGb
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiskObservation.
func (in *DiskObservation) DeepCopy() *DiskObservation {
	if in == nil {
		return nil
	}
	out := new(DiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiskParameters) DeepCopyInto(out *DiskParameters) {
	*out = *in
	if in.SizeGb != nil {
		in, out := &in.SizeGb, &out.SizeGb
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiskParameters.
func (in *DiskParameters) DeepCopy() *DiskParameters {
	if in == nil {
		return nil
	}
	out := new(DiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeHostInitParameters) DeepCopyInto(out *EdgeHostInitParameters) {
	*out = *in
	if in.HostName != nil {
		in, out := &in.HostName, &out.HostName
		*out = new(string)
		**out = **in
	}
	if in.HostUID != nil {
		in, out := &in.HostUID, &out.HostUID
		*out = new(string)
		**out = **in
	}
	if in.StaticIP != nil {
		in, out := &in.StaticIP, &out.StaticIP
		*out = new(string)
		**out = **in
	}
	if in.TwoNodeRole != nil {
		in, out := &in.TwoNodeRole, &out.TwoNodeRole
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeHostInitParameters.
func (in *EdgeHostInitParameters) DeepCopy() *EdgeHostInitParameters {
	if in == nil {
		return nil
	}
	out := new(EdgeHostInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeHostObservation) DeepCopyInto(out *EdgeHostObservation) {
	*out = *in
	if in.HostName != nil {
		in, out := &in.HostName, &out.HostName
		*out = new(string)
		**out = **in
	}
	if in.HostUID != nil {
		in, out := &in.HostUID, &out.HostUID
		*out = new(string)
		**out = **in
	}
	if in.StaticIP != nil {
		in, out := &in.StaticIP, &out.StaticIP
		*out = new(string)
		**out = **in
	}
	if in.TwoNodeRole != nil {
		in, out := &in.TwoNodeRole, &out.TwoNodeRole
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeHostObservation.
func (in *EdgeHostObservation) DeepCopy() *EdgeHostObservation {
	if in == nil {
		return nil
	}
	out := new(EdgeHostObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeHostParameters) DeepCopyInto(out *EdgeHostParameters) {
	*out = *in
	if in.HostName != nil {
		in, out := &in.HostName, &out.HostName
		*out = new(string)
		**out = **in
	}
	if in.HostUID != nil {
		in, out := &in.HostUID, &out.HostUID
		*out = new(string)
		**out = **in
	}
	if in.StaticIP != nil {
		in, out := &in.StaticIP, &out.StaticIP
		*out = new(string)
		**out = **in
	}
	if in.TwoNodeRole != nil {
		in, out := &in.TwoNodeRole, &out.TwoNodeRole
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeHostParameters.
func (in *EdgeHostParameters) DeepCopy() *EdgeHostParameters {
	if in == nil {
		return nil
	}
	out := new(EdgeHostParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeNative) DeepCopyInto(out *EdgeNative) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeNative.
func (in *EdgeNative) DeepCopy() *EdgeNative {
	if in == nil {
		return nil
	}
	out := new(EdgeNative)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *EdgeNative) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeNativeBackupPolicyInitParameters) DeepCopyInto(out *EdgeNativeBackupPolicyInitParameters) {
	*out = *in
	if in.BackupLocationID != nil {
		in, out := &in.BackupLocationID, &out.BackupLocationID
		*out = new(string)
		**out = **in
	}
	if in.ClusterUids != nil {
		in, out := &in.ClusterUids, &out.ClusterUids
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExpiryInHour != nil {
		in, out := &in.ExpiryInHour, &out.ExpiryInHour
		*out = new(float64)
		**out = **in
	}
	if in.IncludeAllClusters != nil {
		in, out := &in.IncludeAllClusters, &out.IncludeAllClusters
		*out = new(bool)
		**out = **in
	}
	if in.IncludeClusterResources != nil {
		in, out := &in.IncludeClusterResources, &out.IncludeClusterResources
		*out = new(bool)
		**out = **in
	}
	if in.IncludeDisks != nil {
		in, out := &in.IncludeDisks, &out.IncludeDisks
		*out = new(bool)
		**out = **in
	}
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeNativeBackupPolicyInitParameters.
func (in *EdgeNativeBackupPolicyInitParameters) DeepCopy() *EdgeNativeBackupPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(EdgeNativeBackupPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeNativeBackupPolicyObservation) DeepCopyInto(out *EdgeNativeBackupPolicyObservation) {
	*out = *in
	if in.BackupLocationID != nil {
		in, out := &in.BackupLocationID, &out.BackupLocationID
		*out = new(string)
		**out = **in
	}
	if in.ClusterUids != nil {
		in, out := &in.ClusterUids, &out.ClusterUids
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExpiryInHour != nil {
		in, out := &in.ExpiryInHour, &out.ExpiryInHour
		*out = new(float64)
		**out = **in
	}
	if in.IncludeAllClusters != nil {
		in, out := &in.IncludeAllClusters, &out.IncludeAllClusters
		*out = new(bool)
		**out = **in
	}
	if in.IncludeClusterResources != nil {
		in, out := &in.IncludeClusterResources, &out.IncludeClusterResources
		*out = new(bool)
		**out = **in
	}
	if in.IncludeDisks != nil {
		in, out := &in.IncludeDisks, &out.IncludeDisks
		*out = new(bool)
		**out = **in
	}
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeNativeBackupPolicyObservation.
func (in *EdgeNativeBackupPolicyObservation) DeepCopy() *EdgeNativeBackupPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(EdgeNativeBackupPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeNativeBackupPolicyParameters) DeepCopyInto(out *EdgeNativeBackupPolicyParameters) {
	*out = *in
	if in.BackupLocationID != nil {
		in, out := &in.BackupLocationID, &out.BackupLocationID
		*out = new(string)
		**out = **in
	}
	if in.ClusterUids != nil {
		in, out := &in.ClusterUids, &out.ClusterUids
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExpiryInHour != nil {
		in, out := &in.ExpiryInHour, &out.ExpiryInHour
		*out = new(float64)
		**out = **in
	}
	if in.IncludeAllClusters != nil {
		in, out := &in.IncludeAllClusters, &out.IncludeAllClusters
		*out = new(bool)
		**out = **in
	}
	if in.IncludeClusterResources != nil {
		in, out := &in.IncludeClusterResources, &out.IncludeClusterResources
		*out = new(bool)
		**out = **in
	}
	if in.IncludeDisks != nil {
		in, out := &in.IncludeDisks, &out.IncludeDisks
		*out = new(bool)
		**out = **in
	}
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeNativeBackupPolicyParameters.
func (in *EdgeNativeBackupPolicyParameters) DeepCopy() *EdgeNativeBackupPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(EdgeNativeBackupPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeNativeCloudConfigInitParameters) DeepCopyInto(out *EdgeNativeCloudConfigInitParameters) {
	*out = *in
	if in.NtpServers != nil {
		in, out := &in.NtpServers, &out.NtpServers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OverlayCidrRange != nil {
		in, out := &in.OverlayCidrRange, &out.OverlayCidrRange
		*out = new(string)
		**out = **in
	}
	if in.SSHKeys != nil {
		in, out := &in.SSHKeys, &out.SSHKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Vip != nil {
		in, out := &in.Vip, &out.Vip
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeNativeCloudConfigInitParameters.
func (in *EdgeNativeCloudConfigInitParameters) DeepCopy() *EdgeNativeCloudConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(EdgeNativeCloudConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeNativeCloudConfigObservation) DeepCopyInto(out *EdgeNativeCloudConfigObservation) {
	*out = *in
	if in.NtpServers != nil {
		in, out := &in.NtpServers, &out.NtpServers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OverlayCidrRange != nil {
		in, out := &in.OverlayCidrRange, &out.OverlayCidrRange
		*out = new(string)
		**out = **in
	}
	if in.SSHKeys != nil {
		in, out := &in.SSHKeys, &out.SSHKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Vip != nil {
		in, out := &in.Vip, &out.Vip
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeNativeCloudConfigObservation.
func (in *EdgeNativeCloudConfigObservation) DeepCopy() *EdgeNativeCloudConfigObservation {
	if in == nil {
		return nil
	}
	out := new(EdgeNativeCloudConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeNativeCloudConfigParameters) DeepCopyInto(out *EdgeNativeCloudConfigParameters) {
	*out = *in
	if in.NtpServers != nil {
		in, out := &in.NtpServers, &out.NtpServers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OverlayCidrRange != nil {
		in, out := &in.OverlayCidrRange, &out.OverlayCidrRange
		*out = new(string)
		**out = **in
	}
	if in.SSHKeys != nil {
		in, out := &in.SSHKeys, &out.SSHKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Vip != nil {
		in, out := &in.Vip, &out.Vip
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeNativeCloudConfigParameters.
func (in *EdgeNativeCloudConfigParameters) DeepCopy() *EdgeNativeCloudConfigParameters {
	if in == nil {
		return nil
	}
	out := new(EdgeNativeCloudConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeNativeClusterProfileInitParameters) DeepCopyInto(out *EdgeNativeClusterProfileInitParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Pack != nil {
		in, out := &in.Pack, &out.Pack
		*out = make([]EdgeNativeClusterProfilePackInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeNativeClusterProfileInitParameters.
func (in *EdgeNativeClusterProfileInitParameters) DeepCopy() *EdgeNativeClusterProfileInitParameters {
	if in == nil {
		return nil
	}
	out := new(EdgeNativeClusterProfileInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeNativeClusterProfileObservation) DeepCopyInto(out *EdgeNativeClusterProfileObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Pack != nil {
		in, out := &in.Pack, &out.Pack
		*out = make([]EdgeNativeClusterProfilePackObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeNativeClusterProfileObservation.
func (in *EdgeNativeClusterProfileObservation) DeepCopy() *EdgeNativeClusterProfileObservation {
	if in == nil {
		return nil
	}
	out := new(EdgeNativeClusterProfileObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeNativeClusterProfilePackInitParameters) DeepCopyInto(out *EdgeNativeClusterProfilePackInitParameters) {
	*out = *in
	if in.Manifest != nil {
		in, out := &in.Manifest, &out.Manifest
		*out = make([]EdgeNativeClusterProfilePackManifestInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RegistryUID != nil {
		in, out := &in.RegistryUID, &out.RegistryUID
		*out = new(string)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeNativeClusterProfilePackInitParameters.
func (in *EdgeNativeClusterProfilePackInitParameters) DeepCopy() *EdgeNativeClusterProfilePackInitParameters {
	if in == nil {
		return nil
	}
	out := new(EdgeNativeClusterProfilePackInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeNativeClusterProfilePackManifestInitParameters) DeepCopyInto(out *EdgeNativeClusterProfilePackManifestInitParameters) {
	*out = *in
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeNativeClusterProfilePackManifestInitParameters.
func (in *EdgeNativeClusterProfilePackManifestInitParameters) DeepCopy() *EdgeNativeClusterProfilePackManifestInitParameters {
	if in == nil {
		return nil
	}
	out := new(EdgeNativeClusterProfilePackManifestInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeNativeClusterProfilePackManifestObservation) DeepCopyInto(out *EdgeNativeClusterProfilePackManifestObservation) {
	*out = *in
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeNativeClusterProfilePackManifestObservation.
func (in *EdgeNativeClusterProfilePackManifestObservation) DeepCopy() *EdgeNativeClusterProfilePackManifestObservation {
	if in == nil {
		return nil
	}
	out := new(EdgeNativeClusterProfilePackManifestObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeNativeClusterProfilePackManifestParameters) DeepCopyInto(out *EdgeNativeClusterProfilePackManifestParameters) {
	*out = *in
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeNativeClusterProfilePackManifestParameters.
func (in *EdgeNativeClusterProfilePackManifestParameters) DeepCopy() *EdgeNativeClusterProfilePackManifestParameters {
	if in == nil {
		return nil
	}
	out := new(EdgeNativeClusterProfilePackManifestParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeNativeClusterProfilePackObservation) DeepCopyInto(out *EdgeNativeClusterProfilePackObservation) {
	*out = *in
	if in.Manifest != nil {
		in, out := &in.Manifest, &out.Manifest
		*out = make([]EdgeNativeClusterProfilePackManifestObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RegistryUID != nil {
		in, out := &in.RegistryUID, &out.RegistryUID
		*out = new(string)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeNativeClusterProfilePackObservation.
func (in *EdgeNativeClusterProfilePackObservation) DeepCopy() *EdgeNativeClusterProfilePackObservation {
	if in == nil {
		return nil
	}
	out := new(EdgeNativeClusterProfilePackObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeNativeClusterProfilePackParameters) DeepCopyInto(out *EdgeNativeClusterProfilePackParameters) {
	*out = *in
	if in.Manifest != nil {
		in, out := &in.Manifest, &out.Manifest
		*out = make([]EdgeNativeClusterProfilePackManifestParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RegistryUID != nil {
		in, out := &in.RegistryUID, &out.RegistryUID
		*out = new(string)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeNativeClusterProfilePackParameters.
func (in *EdgeNativeClusterProfilePackParameters) DeepCopy() *EdgeNativeClusterProfilePackParameters {
	if in == nil {
		return nil
	}
	out := new(EdgeNativeClusterProfilePackParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeNativeClusterProfileParameters) DeepCopyInto(out *EdgeNativeClusterProfileParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Pack != nil {
		in, out := &in.Pack, &out.Pack
		*out = make([]EdgeNativeClusterProfilePackParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeNativeClusterProfileParameters.
func (in *EdgeNativeClusterProfileParameters) DeepCopy() *EdgeNativeClusterProfileParameters {
	if in == nil {
		return nil
	}
	out := new(EdgeNativeClusterProfileParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeNativeClusterRbacBindingInitParameters) DeepCopyInto(out *EdgeNativeClusterRbacBindingInitParameters) {
	*out = *in
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Subjects != nil {
		in, out := &in.Subjects, &out.Subjects
		*out = make([]EdgeNativeClusterRbacBindingSubjectsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeNativeClusterRbacBindingInitParameters.
func (in *EdgeNativeClusterRbacBindingInitParameters) DeepCopy() *EdgeNativeClusterRbacBindingInitParameters {
	if in == nil {
		return nil
	}
	out := new(EdgeNativeClusterRbacBindingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeNativeClusterRbacBindingObservation) DeepCopyInto(out *EdgeNativeClusterRbacBindingObservation) {
	*out = *in
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Subjects != nil {
		in, out := &in.Subjects, &out.Subjects
		*out = make([]EdgeNativeClusterRbacBindingSubjectsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeNativeClusterRbacBindingObservation.
func (in *EdgeNativeClusterRbacBindingObservation) DeepCopy() *EdgeNativeClusterRbacBindingObservation {
	if in == nil {
		return nil
	}
	out := new(EdgeNativeClusterRbacBindingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeNativeClusterRbacBindingParameters) DeepCopyInto(out *EdgeNativeClusterRbacBindingParameters) {
	*out = *in
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Subjects != nil {
		in, out := &in.Subjects, &out.Subjects
		*out = make([]EdgeNativeClusterRbacBindingSubjectsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeNativeClusterRbacBindingParameters.
func (in *EdgeNativeClusterRbacBindingParameters) DeepCopy() *EdgeNativeClusterRbacBindingParameters {
	if in == nil {
		return nil
	}
	out := new(EdgeNativeClusterRbacBindingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeNativeClusterRbacBindingSubjectsInitParameters) DeepCopyInto(out *EdgeNativeClusterRbacBindingSubjectsInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeNativeClusterRbacBindingSubjectsInitParameters.
func (in *EdgeNativeClusterRbacBindingSubjectsInitParameters) DeepCopy() *EdgeNativeClusterRbacBindingSubjectsInitParameters {
	if in == nil {
		return nil
	}
	out := new(EdgeNativeClusterRbacBindingSubjectsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeNativeClusterRbacBindingSubjectsObservation) DeepCopyInto(out *EdgeNativeClusterRbacBindingSubjectsObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeNativeClusterRbacBindingSubjectsObservation.
func (in *EdgeNativeClusterRbacBindingSubjectsObservation) DeepCopy() *EdgeNativeClusterRbacBindingSubjectsObservation {
	if in == nil {
		return nil
	}
	out := new(EdgeNativeClusterRbacBindingSubjectsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeNativeClusterRbacBindingSubjectsParameters) DeepCopyInto(out *EdgeNativeClusterRbacBindingSubjectsParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeNativeClusterRbacBindingSubjectsParameters.
func (in *EdgeNativeClusterRbacBindingSubjectsParameters) DeepCopy() *EdgeNativeClusterRbacBindingSubjectsParameters {
	if in == nil {
		return nil
	}
	out := new(EdgeNativeClusterRbacBindingSubjectsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeNativeHostConfigInitParameters) DeepCopyInto(out *EdgeNativeHostConfigInitParameters) {
	*out = *in
	if in.ExternalTrafficPolicy != nil {
		in, out := &in.ExternalTrafficPolicy, &out.ExternalTrafficPolicy
		*out = new(string)
		**out = **in
	}
	if in.HostEndpointType != nil {
		in, out := &in.HostEndpointType, &out.HostEndpointType
		*out = new(string)
		**out = **in
	}
	if in.IngressHost != nil {
		in, out := &in.IngressHost, &out.IngressHost
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancerSourceRanges != nil {
		in, out := &in.LoadBalancerSourceRanges, &out.LoadBalancerSourceRanges
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeNativeHostConfigInitParameters.
func (in *EdgeNativeHostConfigInitParameters) DeepCopy() *EdgeNativeHostConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(EdgeNativeHostConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeNativeHostConfigObservation) DeepCopyInto(out *EdgeNativeHostConfigObservation) {
	*out = *in
	if in.ExternalTrafficPolicy != nil {
		in, out := &in.ExternalTrafficPolicy, &out.ExternalTrafficPolicy
		*out = new(string)
		**out = **in
	}
	if in.HostEndpointType != nil {
		in, out := &in.HostEndpointType, &out.HostEndpointType
		*out = new(string)
		**out = **in
	}
	if in.IngressHost != nil {
		in, out := &in.IngressHost, &out.IngressHost
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancerSourceRanges != nil {
		in, out := &in.LoadBalancerSourceRanges, &out.LoadBalancerSourceRanges
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeNativeHostConfigObservation.
func (in *EdgeNativeHostConfigObservation) DeepCopy() *EdgeNativeHostConfigObservation {
	if in == nil {
		return nil
	}
	out := new(EdgeNativeHostConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeNativeHostConfigParameters) DeepCopyInto(out *EdgeNativeHostConfigParameters) {
	*out = *in
	if in.ExternalTrafficPolicy != nil {
		in, out := &in.ExternalTrafficPolicy, &out.ExternalTrafficPolicy
		*out = new(string)
		**out = **in
	}
	if in.HostEndpointType != nil {
		in, out := &in.HostEndpointType, &out.HostEndpointType
		*out = new(string)
		**out = **in
	}
	if in.IngressHost != nil {
		in, out := &in.IngressHost, &out.IngressHost
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancerSourceRanges != nil {
		in, out := &in.LoadBalancerSourceRanges, &out.LoadBalancerSourceRanges
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeNativeHostConfigParameters.
func (in *EdgeNativeHostConfigParameters) DeepCopy() *EdgeNativeHostConfigParameters {
	if in == nil {
		return nil
	}
	out := new(EdgeNativeHostConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeNativeInitParameters) DeepCopyInto(out *EdgeNativeInitParameters) {
	*out = *in
	if in.ApplySetting != nil {
		in, out := &in.ApplySetting, &out.ApplySetting
		*out = new(string)
		**out = **in
	}
	if in.BackupPolicy != nil {
		in, out := &in.BackupPolicy, &out.BackupPolicy
		*out = make([]EdgeNativeBackupPolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CloudAccountID != nil {
		in, out := &in.CloudAccountID, &out.CloudAccountID
		*out = new(string)
		**out = **in
	}
	if in.CloudConfig != nil {
		in, out := &in.CloudConfig, &out.CloudConfig
		*out = make([]EdgeNativeCloudConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterMetaAttribute != nil {
		in, out := &in.ClusterMetaAttribute, &out.ClusterMetaAttribute
		*out = new(string)
		**out = **in
	}
	if in.ClusterProfile != nil {
		in, out := &in.ClusterProfile, &out.ClusterProfile
		*out = make([]EdgeNativeClusterProfileInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterRbacBinding != nil {
		in, out := &in.ClusterRbacBinding, &out.ClusterRbacBinding
		*out = make([]EdgeNativeClusterRbacBindingInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Context != nil {
		in, out := &in.Context, &out.Context
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ForceDelete != nil {
		in, out := &in.ForceDelete, &out.ForceDelete
		*out = new(bool)
		**out = **in
	}
	if in.ForceDeleteDelay != nil {
		in, out := &in.ForceDeleteDelay, &out.ForceDeleteDelay
		*out = new(float64)
		**out = **in
	}
	if in.HostConfig != nil {
		in, out := &in.HostConfig, &out.HostConfig
		*out = make([]EdgeNativeHostConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LocationConfig != nil {
		in, out := &in.LocationConfig, &out.LocationConfig
		*out = make([]EdgeNativeLocationConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MachinePool != nil {
		in, out := &in.MachinePool, &out.MachinePool
		*out = make([]EdgeNativeMachinePoolInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]EdgeNativeNamespacesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OsPatchAfter != nil {
		in, out := &in.OsPatchAfter, &out.OsPatchAfter
		*out = new(string)
		**out = **in
	}
	if in.OsPatchOnBoot != nil {
		in, out := &in.OsPatchOnBoot, &out.OsPatchOnBoot
		*out = new(bool)
		**out = **in
	}
	if in.OsPatchSchedule != nil {
		in, out := &in.OsPatchSchedule, &out.OsPatchSchedule
		*out = new(string)
		**out = **in
	}
	if in.PauseAgentUpgrades != nil {
		in, out := &in.PauseAgentUpgrades, &out.PauseAgentUpgrades
		*out = new(string)
		**out = **in
	}
	if in.ReviewRepaveState != nil {
		in, out := &in.ReviewRepaveState, &out.ReviewRepaveState
		*out = new(string)
		**out = **in
	}
	if in.ScanPolicy != nil {
		in, out := &in.ScanPolicy, &out.ScanPolicy
		*out = make([]EdgeNativeScanPolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SkipCompletion != nil {
		in, out := &in.SkipCompletion, &out.SkipCompletion
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeNativeInitParameters.
func (in *EdgeNativeInitParameters) DeepCopy() *EdgeNativeInitParameters {
	if in == nil {
		return nil
	}
	out := new(EdgeNativeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeNativeList) DeepCopyInto(out *EdgeNativeList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]EdgeNative, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeNativeList.
func (in *EdgeNativeList) DeepCopy() *EdgeNativeList {
	if in == nil {
		return nil
	}
	out := new(EdgeNativeList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *EdgeNativeList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeNativeLocationConfigInitParameters) DeepCopyInto(out *EdgeNativeLocationConfigInitParameters) {
	*out = *in
	if in.CountryCode != nil {
		in, out := &in.CountryCode, &out.CountryCode
		*out = new(string)
		**out = **in
	}
	if in.CountryName != nil {
		in, out := &in.CountryName, &out.CountryName
		*out = new(string)
		**out = **in
	}
	if in.Latitude != nil {
		in, out := &in.Latitude, &out.Latitude
		*out = new(float64)
		**out = **in
	}
	if in.Longitude != nil {
		in, out := &in.Longitude, &out.Longitude
		*out = new(float64)
		**out = **in
	}
	if in.RegionCode != nil {
		in, out := &in.RegionCode, &out.RegionCode
		*out = new(string)
		**out = **in
	}
	if in.RegionName != nil {
		in, out := &in.RegionName, &out.RegionName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeNativeLocationConfigInitParameters.
func (in *EdgeNativeLocationConfigInitParameters) DeepCopy() *EdgeNativeLocationConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(EdgeNativeLocationConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeNativeLocationConfigObservation) DeepCopyInto(out *EdgeNativeLocationConfigObservation) {
	*out = *in
	if in.CountryCode != nil {
		in, out := &in.CountryCode, &out.CountryCode
		*out = new(string)
		**out = **in
	}
	if in.CountryName != nil {
		in, out := &in.CountryName, &out.CountryName
		*out = new(string)
		**out = **in
	}
	if in.Latitude != nil {
		in, out := &in.Latitude, &out.Latitude
		*out = new(float64)
		**out = **in
	}
	if in.Longitude != nil {
		in, out := &in.Longitude, &out.Longitude
		*out = new(float64)
		**out = **in
	}
	if in.RegionCode != nil {
		in, out := &in.RegionCode, &out.RegionCode
		*out = new(string)
		**out = **in
	}
	if in.RegionName != nil {
		in, out := &in.RegionName, &out.RegionName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeNativeLocationConfigObservation.
func (in *EdgeNativeLocationConfigObservation) DeepCopy() *EdgeNativeLocationConfigObservation {
	if in == nil {
		return nil
	}
	out := new(EdgeNativeLocationConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeNativeLocationConfigParameters) DeepCopyInto(out *EdgeNativeLocationConfigParameters) {
	*out = *in
	if in.CountryCode != nil {
		in, out := &in.CountryCode, &out.CountryCode
		*out = new(string)
		**out = **in
	}
	if in.CountryName != nil {
		in, out := &in.CountryName, &out.CountryName
		*out = new(string)
		**out = **in
	}
	if in.Latitude != nil {
		in, out := &in.Latitude, &out.Latitude
		*out = new(float64)
		**out = **in
	}
	if in.Longitude != nil {
		in, out := &in.Longitude, &out.Longitude
		*out = new(float64)
		**out = **in
	}
	if in.RegionCode != nil {
		in, out := &in.RegionCode, &out.RegionCode
		*out = new(string)
		**out = **in
	}
	if in.RegionName != nil {
		in, out := &in.RegionName, &out.RegionName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeNativeLocationConfigParameters.
func (in *EdgeNativeLocationConfigParameters) DeepCopy() *EdgeNativeLocationConfigParameters {
	if in == nil {
		return nil
	}
	out := new(EdgeNativeLocationConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeNativeMachinePoolInitParameters) DeepCopyInto(out *EdgeNativeMachinePoolInitParameters) {
	*out = *in
	if in.AdditionalLabels != nil {
		in, out := &in.AdditionalLabels, &out.AdditionalLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ControlPlane != nil {
		in, out := &in.ControlPlane, &out.ControlPlane
		*out = new(bool)
		**out = **in
	}
	if in.ControlPlaneAsWorker != nil {
		in, out := &in.ControlPlaneAsWorker, &out.ControlPlaneAsWorker
		*out = new(bool)
		**out = **in
	}
	if in.EdgeHost != nil {
		in, out := &in.EdgeHost, &out.EdgeHost
		*out = make([]EdgeHostInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Node != nil {
		in, out := &in.Node, &out.Node
		*out = make([]EdgeNativeMachinePoolNodeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NodeRepaveInterval != nil {
		in, out := &in.NodeRepaveInterval, &out.NodeRepaveInterval
		*out = new(float64)
		**out = **in
	}
	if in.Taints != nil {
		in, out := &in.Taints, &out.Taints
		*out = make([]EdgeNativeMachinePoolTaintsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UpdateStrategy != nil {
		in, out := &in.UpdateStrategy, &out.UpdateStrategy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeNativeMachinePoolInitParameters.
func (in *EdgeNativeMachinePoolInitParameters) DeepCopy() *EdgeNativeMachinePoolInitParameters {
	if in == nil {
		return nil
	}
	out := new(EdgeNativeMachinePoolInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeNativeMachinePoolNodeInitParameters) DeepCopyInto(out *EdgeNativeMachinePoolNodeInitParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.NodeID != nil {
		in, out := &in.NodeID, &out.NodeID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeNativeMachinePoolNodeInitParameters.
func (in *EdgeNativeMachinePoolNodeInitParameters) DeepCopy() *EdgeNativeMachinePoolNodeInitParameters {
	if in == nil {
		return nil
	}
	out := new(EdgeNativeMachinePoolNodeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeNativeMachinePoolNodeObservation) DeepCopyInto(out *EdgeNativeMachinePoolNodeObservation) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.NodeID != nil {
		in, out := &in.NodeID, &out.NodeID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeNativeMachinePoolNodeObservation.
func (in *EdgeNativeMachinePoolNodeObservation) DeepCopy() *EdgeNativeMachinePoolNodeObservation {
	if in == nil {
		return nil
	}
	out := new(EdgeNativeMachinePoolNodeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeNativeMachinePoolNodeParameters) DeepCopyInto(out *EdgeNativeMachinePoolNodeParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.NodeID != nil {
		in, out := &in.NodeID, &out.NodeID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeNativeMachinePoolNodeParameters.
func (in *EdgeNativeMachinePoolNodeParameters) DeepCopy() *EdgeNativeMachinePoolNodeParameters {
	if in == nil {
		return nil
	}
	out := new(EdgeNativeMachinePoolNodeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeNativeMachinePoolObservation) DeepCopyInto(out *EdgeNativeMachinePoolObservation) {
	*out = *in
	if in.AdditionalLabels != nil {
		in, out := &in.AdditionalLabels, &out.AdditionalLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ControlPlane != nil {
		in, out := &in.ControlPlane, &out.ControlPlane
		*out = new(bool)
		**out = **in
	}
	if in.ControlPlaneAsWorker != nil {
		in, out := &in.ControlPlaneAsWorker, &out.ControlPlaneAsWorker
		*out = new(bool)
		**out = **in
	}
	if in.EdgeHost != nil {
		in, out := &in.EdgeHost, &out.EdgeHost
		*out = make([]EdgeHostObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Node != nil {
		in, out := &in.Node, &out.Node
		*out = make([]EdgeNativeMachinePoolNodeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NodeRepaveInterval != nil {
		in, out := &in.NodeRepaveInterval, &out.NodeRepaveInterval
		*out = new(float64)
		**out = **in
	}
	if in.Taints != nil {
		in, out := &in.Taints, &out.Taints
		*out = make([]EdgeNativeMachinePoolTaintsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UpdateStrategy != nil {
		in, out := &in.UpdateStrategy, &out.UpdateStrategy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeNativeMachinePoolObservation.
func (in *EdgeNativeMachinePoolObservation) DeepCopy() *EdgeNativeMachinePoolObservation {
	if in == nil {
		return nil
	}
	out := new(EdgeNativeMachinePoolObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeNativeMachinePoolParameters) DeepCopyInto(out *EdgeNativeMachinePoolParameters) {
	*out = *in
	if in.AdditionalLabels != nil {
		in, out := &in.AdditionalLabels, &out.AdditionalLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ControlPlane != nil {
		in, out := &in.ControlPlane, &out.ControlPlane
		*out = new(bool)
		**out = **in
	}
	if in.ControlPlaneAsWorker != nil {
		in, out := &in.ControlPlaneAsWorker, &out.ControlPlaneAsWorker
		*out = new(bool)
		**out = **in
	}
	if in.EdgeHost != nil {
		in, out := &in.EdgeHost, &out.EdgeHost
		*out = make([]EdgeHostParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Node != nil {
		in, out := &in.Node, &out.Node
		*out = make([]EdgeNativeMachinePoolNodeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NodeRepaveInterval != nil {
		in, out := &in.NodeRepaveInterval, &out.NodeRepaveInterval
		*out = new(float64)
		**out = **in
	}
	if in.Taints != nil {
		in, out := &in.Taints, &out.Taints
		*out = make([]EdgeNativeMachinePoolTaintsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UpdateStrategy != nil {
		in, out := &in.UpdateStrategy, &out.UpdateStrategy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeNativeMachinePoolParameters.
func (in *EdgeNativeMachinePoolParameters) DeepCopy() *EdgeNativeMachinePoolParameters {
	if in == nil {
		return nil
	}
	out := new(EdgeNativeMachinePoolParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeNativeMachinePoolTaintsInitParameters) DeepCopyInto(out *EdgeNativeMachinePoolTaintsInitParameters) {
	*out = *in
	if in.Effect != nil {
		in, out := &in.Effect, &out.Effect
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeNativeMachinePoolTaintsInitParameters.
func (in *EdgeNativeMachinePoolTaintsInitParameters) DeepCopy() *EdgeNativeMachinePoolTaintsInitParameters {
	if in == nil {
		return nil
	}
	out := new(EdgeNativeMachinePoolTaintsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeNativeMachinePoolTaintsObservation) DeepCopyInto(out *EdgeNativeMachinePoolTaintsObservation) {
	*out = *in
	if in.Effect != nil {
		in, out := &in.Effect, &out.Effect
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeNativeMachinePoolTaintsObservation.
func (in *EdgeNativeMachinePoolTaintsObservation) DeepCopy() *EdgeNativeMachinePoolTaintsObservation {
	if in == nil {
		return nil
	}
	out := new(EdgeNativeMachinePoolTaintsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeNativeMachinePoolTaintsParameters) DeepCopyInto(out *EdgeNativeMachinePoolTaintsParameters) {
	*out = *in
	if in.Effect != nil {
		in, out := &in.Effect, &out.Effect
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeNativeMachinePoolTaintsParameters.
func (in *EdgeNativeMachinePoolTaintsParameters) DeepCopy() *EdgeNativeMachinePoolTaintsParameters {
	if in == nil {
		return nil
	}
	out := new(EdgeNativeMachinePoolTaintsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeNativeNamespacesInitParameters) DeepCopyInto(out *EdgeNativeNamespacesInitParameters) {
	*out = *in
	if in.ImagesBlacklist != nil {
		in, out := &in.ImagesBlacklist, &out.ImagesBlacklist
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ResourceAllocation != nil {
		in, out := &in.ResourceAllocation, &out.ResourceAllocation
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeNativeNamespacesInitParameters.
func (in *EdgeNativeNamespacesInitParameters) DeepCopy() *EdgeNativeNamespacesInitParameters {
	if in == nil {
		return nil
	}
	out := new(EdgeNativeNamespacesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeNativeNamespacesObservation) DeepCopyInto(out *EdgeNativeNamespacesObservation) {
	*out = *in
	if in.ImagesBlacklist != nil {
		in, out := &in.ImagesBlacklist, &out.ImagesBlacklist
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ResourceAllocation != nil {
		in, out := &in.ResourceAllocation, &out.ResourceAllocation
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeNativeNamespacesObservation.
func (in *EdgeNativeNamespacesObservation) DeepCopy() *EdgeNativeNamespacesObservation {
	if in == nil {
		return nil
	}
	out := new(EdgeNativeNamespacesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeNativeNamespacesParameters) DeepCopyInto(out *EdgeNativeNamespacesParameters) {
	*out = *in
	if in.ImagesBlacklist != nil {
		in, out := &in.ImagesBlacklist, &out.ImagesBlacklist
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ResourceAllocation != nil {
		in, out := &in.ResourceAllocation, &out.ResourceAllocation
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeNativeNamespacesParameters.
func (in *EdgeNativeNamespacesParameters) DeepCopy() *EdgeNativeNamespacesParameters {
	if in == nil {
		return nil
	}
	out := new(EdgeNativeNamespacesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeNativeObservation) DeepCopyInto(out *EdgeNativeObservation) {
	*out = *in
	if in.AdminKubeConfig != nil {
		in, out := &in.AdminKubeConfig, &out.AdminKubeConfig
		*out = new(string)
		**out = **in
	}
	if in.ApplySetting != nil {
		in, out := &in.ApplySetting, &out.ApplySetting
		*out = new(string)
		**out = **in
	}
	if in.BackupPolicy != nil {
		in, out := &in.BackupPolicy, &out.BackupPolicy
		*out = make([]EdgeNativeBackupPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CloudAccountID != nil {
		in, out := &in.CloudAccountID, &out.CloudAccountID
		*out = new(string)
		**out = **in
	}
	if in.CloudConfig != nil {
		in, out := &in.CloudConfig, &out.CloudConfig
		*out = make([]EdgeNativeCloudConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CloudConfigID != nil {
		in, out := &in.CloudConfigID, &out.CloudConfigID
		*out = new(string)
		**out = **in
	}
	if in.ClusterMetaAttribute != nil {
		in, out := &in.ClusterMetaAttribute, &out.ClusterMetaAttribute
		*out = new(string)
		**out = **in
	}
	if in.ClusterProfile != nil {
		in, out := &in.ClusterProfile, &out.ClusterProfile
		*out = make([]EdgeNativeClusterProfileObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterRbacBinding != nil {
		in, out := &in.ClusterRbacBinding, &out.ClusterRbacBinding
		*out = make([]EdgeNativeClusterRbacBindingObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Context != nil {
		in, out := &in.Context, &out.Context
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ForceDelete != nil {
		in, out := &in.ForceDelete, &out.ForceDelete
		*out = new(bool)
		**out = **in
	}
	if in.ForceDeleteDelay != nil {
		in, out := &in.ForceDeleteDelay, &out.ForceDeleteDelay
		*out = new(float64)
		**out = **in
	}
	if in.HostConfig != nil {
		in, out := &in.HostConfig, &out.HostConfig
		*out = make([]EdgeNativeHostConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Kubeconfig != nil {
		in, out := &in.Kubeconfig, &out.Kubeconfig
		*out = new(string)
		**out = **in
	}
	if in.LocationConfig != nil {
		in, out := &in.LocationConfig, &out.LocationConfig
		*out = make([]EdgeNativeLocationConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MachinePool != nil {
		in, out := &in.MachinePool, &out.MachinePool
		*out = make([]EdgeNativeMachinePoolObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]EdgeNativeNamespacesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OsPatchAfter != nil {
		in, out := &in.OsPatchAfter, &out.OsPatchAfter
		*out = new(string)
		**out = **in
	}
	if in.OsPatchOnBoot != nil {
		in, out := &in.OsPatchOnBoot, &out.OsPatchOnBoot
		*out = new(bool)
		**out = **in
	}
	if in.OsPatchSchedule != nil {
		in, out := &in.OsPatchSchedule, &out.OsPatchSchedule
		*out = new(string)
		**out = **in
	}
	if in.PauseAgentUpgrades != nil {
		in, out := &in.PauseAgentUpgrades, &out.PauseAgentUpgrades
		*out = new(string)
		**out = **in
	}
	if in.ReviewRepaveState != nil {
		in, out := &in.ReviewRepaveState, &out.ReviewRepaveState
		*out = new(string)
		**out = **in
	}
	if in.ScanPolicy != nil {
		in, out := &in.ScanPolicy, &out.ScanPolicy
		*out = make([]EdgeNativeScanPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SkipCompletion != nil {
		in, out := &in.SkipCompletion, &out.SkipCompletion
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeNativeObservation.
func (in *EdgeNativeObservation) DeepCopy() *EdgeNativeObservation {
	if in == nil {
		return nil
	}
	out := new(EdgeNativeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeNativeParameters) DeepCopyInto(out *EdgeNativeParameters) {
	*out = *in
	if in.ApplySetting != nil {
		in, out := &in.ApplySetting, &out.ApplySetting
		*out = new(string)
		**out = **in
	}
	if in.BackupPolicy != nil {
		in, out := &in.BackupPolicy, &out.BackupPolicy
		*out = make([]EdgeNativeBackupPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CloudAccountID != nil {
		in, out := &in.CloudAccountID, &out.CloudAccountID
		*out = new(string)
		**out = **in
	}
	if in.CloudConfig != nil {
		in, out := &in.CloudConfig, &out.CloudConfig
		*out = make([]EdgeNativeCloudConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterMetaAttribute != nil {
		in, out := &in.ClusterMetaAttribute, &out.ClusterMetaAttribute
		*out = new(string)
		**out = **in
	}
	if in.ClusterProfile != nil {
		in, out := &in.ClusterProfile, &out.ClusterProfile
		*out = make([]EdgeNativeClusterProfileParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterRbacBinding != nil {
		in, out := &in.ClusterRbacBinding, &out.ClusterRbacBinding
		*out = make([]EdgeNativeClusterRbacBindingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Context != nil {
		in, out := &in.Context, &out.Context
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ForceDelete != nil {
		in, out := &in.ForceDelete, &out.ForceDelete
		*out = new(bool)
		**out = **in
	}
	if in.ForceDeleteDelay != nil {
		in, out := &in.ForceDeleteDelay, &out.ForceDeleteDelay
		*out = new(float64)
		**out = **in
	}
	if in.HostConfig != nil {
		in, out := &in.HostConfig, &out.HostConfig
		*out = make([]EdgeNativeHostConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LocationConfig != nil {
		in, out := &in.LocationConfig, &out.LocationConfig
		*out = make([]EdgeNativeLocationConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MachinePool != nil {
		in, out := &in.MachinePool, &out.MachinePool
		*out = make([]EdgeNativeMachinePoolParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]EdgeNativeNamespacesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OsPatchAfter != nil {
		in, out := &in.OsPatchAfter, &out.OsPatchAfter
		*out = new(string)
		**out = **in
	}
	if in.OsPatchOnBoot != nil {
		in, out := &in.OsPatchOnBoot, &out.OsPatchOnBoot
		*out = new(bool)
		**out = **in
	}
	if in.OsPatchSchedule != nil {
		in, out := &in.OsPatchSchedule, &out.OsPatchSchedule
		*out = new(string)
		**out = **in
	}
	if in.PauseAgentUpgrades != nil {
		in, out := &in.PauseAgentUpgrades, &out.PauseAgentUpgrades
		*out = new(string)
		**out = **in
	}
	if in.ReviewRepaveState != nil {
		in, out := &in.ReviewRepaveState, &out.ReviewRepaveState
		*out = new(string)
		**out = **in
	}
	if in.ScanPolicy != nil {
		in, out := &in.ScanPolicy, &out.ScanPolicy
		*out = make([]EdgeNativeScanPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SkipCompletion != nil {
		in, out := &in.SkipCompletion, &out.SkipCompletion
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeNativeParameters.
func (in *EdgeNativeParameters) DeepCopy() *EdgeNativeParameters {
	if in == nil {
		return nil
	}
	out := new(EdgeNativeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeNativeScanPolicyInitParameters) DeepCopyInto(out *EdgeNativeScanPolicyInitParameters) {
	*out = *in
	if in.ConfigurationScanSchedule != nil {
		in, out := &in.ConfigurationScanSchedule, &out.ConfigurationScanSchedule
		*out = new(string)
		**out = **in
	}
	if in.ConformanceScanSchedule != nil {
		in, out := &in.ConformanceScanSchedule, &out.ConformanceScanSchedule
		*out = new(string)
		**out = **in
	}
	if in.PenetrationScanSchedule != nil {
		in, out := &in.PenetrationScanSchedule, &out.PenetrationScanSchedule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeNativeScanPolicyInitParameters.
func (in *EdgeNativeScanPolicyInitParameters) DeepCopy() *EdgeNativeScanPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(EdgeNativeScanPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeNativeScanPolicyObservation) DeepCopyInto(out *EdgeNativeScanPolicyObservation) {
	*out = *in
	if in.ConfigurationScanSchedule != nil {
		in, out := &in.ConfigurationScanSchedule, &out.ConfigurationScanSchedule
		*out = new(string)
		**out = **in
	}
	if in.ConformanceScanSchedule != nil {
		in, out := &in.ConformanceScanSchedule, &out.ConformanceScanSchedule
		*out = new(string)
		**out = **in
	}
	if in.PenetrationScanSchedule != nil {
		in, out := &in.PenetrationScanSchedule, &out.PenetrationScanSchedule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeNativeScanPolicyObservation.
func (in *EdgeNativeScanPolicyObservation) DeepCopy() *EdgeNativeScanPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(EdgeNativeScanPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeNativeScanPolicyParameters) DeepCopyInto(out *EdgeNativeScanPolicyParameters) {
	*out = *in
	if in.ConfigurationScanSchedule != nil {
		in, out := &in.ConfigurationScanSchedule, &out.ConfigurationScanSchedule
		*out = new(string)
		**out = **in
	}
	if in.ConformanceScanSchedule != nil {
		in, out := &in.ConformanceScanSchedule, &out.ConformanceScanSchedule
		*out = new(string)
		**out = **in
	}
	if in.PenetrationScanSchedule != nil {
		in, out := &in.PenetrationScanSchedule, &out.PenetrationScanSchedule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeNativeScanPolicyParameters.
func (in *EdgeNativeScanPolicyParameters) DeepCopy() *EdgeNativeScanPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(EdgeNativeScanPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeNativeSpec) DeepCopyInto(out *EdgeNativeSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeNativeSpec.
func (in *EdgeNativeSpec) DeepCopy() *EdgeNativeSpec {
	if in == nil {
		return nil
	}
	out := new(EdgeNativeSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeNativeStatus) DeepCopyInto(out *EdgeNativeStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeNativeStatus.
func (in *EdgeNativeStatus) DeepCopy() *EdgeNativeStatus {
	if in == nil {
		return nil
	}
	out := new(EdgeNativeStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeVsphere) DeepCopyInto(out *EdgeVsphere) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeVsphere.
func (in *EdgeVsphere) DeepCopy() *EdgeVsphere {
	if in == nil {
		return nil
	}
	out := new(EdgeVsphere)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *EdgeVsphere) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeVsphereBackupPolicyInitParameters) DeepCopyInto(out *EdgeVsphereBackupPolicyInitParameters) {
	*out = *in
	if in.BackupLocationID != nil {
		in, out := &in.BackupLocationID, &out.BackupLocationID
		*out = new(string)
		**out = **in
	}
	if in.ClusterUids != nil {
		in, out := &in.ClusterUids, &out.ClusterUids
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExpiryInHour != nil {
		in, out := &in.ExpiryInHour, &out.ExpiryInHour
		*out = new(float64)
		**out = **in
	}
	if in.IncludeAllClusters != nil {
		in, out := &in.IncludeAllClusters, &out.IncludeAllClusters
		*out = new(bool)
		**out = **in
	}
	if in.IncludeClusterResources != nil {
		in, out := &in.IncludeClusterResources, &out.IncludeClusterResources
		*out = new(bool)
		**out = **in
	}
	if in.IncludeDisks != nil {
		in, out := &in.IncludeDisks, &out.IncludeDisks
		*out = new(bool)
		**out = **in
	}
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeVsphereBackupPolicyInitParameters.
func (in *EdgeVsphereBackupPolicyInitParameters) DeepCopy() *EdgeVsphereBackupPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(EdgeVsphereBackupPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeVsphereBackupPolicyObservation) DeepCopyInto(out *EdgeVsphereBackupPolicyObservation) {
	*out = *in
	if in.BackupLocationID != nil {
		in, out := &in.BackupLocationID, &out.BackupLocationID
		*out = new(string)
		**out = **in
	}
	if in.ClusterUids != nil {
		in, out := &in.ClusterUids, &out.ClusterUids
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExpiryInHour != nil {
		in, out := &in.ExpiryInHour, &out.ExpiryInHour
		*out = new(float64)
		**out = **in
	}
	if in.IncludeAllClusters != nil {
		in, out := &in.IncludeAllClusters, &out.IncludeAllClusters
		*out = new(bool)
		**out = **in
	}
	if in.IncludeClusterResources != nil {
		in, out := &in.IncludeClusterResources, &out.IncludeClusterResources
		*out = new(bool)
		**out = **in
	}
	if in.IncludeDisks != nil {
		in, out := &in.IncludeDisks, &out.IncludeDisks
		*out = new(bool)
		**out = **in
	}
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeVsphereBackupPolicyObservation.
func (in *EdgeVsphereBackupPolicyObservation) DeepCopy() *EdgeVsphereBackupPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(EdgeVsphereBackupPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeVsphereBackupPolicyParameters) DeepCopyInto(out *EdgeVsphereBackupPolicyParameters) {
	*out = *in
	if in.BackupLocationID != nil {
		in, out := &in.BackupLocationID, &out.BackupLocationID
		*out = new(string)
		**out = **in
	}
	if in.ClusterUids != nil {
		in, out := &in.ClusterUids, &out.ClusterUids
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExpiryInHour != nil {
		in, out := &in.ExpiryInHour, &out.ExpiryInHour
		*out = new(float64)
		**out = **in
	}
	if in.IncludeAllClusters != nil {
		in, out := &in.IncludeAllClusters, &out.IncludeAllClusters
		*out = new(bool)
		**out = **in
	}
	if in.IncludeClusterResources != nil {
		in, out := &in.IncludeClusterResources, &out.IncludeClusterResources
		*out = new(bool)
		**out = **in
	}
	if in.IncludeDisks != nil {
		in, out := &in.IncludeDisks, &out.IncludeDisks
		*out = new(bool)
		**out = **in
	}
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeVsphereBackupPolicyParameters.
func (in *EdgeVsphereBackupPolicyParameters) DeepCopy() *EdgeVsphereBackupPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(EdgeVsphereBackupPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeVsphereCloudConfigInitParameters) DeepCopyInto(out *EdgeVsphereCloudConfigInitParameters) {
	*out = *in
	if in.Datacenter != nil {
		in, out := &in.Datacenter, &out.Datacenter
		*out = new(string)
		**out = **in
	}
	if in.Folder != nil {
		in, out := &in.Folder, &out.Folder
		*out = new(string)
		**out = **in
	}
	if in.ImageTemplateFolder != nil {
		in, out := &in.ImageTemplateFolder, &out.ImageTemplateFolder
		*out = new(string)
		**out = **in
	}
	if in.NetworkSearchDomain != nil {
		in, out := &in.NetworkSearchDomain, &out.NetworkSearchDomain
		*out = new(string)
		**out = **in
	}
	if in.NetworkType != nil {
		in, out := &in.NetworkType, &out.NetworkType
		*out = new(string)
		**out = **in
	}
	if in.SSHKey != nil {
		in, out := &in.SSHKey, &out.SSHKey
		*out = new(string)
		**out = **in
	}
	if in.SSHKeys != nil {
		in, out := &in.SSHKeys, &out.SSHKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.StaticIP != nil {
		in, out := &in.StaticIP, &out.StaticIP
		*out = new(bool)
		**out = **in
	}
	if in.Vip != nil {
		in, out := &in.Vip, &out.Vip
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeVsphereCloudConfigInitParameters.
func (in *EdgeVsphereCloudConfigInitParameters) DeepCopy() *EdgeVsphereCloudConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(EdgeVsphereCloudConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeVsphereCloudConfigObservation) DeepCopyInto(out *EdgeVsphereCloudConfigObservation) {
	*out = *in
	if in.Datacenter != nil {
		in, out := &in.Datacenter, &out.Datacenter
		*out = new(string)
		**out = **in
	}
	if in.Folder != nil {
		in, out := &in.Folder, &out.Folder
		*out = new(string)
		**out = **in
	}
	if in.ImageTemplateFolder != nil {
		in, out := &in.ImageTemplateFolder, &out.ImageTemplateFolder
		*out = new(string)
		**out = **in
	}
	if in.NetworkSearchDomain != nil {
		in, out := &in.NetworkSearchDomain, &out.NetworkSearchDomain
		*out = new(string)
		**out = **in
	}
	if in.NetworkType != nil {
		in, out := &in.NetworkType, &out.NetworkType
		*out = new(string)
		**out = **in
	}
	if in.SSHKey != nil {
		in, out := &in.SSHKey, &out.SSHKey
		*out = new(string)
		**out = **in
	}
	if in.SSHKeys != nil {
		in, out := &in.SSHKeys, &out.SSHKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.StaticIP != nil {
		in, out := &in.StaticIP, &out.StaticIP
		*out = new(bool)
		**out = **in
	}
	if in.Vip != nil {
		in, out := &in.Vip, &out.Vip
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeVsphereCloudConfigObservation.
func (in *EdgeVsphereCloudConfigObservation) DeepCopy() *EdgeVsphereCloudConfigObservation {
	if in == nil {
		return nil
	}
	out := new(EdgeVsphereCloudConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeVsphereCloudConfigParameters) DeepCopyInto(out *EdgeVsphereCloudConfigParameters) {
	*out = *in
	if in.Datacenter != nil {
		in, out := &in.Datacenter, &out.Datacenter
		*out = new(string)
		**out = **in
	}
	if in.Folder != nil {
		in, out := &in.Folder, &out.Folder
		*out = new(string)
		**out = **in
	}
	if in.ImageTemplateFolder != nil {
		in, out := &in.ImageTemplateFolder, &out.ImageTemplateFolder
		*out = new(string)
		**out = **in
	}
	if in.NetworkSearchDomain != nil {
		in, out := &in.NetworkSearchDomain, &out.NetworkSearchDomain
		*out = new(string)
		**out = **in
	}
	if in.NetworkType != nil {
		in, out := &in.NetworkType, &out.NetworkType
		*out = new(string)
		**out = **in
	}
	if in.SSHKey != nil {
		in, out := &in.SSHKey, &out.SSHKey
		*out = new(string)
		**out = **in
	}
	if in.SSHKeys != nil {
		in, out := &in.SSHKeys, &out.SSHKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.StaticIP != nil {
		in, out := &in.StaticIP, &out.StaticIP
		*out = new(bool)
		**out = **in
	}
	if in.Vip != nil {
		in, out := &in.Vip, &out.Vip
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeVsphereCloudConfigParameters.
func (in *EdgeVsphereCloudConfigParameters) DeepCopy() *EdgeVsphereCloudConfigParameters {
	if in == nil {
		return nil
	}
	out := new(EdgeVsphereCloudConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeVsphereClusterProfileInitParameters) DeepCopyInto(out *EdgeVsphereClusterProfileInitParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Pack != nil {
		in, out := &in.Pack, &out.Pack
		*out = make([]EdgeVsphereClusterProfilePackInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeVsphereClusterProfileInitParameters.
func (in *EdgeVsphereClusterProfileInitParameters) DeepCopy() *EdgeVsphereClusterProfileInitParameters {
	if in == nil {
		return nil
	}
	out := new(EdgeVsphereClusterProfileInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeVsphereClusterProfileObservation) DeepCopyInto(out *EdgeVsphereClusterProfileObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Pack != nil {
		in, out := &in.Pack, &out.Pack
		*out = make([]EdgeVsphereClusterProfilePackObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeVsphereClusterProfileObservation.
func (in *EdgeVsphereClusterProfileObservation) DeepCopy() *EdgeVsphereClusterProfileObservation {
	if in == nil {
		return nil
	}
	out := new(EdgeVsphereClusterProfileObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeVsphereClusterProfilePackInitParameters) DeepCopyInto(out *EdgeVsphereClusterProfilePackInitParameters) {
	*out = *in
	if in.Manifest != nil {
		in, out := &in.Manifest, &out.Manifest
		*out = make([]EdgeVsphereClusterProfilePackManifestInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RegistryUID != nil {
		in, out := &in.RegistryUID, &out.RegistryUID
		*out = new(string)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeVsphereClusterProfilePackInitParameters.
func (in *EdgeVsphereClusterProfilePackInitParameters) DeepCopy() *EdgeVsphereClusterProfilePackInitParameters {
	if in == nil {
		return nil
	}
	out := new(EdgeVsphereClusterProfilePackInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeVsphereClusterProfilePackManifestInitParameters) DeepCopyInto(out *EdgeVsphereClusterProfilePackManifestInitParameters) {
	*out = *in
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeVsphereClusterProfilePackManifestInitParameters.
func (in *EdgeVsphereClusterProfilePackManifestInitParameters) DeepCopy() *EdgeVsphereClusterProfilePackManifestInitParameters {
	if in == nil {
		return nil
	}
	out := new(EdgeVsphereClusterProfilePackManifestInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeVsphereClusterProfilePackManifestObservation) DeepCopyInto(out *EdgeVsphereClusterProfilePackManifestObservation) {
	*out = *in
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeVsphereClusterProfilePackManifestObservation.
func (in *EdgeVsphereClusterProfilePackManifestObservation) DeepCopy() *EdgeVsphereClusterProfilePackManifestObservation {
	if in == nil {
		return nil
	}
	out := new(EdgeVsphereClusterProfilePackManifestObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeVsphereClusterProfilePackManifestParameters) DeepCopyInto(out *EdgeVsphereClusterProfilePackManifestParameters) {
	*out = *in
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeVsphereClusterProfilePackManifestParameters.
func (in *EdgeVsphereClusterProfilePackManifestParameters) DeepCopy() *EdgeVsphereClusterProfilePackManifestParameters {
	if in == nil {
		return nil
	}
	out := new(EdgeVsphereClusterProfilePackManifestParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeVsphereClusterProfilePackObservation) DeepCopyInto(out *EdgeVsphereClusterProfilePackObservation) {
	*out = *in
	if in.Manifest != nil {
		in, out := &in.Manifest, &out.Manifest
		*out = make([]EdgeVsphereClusterProfilePackManifestObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RegistryUID != nil {
		in, out := &in.RegistryUID, &out.RegistryUID
		*out = new(string)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeVsphereClusterProfilePackObservation.
func (in *EdgeVsphereClusterProfilePackObservation) DeepCopy() *EdgeVsphereClusterProfilePackObservation {
	if in == nil {
		return nil
	}
	out := new(EdgeVsphereClusterProfilePackObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeVsphereClusterProfilePackParameters) DeepCopyInto(out *EdgeVsphereClusterProfilePackParameters) {
	*out = *in
	if in.Manifest != nil {
		in, out := &in.Manifest, &out.Manifest
		*out = make([]EdgeVsphereClusterProfilePackManifestParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RegistryUID != nil {
		in, out := &in.RegistryUID, &out.RegistryUID
		*out = new(string)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeVsphereClusterProfilePackParameters.
func (in *EdgeVsphereClusterProfilePackParameters) DeepCopy() *EdgeVsphereClusterProfilePackParameters {
	if in == nil {
		return nil
	}
	out := new(EdgeVsphereClusterProfilePackParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeVsphereClusterProfileParameters) DeepCopyInto(out *EdgeVsphereClusterProfileParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Pack != nil {
		in, out := &in.Pack, &out.Pack
		*out = make([]EdgeVsphereClusterProfilePackParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeVsphereClusterProfileParameters.
func (in *EdgeVsphereClusterProfileParameters) DeepCopy() *EdgeVsphereClusterProfileParameters {
	if in == nil {
		return nil
	}
	out := new(EdgeVsphereClusterProfileParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeVsphereClusterRbacBindingInitParameters) DeepCopyInto(out *EdgeVsphereClusterRbacBindingInitParameters) {
	*out = *in
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Subjects != nil {
		in, out := &in.Subjects, &out.Subjects
		*out = make([]EdgeVsphereClusterRbacBindingSubjectsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeVsphereClusterRbacBindingInitParameters.
func (in *EdgeVsphereClusterRbacBindingInitParameters) DeepCopy() *EdgeVsphereClusterRbacBindingInitParameters {
	if in == nil {
		return nil
	}
	out := new(EdgeVsphereClusterRbacBindingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeVsphereClusterRbacBindingObservation) DeepCopyInto(out *EdgeVsphereClusterRbacBindingObservation) {
	*out = *in
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Subjects != nil {
		in, out := &in.Subjects, &out.Subjects
		*out = make([]EdgeVsphereClusterRbacBindingSubjectsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeVsphereClusterRbacBindingObservation.
func (in *EdgeVsphereClusterRbacBindingObservation) DeepCopy() *EdgeVsphereClusterRbacBindingObservation {
	if in == nil {
		return nil
	}
	out := new(EdgeVsphereClusterRbacBindingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeVsphereClusterRbacBindingParameters) DeepCopyInto(out *EdgeVsphereClusterRbacBindingParameters) {
	*out = *in
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Subjects != nil {
		in, out := &in.Subjects, &out.Subjects
		*out = make([]EdgeVsphereClusterRbacBindingSubjectsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeVsphereClusterRbacBindingParameters.
func (in *EdgeVsphereClusterRbacBindingParameters) DeepCopy() *EdgeVsphereClusterRbacBindingParameters {
	if in == nil {
		return nil
	}
	out := new(EdgeVsphereClusterRbacBindingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeVsphereClusterRbacBindingSubjectsInitParameters) DeepCopyInto(out *EdgeVsphereClusterRbacBindingSubjectsInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeVsphereClusterRbacBindingSubjectsInitParameters.
func (in *EdgeVsphereClusterRbacBindingSubjectsInitParameters) DeepCopy() *EdgeVsphereClusterRbacBindingSubjectsInitParameters {
	if in == nil {
		return nil
	}
	out := new(EdgeVsphereClusterRbacBindingSubjectsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeVsphereClusterRbacBindingSubjectsObservation) DeepCopyInto(out *EdgeVsphereClusterRbacBindingSubjectsObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeVsphereClusterRbacBindingSubjectsObservation.
func (in *EdgeVsphereClusterRbacBindingSubjectsObservation) DeepCopy() *EdgeVsphereClusterRbacBindingSubjectsObservation {
	if in == nil {
		return nil
	}
	out := new(EdgeVsphereClusterRbacBindingSubjectsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeVsphereClusterRbacBindingSubjectsParameters) DeepCopyInto(out *EdgeVsphereClusterRbacBindingSubjectsParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeVsphereClusterRbacBindingSubjectsParameters.
func (in *EdgeVsphereClusterRbacBindingSubjectsParameters) DeepCopy() *EdgeVsphereClusterRbacBindingSubjectsParameters {
	if in == nil {
		return nil
	}
	out := new(EdgeVsphereClusterRbacBindingSubjectsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeVsphereHostConfigInitParameters) DeepCopyInto(out *EdgeVsphereHostConfigInitParameters) {
	*out = *in
	if in.ExternalTrafficPolicy != nil {
		in, out := &in.ExternalTrafficPolicy, &out.ExternalTrafficPolicy
		*out = new(string)
		**out = **in
	}
	if in.HostEndpointType != nil {
		in, out := &in.HostEndpointType, &out.HostEndpointType
		*out = new(string)
		**out = **in
	}
	if in.IngressHost != nil {
		in, out := &in.IngressHost, &out.IngressHost
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancerSourceRanges != nil {
		in, out := &in.LoadBalancerSourceRanges, &out.LoadBalancerSourceRanges
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeVsphereHostConfigInitParameters.
func (in *EdgeVsphereHostConfigInitParameters) DeepCopy() *EdgeVsphereHostConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(EdgeVsphereHostConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeVsphereHostConfigObservation) DeepCopyInto(out *EdgeVsphereHostConfigObservation) {
	*out = *in
	if in.ExternalTrafficPolicy != nil {
		in, out := &in.ExternalTrafficPolicy, &out.ExternalTrafficPolicy
		*out = new(string)
		**out = **in
	}
	if in.HostEndpointType != nil {
		in, out := &in.HostEndpointType, &out.HostEndpointType
		*out = new(string)
		**out = **in
	}
	if in.IngressHost != nil {
		in, out := &in.IngressHost, &out.IngressHost
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancerSourceRanges != nil {
		in, out := &in.LoadBalancerSourceRanges, &out.LoadBalancerSourceRanges
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeVsphereHostConfigObservation.
func (in *EdgeVsphereHostConfigObservation) DeepCopy() *EdgeVsphereHostConfigObservation {
	if in == nil {
		return nil
	}
	out := new(EdgeVsphereHostConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeVsphereHostConfigParameters) DeepCopyInto(out *EdgeVsphereHostConfigParameters) {
	*out = *in
	if in.ExternalTrafficPolicy != nil {
		in, out := &in.ExternalTrafficPolicy, &out.ExternalTrafficPolicy
		*out = new(string)
		**out = **in
	}
	if in.HostEndpointType != nil {
		in, out := &in.HostEndpointType, &out.HostEndpointType
		*out = new(string)
		**out = **in
	}
	if in.IngressHost != nil {
		in, out := &in.IngressHost, &out.IngressHost
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancerSourceRanges != nil {
		in, out := &in.LoadBalancerSourceRanges, &out.LoadBalancerSourceRanges
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeVsphereHostConfigParameters.
func (in *EdgeVsphereHostConfigParameters) DeepCopy() *EdgeVsphereHostConfigParameters {
	if in == nil {
		return nil
	}
	out := new(EdgeVsphereHostConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeVsphereInitParameters) DeepCopyInto(out *EdgeVsphereInitParameters) {
	*out = *in
	if in.BackupPolicy != nil {
		in, out := &in.BackupPolicy, &out.BackupPolicy
		*out = make([]EdgeVsphereBackupPolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CloudConfig != nil {
		in, out := &in.CloudConfig, &out.CloudConfig
		*out = make([]EdgeVsphereCloudConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterMetaAttribute != nil {
		in, out := &in.ClusterMetaAttribute, &out.ClusterMetaAttribute
		*out = new(string)
		**out = **in
	}
	if in.ClusterProfile != nil {
		in, out := &in.ClusterProfile, &out.ClusterProfile
		*out = make([]EdgeVsphereClusterProfileInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterRbacBinding != nil {
		in, out := &in.ClusterRbacBinding, &out.ClusterRbacBinding
		*out = make([]EdgeVsphereClusterRbacBindingInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Context != nil {
		in, out := &in.Context, &out.Context
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EdgeHostUID != nil {
		in, out := &in.EdgeHostUID, &out.EdgeHostUID
		*out = new(string)
		**out = **in
	}
	if in.ForceDelete != nil {
		in, out := &in.ForceDelete, &out.ForceDelete
		*out = new(bool)
		**out = **in
	}
	if in.ForceDeleteDelay != nil {
		in, out := &in.ForceDeleteDelay, &out.ForceDeleteDelay
		*out = new(float64)
		**out = **in
	}
	if in.HostConfig != nil {
		in, out := &in.HostConfig, &out.HostConfig
		*out = make([]EdgeVsphereHostConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LocationConfig != nil {
		in, out := &in.LocationConfig, &out.LocationConfig
		*out = make([]EdgeVsphereLocationConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MachinePool != nil {
		in, out := &in.MachinePool, &out.MachinePool
		*out = make([]EdgeVsphereMachinePoolInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]EdgeVsphereNamespacesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OsPatchAfter != nil {
		in, out := &in.OsPatchAfter, &out.OsPatchAfter
		*out = new(string)
		**out = **in
	}
	if in.OsPatchOnBoot != nil {
		in, out := &in.OsPatchOnBoot, &out.OsPatchOnBoot
		*out = new(bool)
		**out = **in
	}
	if in.OsPatchSchedule != nil {
		in, out := &in.OsPatchSchedule, &out.OsPatchSchedule
		*out = new(string)
		**out = **in
	}
	if in.PauseAgentUpgrades != nil {
		in, out := &in.PauseAgentUpgrades, &out.PauseAgentUpgrades
		*out = new(string)
		**out = **in
	}
	if in.ReviewRepaveState != nil {
		in, out := &in.ReviewRepaveState, &out.ReviewRepaveState
		*out = new(string)
		**out = **in
	}
	if in.ScanPolicy != nil {
		in, out := &in.ScanPolicy, &out.ScanPolicy
		*out = make([]EdgeVsphereScanPolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SkipCompletion != nil {
		in, out := &in.SkipCompletion, &out.SkipCompletion
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeVsphereInitParameters.
func (in *EdgeVsphereInitParameters) DeepCopy() *EdgeVsphereInitParameters {
	if in == nil {
		return nil
	}
	out := new(EdgeVsphereInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeVsphereList) DeepCopyInto(out *EdgeVsphereList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]EdgeVsphere, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeVsphereList.
func (in *EdgeVsphereList) DeepCopy() *EdgeVsphereList {
	if in == nil {
		return nil
	}
	out := new(EdgeVsphereList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *EdgeVsphereList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeVsphereLocationConfigInitParameters) DeepCopyInto(out *EdgeVsphereLocationConfigInitParameters) {
	*out = *in
	if in.CountryCode != nil {
		in, out := &in.CountryCode, &out.CountryCode
		*out = new(string)
		**out = **in
	}
	if in.CountryName != nil {
		in, out := &in.CountryName, &out.CountryName
		*out = new(string)
		**out = **in
	}
	if in.Latitude != nil {
		in, out := &in.Latitude, &out.Latitude
		*out = new(float64)
		**out = **in
	}
	if in.Longitude != nil {
		in, out := &in.Longitude, &out.Longitude
		*out = new(float64)
		**out = **in
	}
	if in.RegionCode != nil {
		in, out := &in.RegionCode, &out.RegionCode
		*out = new(string)
		**out = **in
	}
	if in.RegionName != nil {
		in, out := &in.RegionName, &out.RegionName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeVsphereLocationConfigInitParameters.
func (in *EdgeVsphereLocationConfigInitParameters) DeepCopy() *EdgeVsphereLocationConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(EdgeVsphereLocationConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeVsphereLocationConfigObservation) DeepCopyInto(out *EdgeVsphereLocationConfigObservation) {
	*out = *in
	if in.CountryCode != nil {
		in, out := &in.CountryCode, &out.CountryCode
		*out = new(string)
		**out = **in
	}
	if in.CountryName != nil {
		in, out := &in.CountryName, &out.CountryName
		*out = new(string)
		**out = **in
	}
	if in.Latitude != nil {
		in, out := &in.Latitude, &out.Latitude
		*out = new(float64)
		**out = **in
	}
	if in.Longitude != nil {
		in, out := &in.Longitude, &out.Longitude
		*out = new(float64)
		**out = **in
	}
	if in.RegionCode != nil {
		in, out := &in.RegionCode, &out.RegionCode
		*out = new(string)
		**out = **in
	}
	if in.RegionName != nil {
		in, out := &in.RegionName, &out.RegionName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeVsphereLocationConfigObservation.
func (in *EdgeVsphereLocationConfigObservation) DeepCopy() *EdgeVsphereLocationConfigObservation {
	if in == nil {
		return nil
	}
	out := new(EdgeVsphereLocationConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeVsphereLocationConfigParameters) DeepCopyInto(out *EdgeVsphereLocationConfigParameters) {
	*out = *in
	if in.CountryCode != nil {
		in, out := &in.CountryCode, &out.CountryCode
		*out = new(string)
		**out = **in
	}
	if in.CountryName != nil {
		in, out := &in.CountryName, &out.CountryName
		*out = new(string)
		**out = **in
	}
	if in.Latitude != nil {
		in, out := &in.Latitude, &out.Latitude
		*out = new(float64)
		**out = **in
	}
	if in.Longitude != nil {
		in, out := &in.Longitude, &out.Longitude
		*out = new(float64)
		**out = **in
	}
	if in.RegionCode != nil {
		in, out := &in.RegionCode, &out.RegionCode
		*out = new(string)
		**out = **in
	}
	if in.RegionName != nil {
		in, out := &in.RegionName, &out.RegionName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeVsphereLocationConfigParameters.
func (in *EdgeVsphereLocationConfigParameters) DeepCopy() *EdgeVsphereLocationConfigParameters {
	if in == nil {
		return nil
	}
	out := new(EdgeVsphereLocationConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeVsphereMachinePoolInitParameters) DeepCopyInto(out *EdgeVsphereMachinePoolInitParameters) {
	*out = *in
	if in.AdditionalLabels != nil {
		in, out := &in.AdditionalLabels, &out.AdditionalLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ControlPlane != nil {
		in, out := &in.ControlPlane, &out.ControlPlane
		*out = new(bool)
		**out = **in
	}
	if in.ControlPlaneAsWorker != nil {
		in, out := &in.ControlPlaneAsWorker, &out.ControlPlaneAsWorker
		*out = new(bool)
		**out = **in
	}
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = make([]InstanceTypeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Node != nil {
		in, out := &in.Node, &out.Node
		*out = make([]EdgeVsphereMachinePoolNodeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NodeRepaveInterval != nil {
		in, out := &in.NodeRepaveInterval, &out.NodeRepaveInterval
		*out = new(float64)
		**out = **in
	}
	if in.Placement != nil {
		in, out := &in.Placement, &out.Placement
		*out = make([]PlacementInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Taints != nil {
		in, out := &in.Taints, &out.Taints
		*out = make([]EdgeVsphereMachinePoolTaintsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UpdateStrategy != nil {
		in, out := &in.UpdateStrategy, &out.UpdateStrategy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeVsphereMachinePoolInitParameters.
func (in *EdgeVsphereMachinePoolInitParameters) DeepCopy() *EdgeVsphereMachinePoolInitParameters {
	if in == nil {
		return nil
	}
	out := new(EdgeVsphereMachinePoolInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeVsphereMachinePoolNodeInitParameters) DeepCopyInto(out *EdgeVsphereMachinePoolNodeInitParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.NodeID != nil {
		in, out := &in.NodeID, &out.NodeID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeVsphereMachinePoolNodeInitParameters.
func (in *EdgeVsphereMachinePoolNodeInitParameters) DeepCopy() *EdgeVsphereMachinePoolNodeInitParameters {
	if in == nil {
		return nil
	}
	out := new(EdgeVsphereMachinePoolNodeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeVsphereMachinePoolNodeObservation) DeepCopyInto(out *EdgeVsphereMachinePoolNodeObservation) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.NodeID != nil {
		in, out := &in.NodeID, &out.NodeID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeVsphereMachinePoolNodeObservation.
func (in *EdgeVsphereMachinePoolNodeObservation) DeepCopy() *EdgeVsphereMachinePoolNodeObservation {
	if in == nil {
		return nil
	}
	out := new(EdgeVsphereMachinePoolNodeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeVsphereMachinePoolNodeParameters) DeepCopyInto(out *EdgeVsphereMachinePoolNodeParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.NodeID != nil {
		in, out := &in.NodeID, &out.NodeID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeVsphereMachinePoolNodeParameters.
func (in *EdgeVsphereMachinePoolNodeParameters) DeepCopy() *EdgeVsphereMachinePoolNodeParameters {
	if in == nil {
		return nil
	}
	out := new(EdgeVsphereMachinePoolNodeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeVsphereMachinePoolObservation) DeepCopyInto(out *EdgeVsphereMachinePoolObservation) {
	*out = *in
	if in.AdditionalLabels != nil {
		in, out := &in.AdditionalLabels, &out.AdditionalLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ControlPlane != nil {
		in, out := &in.ControlPlane, &out.ControlPlane
		*out = new(bool)
		**out = **in
	}
	if in.ControlPlaneAsWorker != nil {
		in, out := &in.ControlPlaneAsWorker, &out.ControlPlaneAsWorker
		*out = new(bool)
		**out = **in
	}
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = make([]InstanceTypeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Node != nil {
		in, out := &in.Node, &out.Node
		*out = make([]EdgeVsphereMachinePoolNodeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NodeRepaveInterval != nil {
		in, out := &in.NodeRepaveInterval, &out.NodeRepaveInterval
		*out = new(float64)
		**out = **in
	}
	if in.Placement != nil {
		in, out := &in.Placement, &out.Placement
		*out = make([]PlacementObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Taints != nil {
		in, out := &in.Taints, &out.Taints
		*out = make([]EdgeVsphereMachinePoolTaintsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UpdateStrategy != nil {
		in, out := &in.UpdateStrategy, &out.UpdateStrategy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeVsphereMachinePoolObservation.
func (in *EdgeVsphereMachinePoolObservation) DeepCopy() *EdgeVsphereMachinePoolObservation {
	if in == nil {
		return nil
	}
	out := new(EdgeVsphereMachinePoolObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeVsphereMachinePoolParameters) DeepCopyInto(out *EdgeVsphereMachinePoolParameters) {
	*out = *in
	if in.AdditionalLabels != nil {
		in, out := &in.AdditionalLabels, &out.AdditionalLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ControlPlane != nil {
		in, out := &in.ControlPlane, &out.ControlPlane
		*out = new(bool)
		**out = **in
	}
	if in.ControlPlaneAsWorker != nil {
		in, out := &in.ControlPlaneAsWorker, &out.ControlPlaneAsWorker
		*out = new(bool)
		**out = **in
	}
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = make([]InstanceTypeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Node != nil {
		in, out := &in.Node, &out.Node
		*out = make([]EdgeVsphereMachinePoolNodeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NodeRepaveInterval != nil {
		in, out := &in.NodeRepaveInterval, &out.NodeRepaveInterval
		*out = new(float64)
		**out = **in
	}
	if in.Placement != nil {
		in, out := &in.Placement, &out.Placement
		*out = make([]PlacementParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Taints != nil {
		in, out := &in.Taints, &out.Taints
		*out = make([]EdgeVsphereMachinePoolTaintsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UpdateStrategy != nil {
		in, out := &in.UpdateStrategy, &out.UpdateStrategy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeVsphereMachinePoolParameters.
func (in *EdgeVsphereMachinePoolParameters) DeepCopy() *EdgeVsphereMachinePoolParameters {
	if in == nil {
		return nil
	}
	out := new(EdgeVsphereMachinePoolParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeVsphereMachinePoolTaintsInitParameters) DeepCopyInto(out *EdgeVsphereMachinePoolTaintsInitParameters) {
	*out = *in
	if in.Effect != nil {
		in, out := &in.Effect, &out.Effect
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeVsphereMachinePoolTaintsInitParameters.
func (in *EdgeVsphereMachinePoolTaintsInitParameters) DeepCopy() *EdgeVsphereMachinePoolTaintsInitParameters {
	if in == nil {
		return nil
	}
	out := new(EdgeVsphereMachinePoolTaintsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeVsphereMachinePoolTaintsObservation) DeepCopyInto(out *EdgeVsphereMachinePoolTaintsObservation) {
	*out = *in
	if in.Effect != nil {
		in, out := &in.Effect, &out.Effect
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeVsphereMachinePoolTaintsObservation.
func (in *EdgeVsphereMachinePoolTaintsObservation) DeepCopy() *EdgeVsphereMachinePoolTaintsObservation {
	if in == nil {
		return nil
	}
	out := new(EdgeVsphereMachinePoolTaintsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeVsphereMachinePoolTaintsParameters) DeepCopyInto(out *EdgeVsphereMachinePoolTaintsParameters) {
	*out = *in
	if in.Effect != nil {
		in, out := &in.Effect, &out.Effect
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeVsphereMachinePoolTaintsParameters.
func (in *EdgeVsphereMachinePoolTaintsParameters) DeepCopy() *EdgeVsphereMachinePoolTaintsParameters {
	if in == nil {
		return nil
	}
	out := new(EdgeVsphereMachinePoolTaintsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeVsphereNamespacesInitParameters) DeepCopyInto(out *EdgeVsphereNamespacesInitParameters) {
	*out = *in
	if in.ImagesBlacklist != nil {
		in, out := &in.ImagesBlacklist, &out.ImagesBlacklist
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ResourceAllocation != nil {
		in, out := &in.ResourceAllocation, &out.ResourceAllocation
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeVsphereNamespacesInitParameters.
func (in *EdgeVsphereNamespacesInitParameters) DeepCopy() *EdgeVsphereNamespacesInitParameters {
	if in == nil {
		return nil
	}
	out := new(EdgeVsphereNamespacesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeVsphereNamespacesObservation) DeepCopyInto(out *EdgeVsphereNamespacesObservation) {
	*out = *in
	if in.ImagesBlacklist != nil {
		in, out := &in.ImagesBlacklist, &out.ImagesBlacklist
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ResourceAllocation != nil {
		in, out := &in.ResourceAllocation, &out.ResourceAllocation
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeVsphereNamespacesObservation.
func (in *EdgeVsphereNamespacesObservation) DeepCopy() *EdgeVsphereNamespacesObservation {
	if in == nil {
		return nil
	}
	out := new(EdgeVsphereNamespacesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeVsphereNamespacesParameters) DeepCopyInto(out *EdgeVsphereNamespacesParameters) {
	*out = *in
	if in.ImagesBlacklist != nil {
		in, out := &in.ImagesBlacklist, &out.ImagesBlacklist
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ResourceAllocation != nil {
		in, out := &in.ResourceAllocation, &out.ResourceAllocation
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeVsphereNamespacesParameters.
func (in *EdgeVsphereNamespacesParameters) DeepCopy() *EdgeVsphereNamespacesParameters {
	if in == nil {
		return nil
	}
	out := new(EdgeVsphereNamespacesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeVsphereObservation) DeepCopyInto(out *EdgeVsphereObservation) {
	*out = *in
	if in.AdminKubeConfig != nil {
		in, out := &in.AdminKubeConfig, &out.AdminKubeConfig
		*out = new(string)
		**out = **in
	}
	if in.BackupPolicy != nil {
		in, out := &in.BackupPolicy, &out.BackupPolicy
		*out = make([]EdgeVsphereBackupPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CloudConfig != nil {
		in, out := &in.CloudConfig, &out.CloudConfig
		*out = make([]EdgeVsphereCloudConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CloudConfigID != nil {
		in, out := &in.CloudConfigID, &out.CloudConfigID
		*out = new(string)
		**out = **in
	}
	if in.ClusterMetaAttribute != nil {
		in, out := &in.ClusterMetaAttribute, &out.ClusterMetaAttribute
		*out = new(string)
		**out = **in
	}
	if in.ClusterProfile != nil {
		in, out := &in.ClusterProfile, &out.ClusterProfile
		*out = make([]EdgeVsphereClusterProfileObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterRbacBinding != nil {
		in, out := &in.ClusterRbacBinding, &out.ClusterRbacBinding
		*out = make([]EdgeVsphereClusterRbacBindingObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Context != nil {
		in, out := &in.Context, &out.Context
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EdgeHostUID != nil {
		in, out := &in.EdgeHostUID, &out.EdgeHostUID
		*out = new(string)
		**out = **in
	}
	if in.ForceDelete != nil {
		in, out := &in.ForceDelete, &out.ForceDelete
		*out = new(bool)
		**out = **in
	}
	if in.ForceDeleteDelay != nil {
		in, out := &in.ForceDeleteDelay, &out.ForceDeleteDelay
		*out = new(float64)
		**out = **in
	}
	if in.HostConfig != nil {
		in, out := &in.HostConfig, &out.HostConfig
		*out = make([]EdgeVsphereHostConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Kubeconfig != nil {
		in, out := &in.Kubeconfig, &out.Kubeconfig
		*out = new(string)
		**out = **in
	}
	if in.LocationConfig != nil {
		in, out := &in.LocationConfig, &out.LocationConfig
		*out = make([]EdgeVsphereLocationConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MachinePool != nil {
		in, out := &in.MachinePool, &out.MachinePool
		*out = make([]EdgeVsphereMachinePoolObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]EdgeVsphereNamespacesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OsPatchAfter != nil {
		in, out := &in.OsPatchAfter, &out.OsPatchAfter
		*out = new(string)
		**out = **in
	}
	if in.OsPatchOnBoot != nil {
		in, out := &in.OsPatchOnBoot, &out.OsPatchOnBoot
		*out = new(bool)
		**out = **in
	}
	if in.OsPatchSchedule != nil {
		in, out := &in.OsPatchSchedule, &out.OsPatchSchedule
		*out = new(string)
		**out = **in
	}
	if in.PauseAgentUpgrades != nil {
		in, out := &in.PauseAgentUpgrades, &out.PauseAgentUpgrades
		*out = new(string)
		**out = **in
	}
	if in.ReviewRepaveState != nil {
		in, out := &in.ReviewRepaveState, &out.ReviewRepaveState
		*out = new(string)
		**out = **in
	}
	if in.ScanPolicy != nil {
		in, out := &in.ScanPolicy, &out.ScanPolicy
		*out = make([]EdgeVsphereScanPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SkipCompletion != nil {
		in, out := &in.SkipCompletion, &out.SkipCompletion
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeVsphereObservation.
func (in *EdgeVsphereObservation) DeepCopy() *EdgeVsphereObservation {
	if in == nil {
		return nil
	}
	out := new(EdgeVsphereObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeVsphereParameters) DeepCopyInto(out *EdgeVsphereParameters) {
	*out = *in
	if in.BackupPolicy != nil {
		in, out := &in.BackupPolicy, &out.BackupPolicy
		*out = make([]EdgeVsphereBackupPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CloudConfig != nil {
		in, out := &in.CloudConfig, &out.CloudConfig
		*out = make([]EdgeVsphereCloudConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterMetaAttribute != nil {
		in, out := &in.ClusterMetaAttribute, &out.ClusterMetaAttribute
		*out = new(string)
		**out = **in
	}
	if in.ClusterProfile != nil {
		in, out := &in.ClusterProfile, &out.ClusterProfile
		*out = make([]EdgeVsphereClusterProfileParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterRbacBinding != nil {
		in, out := &in.ClusterRbacBinding, &out.ClusterRbacBinding
		*out = make([]EdgeVsphereClusterRbacBindingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Context != nil {
		in, out := &in.Context, &out.Context
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EdgeHostUID != nil {
		in, out := &in.EdgeHostUID, &out.EdgeHostUID
		*out = new(string)
		**out = **in
	}
	if in.ForceDelete != nil {
		in, out := &in.ForceDelete, &out.ForceDelete
		*out = new(bool)
		**out = **in
	}
	if in.ForceDeleteDelay != nil {
		in, out := &in.ForceDeleteDelay, &out.ForceDeleteDelay
		*out = new(float64)
		**out = **in
	}
	if in.HostConfig != nil {
		in, out := &in.HostConfig, &out.HostConfig
		*out = make([]EdgeVsphereHostConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LocationConfig != nil {
		in, out := &in.LocationConfig, &out.LocationConfig
		*out = make([]EdgeVsphereLocationConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MachinePool != nil {
		in, out := &in.MachinePool, &out.MachinePool
		*out = make([]EdgeVsphereMachinePoolParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]EdgeVsphereNamespacesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OsPatchAfter != nil {
		in, out := &in.OsPatchAfter, &out.OsPatchAfter
		*out = new(string)
		**out = **in
	}
	if in.OsPatchOnBoot != nil {
		in, out := &in.OsPatchOnBoot, &out.OsPatchOnBoot
		*out = new(bool)
		**out = **in
	}
	if in.OsPatchSchedule != nil {
		in, out := &in.OsPatchSchedule, &out.OsPatchSchedule
		*out = new(string)
		**out = **in
	}
	if in.PauseAgentUpgrades != nil {
		in, out := &in.PauseAgentUpgrades, &out.PauseAgentUpgrades
		*out = new(string)
		**out = **in
	}
	if in.ReviewRepaveState != nil {
		in, out := &in.ReviewRepaveState, &out.ReviewRepaveState
		*out = new(string)
		**out = **in
	}
	if in.ScanPolicy != nil {
		in, out := &in.ScanPolicy, &out.ScanPolicy
		*out = make([]EdgeVsphereScanPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SkipCompletion != nil {
		in, out := &in.SkipCompletion, &out.SkipCompletion
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeVsphereParameters.
func (in *EdgeVsphereParameters) DeepCopy() *EdgeVsphereParameters {
	if in == nil {
		return nil
	}
	out := new(EdgeVsphereParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeVsphereScanPolicyInitParameters) DeepCopyInto(out *EdgeVsphereScanPolicyInitParameters) {
	*out = *in
	if in.ConfigurationScanSchedule != nil {
		in, out := &in.ConfigurationScanSchedule, &out.ConfigurationScanSchedule
		*out = new(string)
		**out = **in
	}
	if in.ConformanceScanSchedule != nil {
		in, out := &in.ConformanceScanSchedule, &out.ConformanceScanSchedule
		*out = new(string)
		**out = **in
	}
	if in.PenetrationScanSchedule != nil {
		in, out := &in.PenetrationScanSchedule, &out.PenetrationScanSchedule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeVsphereScanPolicyInitParameters.
func (in *EdgeVsphereScanPolicyInitParameters) DeepCopy() *EdgeVsphereScanPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(EdgeVsphereScanPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeVsphereScanPolicyObservation) DeepCopyInto(out *EdgeVsphereScanPolicyObservation) {
	*out = *in
	if in.ConfigurationScanSchedule != nil {
		in, out := &in.ConfigurationScanSchedule, &out.ConfigurationScanSchedule
		*out = new(string)
		**out = **in
	}
	if in.ConformanceScanSchedule != nil {
		in, out := &in.ConformanceScanSchedule, &out.ConformanceScanSchedule
		*out = new(string)
		**out = **in
	}
	if in.PenetrationScanSchedule != nil {
		in, out := &in.PenetrationScanSchedule, &out.PenetrationScanSchedule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeVsphereScanPolicyObservation.
func (in *EdgeVsphereScanPolicyObservation) DeepCopy() *EdgeVsphereScanPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(EdgeVsphereScanPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeVsphereScanPolicyParameters) DeepCopyInto(out *EdgeVsphereScanPolicyParameters) {
	*out = *in
	if in.ConfigurationScanSchedule != nil {
		in, out := &in.ConfigurationScanSchedule, &out.ConfigurationScanSchedule
		*out = new(string)
		**out = **in
	}
	if in.ConformanceScanSchedule != nil {
		in, out := &in.ConformanceScanSchedule, &out.ConformanceScanSchedule
		*out = new(string)
		**out = **in
	}
	if in.PenetrationScanSchedule != nil {
		in, out := &in.PenetrationScanSchedule, &out.PenetrationScanSchedule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeVsphereScanPolicyParameters.
func (in *EdgeVsphereScanPolicyParameters) DeepCopy() *EdgeVsphereScanPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(EdgeVsphereScanPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeVsphereSpec) DeepCopyInto(out *EdgeVsphereSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeVsphereSpec.
func (in *EdgeVsphereSpec) DeepCopy() *EdgeVsphereSpec {
	if in == nil {
		return nil
	}
	out := new(EdgeVsphereSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeVsphereStatus) DeepCopyInto(out *EdgeVsphereStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeVsphereStatus.
func (in *EdgeVsphereStatus) DeepCopy() *EdgeVsphereStatus {
	if in == nil {
		return nil
	}
	out := new(EdgeVsphereStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Eks) DeepCopyInto(out *Eks) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Eks.
func (in *Eks) DeepCopy() *Eks {
	if in == nil {
		return nil
	}
	out := new(Eks)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Eks) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EksBackupPolicyInitParameters) DeepCopyInto(out *EksBackupPolicyInitParameters) {
	*out = *in
	if in.BackupLocationID != nil {
		in, out := &in.BackupLocationID, &out.BackupLocationID
		*out = new(string)
		**out = **in
	}
	if in.ClusterUids != nil {
		in, out := &in.ClusterUids, &out.ClusterUids
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExpiryInHour != nil {
		in, out := &in.ExpiryInHour, &out.ExpiryInHour
		*out = new(float64)
		**out = **in
	}
	if in.IncludeAllClusters != nil {
		in, out := &in.IncludeAllClusters, &out.IncludeAllClusters
		*out = new(bool)
		**out = **in
	}
	if in.IncludeClusterResources != nil {
		in, out := &in.IncludeClusterResources, &out.IncludeClusterResources
		*out = new(bool)
		**out = **in
	}
	if in.IncludeDisks != nil {
		in, out := &in.IncludeDisks, &out.IncludeDisks
		*out = new(bool)
		**out = **in
	}
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EksBackupPolicyInitParameters.
func (in *EksBackupPolicyInitParameters) DeepCopy() *EksBackupPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(EksBackupPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EksBackupPolicyObservation) DeepCopyInto(out *EksBackupPolicyObservation) {
	*out = *in
	if in.BackupLocationID != nil {
		in, out := &in.BackupLocationID, &out.BackupLocationID
		*out = new(string)
		**out = **in
	}
	if in.ClusterUids != nil {
		in, out := &in.ClusterUids, &out.ClusterUids
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExpiryInHour != nil {
		in, out := &in.ExpiryInHour, &out.ExpiryInHour
		*out = new(float64)
		**out = **in
	}
	if in.IncludeAllClusters != nil {
		in, out := &in.IncludeAllClusters, &out.IncludeAllClusters
		*out = new(bool)
		**out = **in
	}
	if in.IncludeClusterResources != nil {
		in, out := &in.IncludeClusterResources, &out.IncludeClusterResources
		*out = new(bool)
		**out = **in
	}
	if in.IncludeDisks != nil {
		in, out := &in.IncludeDisks, &out.IncludeDisks
		*out = new(bool)
		**out = **in
	}
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EksBackupPolicyObservation.
func (in *EksBackupPolicyObservation) DeepCopy() *EksBackupPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(EksBackupPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EksBackupPolicyParameters) DeepCopyInto(out *EksBackupPolicyParameters) {
	*out = *in
	if in.BackupLocationID != nil {
		in, out := &in.BackupLocationID, &out.BackupLocationID
		*out = new(string)
		**out = **in
	}
	if in.ClusterUids != nil {
		in, out := &in.ClusterUids, &out.ClusterUids
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExpiryInHour != nil {
		in, out := &in.ExpiryInHour, &out.ExpiryInHour
		*out = new(float64)
		**out = **in
	}
	if in.IncludeAllClusters != nil {
		in, out := &in.IncludeAllClusters, &out.IncludeAllClusters
		*out = new(bool)
		**out = **in
	}
	if in.IncludeClusterResources != nil {
		in, out := &in.IncludeClusterResources, &out.IncludeClusterResources
		*out = new(bool)
		**out = **in
	}
	if in.IncludeDisks != nil {
		in, out := &in.IncludeDisks, &out.IncludeDisks
		*out = new(bool)
		**out = **in
	}
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EksBackupPolicyParameters.
func (in *EksBackupPolicyParameters) DeepCopy() *EksBackupPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(EksBackupPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EksCloudConfigInitParameters) DeepCopyInto(out *EksCloudConfigInitParameters) {
	*out = *in
	if in.AzSubnets != nil {
		in, out := &in.AzSubnets, &out.AzSubnets
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Azs != nil {
		in, out := &in.Azs, &out.Azs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.EncryptionConfigArn != nil {
		in, out := &in.EncryptionConfigArn, &out.EncryptionConfigArn
		*out = new(string)
		**out = **in
	}
	if in.EndpointAccess != nil {
		in, out := &in.EndpointAccess, &out.EndpointAccess
		*out = new(string)
		**out = **in
	}
	if in.PrivateAccessCidrs != nil {
		in, out := &in.PrivateAccessCidrs, &out.PrivateAccessCidrs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PublicAccessCidrs != nil {
		in, out := &in.PublicAccessCidrs, &out.PublicAccessCidrs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SSHKeyName != nil {
		in, out := &in.SSHKeyName, &out.SSHKeyName
		*out = new(string)
		**out = **in
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EksCloudConfigInitParameters.
func (in *EksCloudConfigInitParameters) DeepCopy() *EksCloudConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(EksCloudConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EksCloudConfigObservation) DeepCopyInto(out *EksCloudConfigObservation) {
	*out = *in
	if in.AzSubnets != nil {
		in, out := &in.AzSubnets, &out.AzSubnets
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Azs != nil {
		in, out := &in.Azs, &out.Azs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.EncryptionConfigArn != nil {
		in, out := &in.EncryptionConfigArn, &out.EncryptionConfigArn
		*out = new(string)
		**out = **in
	}
	if in.EndpointAccess != nil {
		in, out := &in.EndpointAccess, &out.EndpointAccess
		*out = new(string)
		**out = **in
	}
	if in.PrivateAccessCidrs != nil {
		in, out := &in.PrivateAccessCidrs, &out.PrivateAccessCidrs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PublicAccessCidrs != nil {
		in, out := &in.PublicAccessCidrs, &out.PublicAccessCidrs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SSHKeyName != nil {
		in, out := &in.SSHKeyName, &out.SSHKeyName
		*out = new(string)
		**out = **in
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EksCloudConfigObservation.
func (in *EksCloudConfigObservation) DeepCopy() *EksCloudConfigObservation {
	if in == nil {
		return nil
	}
	out := new(EksCloudConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EksCloudConfigParameters) DeepCopyInto(out *EksCloudConfigParameters) {
	*out = *in
	if in.AzSubnets != nil {
		in, out := &in.AzSubnets, &out.AzSubnets
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Azs != nil {
		in, out := &in.Azs, &out.Azs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.EncryptionConfigArn != nil {
		in, out := &in.EncryptionConfigArn, &out.EncryptionConfigArn
		*out = new(string)
		**out = **in
	}
	if in.EndpointAccess != nil {
		in, out := &in.EndpointAccess, &out.EndpointAccess
		*out = new(string)
		**out = **in
	}
	if in.PrivateAccessCidrs != nil {
		in, out := &in.PrivateAccessCidrs, &out.PrivateAccessCidrs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PublicAccessCidrs != nil {
		in, out := &in.PublicAccessCidrs, &out.PublicAccessCidrs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SSHKeyName != nil {
		in, out := &in.SSHKeyName, &out.SSHKeyName
		*out = new(string)
		**out = **in
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EksCloudConfigParameters.
func (in *EksCloudConfigParameters) DeepCopy() *EksCloudConfigParameters {
	if in == nil {
		return nil
	}
	out := new(EksCloudConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EksClusterProfileInitParameters) DeepCopyInto(out *EksClusterProfileInitParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Pack != nil {
		in, out := &in.Pack, &out.Pack
		*out = make([]EksClusterProfilePackInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EksClusterProfileInitParameters.
func (in *EksClusterProfileInitParameters) DeepCopy() *EksClusterProfileInitParameters {
	if in == nil {
		return nil
	}
	out := new(EksClusterProfileInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EksClusterProfileObservation) DeepCopyInto(out *EksClusterProfileObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Pack != nil {
		in, out := &in.Pack, &out.Pack
		*out = make([]EksClusterProfilePackObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EksClusterProfileObservation.
func (in *EksClusterProfileObservation) DeepCopy() *EksClusterProfileObservation {
	if in == nil {
		return nil
	}
	out := new(EksClusterProfileObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EksClusterProfilePackInitParameters) DeepCopyInto(out *EksClusterProfilePackInitParameters) {
	*out = *in
	if in.Manifest != nil {
		in, out := &in.Manifest, &out.Manifest
		*out = make([]EksClusterProfilePackManifestInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RegistryUID != nil {
		in, out := &in.RegistryUID, &out.RegistryUID
		*out = new(string)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EksClusterProfilePackInitParameters.
func (in *EksClusterProfilePackInitParameters) DeepCopy() *EksClusterProfilePackInitParameters {
	if in == nil {
		return nil
	}
	out := new(EksClusterProfilePackInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EksClusterProfilePackManifestInitParameters) DeepCopyInto(out *EksClusterProfilePackManifestInitParameters) {
	*out = *in
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EksClusterProfilePackManifestInitParameters.
func (in *EksClusterProfilePackManifestInitParameters) DeepCopy() *EksClusterProfilePackManifestInitParameters {
	if in == nil {
		return nil
	}
	out := new(EksClusterProfilePackManifestInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EksClusterProfilePackManifestObservation) DeepCopyInto(out *EksClusterProfilePackManifestObservation) {
	*out = *in
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EksClusterProfilePackManifestObservation.
func (in *EksClusterProfilePackManifestObservation) DeepCopy() *EksClusterProfilePackManifestObservation {
	if in == nil {
		return nil
	}
	out := new(EksClusterProfilePackManifestObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EksClusterProfilePackManifestParameters) DeepCopyInto(out *EksClusterProfilePackManifestParameters) {
	*out = *in
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EksClusterProfilePackManifestParameters.
func (in *EksClusterProfilePackManifestParameters) DeepCopy() *EksClusterProfilePackManifestParameters {
	if in == nil {
		return nil
	}
	out := new(EksClusterProfilePackManifestParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EksClusterProfilePackObservation) DeepCopyInto(out *EksClusterProfilePackObservation) {
	*out = *in
	if in.Manifest != nil {
		in, out := &in.Manifest, &out.Manifest
		*out = make([]EksClusterProfilePackManifestObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RegistryUID != nil {
		in, out := &in.RegistryUID, &out.RegistryUID
		*out = new(string)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EksClusterProfilePackObservation.
func (in *EksClusterProfilePackObservation) DeepCopy() *EksClusterProfilePackObservation {
	if in == nil {
		return nil
	}
	out := new(EksClusterProfilePackObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EksClusterProfilePackParameters) DeepCopyInto(out *EksClusterProfilePackParameters) {
	*out = *in
	if in.Manifest != nil {
		in, out := &in.Manifest, &out.Manifest
		*out = make([]EksClusterProfilePackManifestParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RegistryUID != nil {
		in, out := &in.RegistryUID, &out.RegistryUID
		*out = new(string)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EksClusterProfilePackParameters.
func (in *EksClusterProfilePackParameters) DeepCopy() *EksClusterProfilePackParameters {
	if in == nil {
		return nil
	}
	out := new(EksClusterProfilePackParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EksClusterProfileParameters) DeepCopyInto(out *EksClusterProfileParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Pack != nil {
		in, out := &in.Pack, &out.Pack
		*out = make([]EksClusterProfilePackParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EksClusterProfileParameters.
func (in *EksClusterProfileParameters) DeepCopy() *EksClusterProfileParameters {
	if in == nil {
		return nil
	}
	out := new(EksClusterProfileParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EksClusterRbacBindingInitParameters) DeepCopyInto(out *EksClusterRbacBindingInitParameters) {
	*out = *in
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Subjects != nil {
		in, out := &in.Subjects, &out.Subjects
		*out = make([]EksClusterRbacBindingSubjectsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EksClusterRbacBindingInitParameters.
func (in *EksClusterRbacBindingInitParameters) DeepCopy() *EksClusterRbacBindingInitParameters {
	if in == nil {
		return nil
	}
	out := new(EksClusterRbacBindingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EksClusterRbacBindingObservation) DeepCopyInto(out *EksClusterRbacBindingObservation) {
	*out = *in
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Subjects != nil {
		in, out := &in.Subjects, &out.Subjects
		*out = make([]EksClusterRbacBindingSubjectsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EksClusterRbacBindingObservation.
func (in *EksClusterRbacBindingObservation) DeepCopy() *EksClusterRbacBindingObservation {
	if in == nil {
		return nil
	}
	out := new(EksClusterRbacBindingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EksClusterRbacBindingParameters) DeepCopyInto(out *EksClusterRbacBindingParameters) {
	*out = *in
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Subjects != nil {
		in, out := &in.Subjects, &out.Subjects
		*out = make([]EksClusterRbacBindingSubjectsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EksClusterRbacBindingParameters.
func (in *EksClusterRbacBindingParameters) DeepCopy() *EksClusterRbacBindingParameters {
	if in == nil {
		return nil
	}
	out := new(EksClusterRbacBindingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EksClusterRbacBindingSubjectsInitParameters) DeepCopyInto(out *EksClusterRbacBindingSubjectsInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EksClusterRbacBindingSubjectsInitParameters.
func (in *EksClusterRbacBindingSubjectsInitParameters) DeepCopy() *EksClusterRbacBindingSubjectsInitParameters {
	if in == nil {
		return nil
	}
	out := new(EksClusterRbacBindingSubjectsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EksClusterRbacBindingSubjectsObservation) DeepCopyInto(out *EksClusterRbacBindingSubjectsObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EksClusterRbacBindingSubjectsObservation.
func (in *EksClusterRbacBindingSubjectsObservation) DeepCopy() *EksClusterRbacBindingSubjectsObservation {
	if in == nil {
		return nil
	}
	out := new(EksClusterRbacBindingSubjectsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EksClusterRbacBindingSubjectsParameters) DeepCopyInto(out *EksClusterRbacBindingSubjectsParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EksClusterRbacBindingSubjectsParameters.
func (in *EksClusterRbacBindingSubjectsParameters) DeepCopy() *EksClusterRbacBindingSubjectsParameters {
	if in == nil {
		return nil
	}
	out := new(EksClusterRbacBindingSubjectsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EksHostConfigInitParameters) DeepCopyInto(out *EksHostConfigInitParameters) {
	*out = *in
	if in.ExternalTrafficPolicy != nil {
		in, out := &in.ExternalTrafficPolicy, &out.ExternalTrafficPolicy
		*out = new(string)
		**out = **in
	}
	if in.HostEndpointType != nil {
		in, out := &in.HostEndpointType, &out.HostEndpointType
		*out = new(string)
		**out = **in
	}
	if in.IngressHost != nil {
		in, out := &in.IngressHost, &out.IngressHost
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancerSourceRanges != nil {
		in, out := &in.LoadBalancerSourceRanges, &out.LoadBalancerSourceRanges
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EksHostConfigInitParameters.
func (in *EksHostConfigInitParameters) DeepCopy() *EksHostConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(EksHostConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EksHostConfigObservation) DeepCopyInto(out *EksHostConfigObservation) {
	*out = *in
	if in.ExternalTrafficPolicy != nil {
		in, out := &in.ExternalTrafficPolicy, &out.ExternalTrafficPolicy
		*out = new(string)
		**out = **in
	}
	if in.HostEndpointType != nil {
		in, out := &in.HostEndpointType, &out.HostEndpointType
		*out = new(string)
		**out = **in
	}
	if in.IngressHost != nil {
		in, out := &in.IngressHost, &out.IngressHost
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancerSourceRanges != nil {
		in, out := &in.LoadBalancerSourceRanges, &out.LoadBalancerSourceRanges
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EksHostConfigObservation.
func (in *EksHostConfigObservation) DeepCopy() *EksHostConfigObservation {
	if in == nil {
		return nil
	}
	out := new(EksHostConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EksHostConfigParameters) DeepCopyInto(out *EksHostConfigParameters) {
	*out = *in
	if in.ExternalTrafficPolicy != nil {
		in, out := &in.ExternalTrafficPolicy, &out.ExternalTrafficPolicy
		*out = new(string)
		**out = **in
	}
	if in.HostEndpointType != nil {
		in, out := &in.HostEndpointType, &out.HostEndpointType
		*out = new(string)
		**out = **in
	}
	if in.IngressHost != nil {
		in, out := &in.IngressHost, &out.IngressHost
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancerSourceRanges != nil {
		in, out := &in.LoadBalancerSourceRanges, &out.LoadBalancerSourceRanges
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EksHostConfigParameters.
func (in *EksHostConfigParameters) DeepCopy() *EksHostConfigParameters {
	if in == nil {
		return nil
	}
	out := new(EksHostConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EksInitParameters) DeepCopyInto(out *EksInitParameters) {
	*out = *in
	if in.ApplySetting != nil {
		in, out := &in.ApplySetting, &out.ApplySetting
		*out = new(string)
		**out = **in
	}
	if in.BackupPolicy != nil {
		in, out := &in.BackupPolicy, &out.BackupPolicy
		*out = make([]EksBackupPolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CloudAccountID != nil {
		in, out := &in.CloudAccountID, &out.CloudAccountID
		*out = new(string)
		**out = **in
	}
	if in.CloudConfig != nil {
		in, out := &in.CloudConfig, &out.CloudConfig
		*out = make([]EksCloudConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterMetaAttribute != nil {
		in, out := &in.ClusterMetaAttribute, &out.ClusterMetaAttribute
		*out = new(string)
		**out = **in
	}
	if in.ClusterProfile != nil {
		in, out := &in.ClusterProfile, &out.ClusterProfile
		*out = make([]EksClusterProfileInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterRbacBinding != nil {
		in, out := &in.ClusterRbacBinding, &out.ClusterRbacBinding
		*out = make([]EksClusterRbacBindingInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Context != nil {
		in, out := &in.Context, &out.Context
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.FargateProfile != nil {
		in, out := &in.FargateProfile, &out.FargateProfile
		*out = make([]FargateProfileInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ForceDelete != nil {
		in, out := &in.ForceDelete, &out.ForceDelete
		*out = new(bool)
		**out = **in
	}
	if in.ForceDeleteDelay != nil {
		in, out := &in.ForceDeleteDelay, &out.ForceDeleteDelay
		*out = new(float64)
		**out = **in
	}
	if in.HostConfig != nil {
		in, out := &in.HostConfig, &out.HostConfig
		*out = make([]EksHostConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MachinePool != nil {
		in, out := &in.MachinePool, &out.MachinePool
		*out = make([]EksMachinePoolInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]EksNamespacesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OsPatchAfter != nil {
		in, out := &in.OsPatchAfter, &out.OsPatchAfter
		*out = new(string)
		**out = **in
	}
	if in.OsPatchOnBoot != nil {
		in, out := &in.OsPatchOnBoot, &out.OsPatchOnBoot
		*out = new(bool)
		**out = **in
	}
	if in.OsPatchSchedule != nil {
		in, out := &in.OsPatchSchedule, &out.OsPatchSchedule
		*out = new(string)
		**out = **in
	}
	if in.PauseAgentUpgrades != nil {
		in, out := &in.PauseAgentUpgrades, &out.PauseAgentUpgrades
		*out = new(string)
		**out = **in
	}
	if in.ReviewRepaveState != nil {
		in, out := &in.ReviewRepaveState, &out.ReviewRepaveState
		*out = new(string)
		**out = **in
	}
	if in.ScanPolicy != nil {
		in, out := &in.ScanPolicy, &out.ScanPolicy
		*out = make([]EksScanPolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SkipCompletion != nil {
		in, out := &in.SkipCompletion, &out.SkipCompletion
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EksInitParameters.
func (in *EksInitParameters) DeepCopy() *EksInitParameters {
	if in == nil {
		return nil
	}
	out := new(EksInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EksLaunchTemplateInitParameters) DeepCopyInto(out *EksLaunchTemplateInitParameters) {
	*out = *in
	if in.AMIID != nil {
		in, out := &in.AMIID, &out.AMIID
		*out = new(string)
		**out = **in
	}
	if in.AdditionalSecurityGroups != nil {
		in, out := &in.AdditionalSecurityGroups, &out.AdditionalSecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.RootVolumeIops != nil {
		in, out := &in.RootVolumeIops, &out.RootVolumeIops
		*out = new(float64)
		**out = **in
	}
	if in.RootVolumeThroughput != nil {
		in, out := &in.RootVolumeThroughput, &out.RootVolumeThroughput
		*out = new(float64)
		**out = **in
	}
	if in.RootVolumeType != nil {
		in, out := &in.RootVolumeType, &out.RootVolumeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EksLaunchTemplateInitParameters.
func (in *EksLaunchTemplateInitParameters) DeepCopy() *EksLaunchTemplateInitParameters {
	if in == nil {
		return nil
	}
	out := new(EksLaunchTemplateInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EksLaunchTemplateObservation) DeepCopyInto(out *EksLaunchTemplateObservation) {
	*out = *in
	if in.AMIID != nil {
		in, out := &in.AMIID, &out.AMIID
		*out = new(string)
		**out = **in
	}
	if in.AdditionalSecurityGroups != nil {
		in, out := &in.AdditionalSecurityGroups, &out.AdditionalSecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.RootVolumeIops != nil {
		in, out := &in.RootVolumeIops, &out.RootVolumeIops
		*out = new(float64)
		**out = **in
	}
	if in.RootVolumeThroughput != nil {
		in, out := &in.RootVolumeThroughput, &out.RootVolumeThroughput
		*out = new(float64)
		**out = **in
	}
	if in.RootVolumeType != nil {
		in, out := &in.RootVolumeType, &out.RootVolumeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EksLaunchTemplateObservation.
func (in *EksLaunchTemplateObservation) DeepCopy() *EksLaunchTemplateObservation {
	if in == nil {
		return nil
	}
	out := new(EksLaunchTemplateObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EksLaunchTemplateParameters) DeepCopyInto(out *EksLaunchTemplateParameters) {
	*out = *in
	if in.AMIID != nil {
		in, out := &in.AMIID, &out.AMIID
		*out = new(string)
		**out = **in
	}
	if in.AdditionalSecurityGroups != nil {
		in, out := &in.AdditionalSecurityGroups, &out.AdditionalSecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.RootVolumeIops != nil {
		in, out := &in.RootVolumeIops, &out.RootVolumeIops
		*out = new(float64)
		**out = **in
	}
	if in.RootVolumeThroughput != nil {
		in, out := &in.RootVolumeThroughput, &out.RootVolumeThroughput
		*out = new(float64)
		**out = **in
	}
	if in.RootVolumeType != nil {
		in, out := &in.RootVolumeType, &out.RootVolumeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EksLaunchTemplateParameters.
func (in *EksLaunchTemplateParameters) DeepCopy() *EksLaunchTemplateParameters {
	if in == nil {
		return nil
	}
	out := new(EksLaunchTemplateParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EksList) DeepCopyInto(out *EksList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Eks, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EksList.
func (in *EksList) DeepCopy() *EksList {
	if in == nil {
		return nil
	}
	out := new(EksList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *EksList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EksLocationConfigInitParameters) DeepCopyInto(out *EksLocationConfigInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EksLocationConfigInitParameters.
func (in *EksLocationConfigInitParameters) DeepCopy() *EksLocationConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(EksLocationConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EksLocationConfigObservation) DeepCopyInto(out *EksLocationConfigObservation) {
	*out = *in
	if in.CountryCode != nil {
		in, out := &in.CountryCode, &out.CountryCode
		*out = new(string)
		**out = **in
	}
	if in.CountryName != nil {
		in, out := &in.CountryName, &out.CountryName
		*out = new(string)
		**out = **in
	}
	if in.Latitude != nil {
		in, out := &in.Latitude, &out.Latitude
		*out = new(float64)
		**out = **in
	}
	if in.Longitude != nil {
		in, out := &in.Longitude, &out.Longitude
		*out = new(float64)
		**out = **in
	}
	if in.RegionCode != nil {
		in, out := &in.RegionCode, &out.RegionCode
		*out = new(string)
		**out = **in
	}
	if in.RegionName != nil {
		in, out := &in.RegionName, &out.RegionName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EksLocationConfigObservation.
func (in *EksLocationConfigObservation) DeepCopy() *EksLocationConfigObservation {
	if in == nil {
		return nil
	}
	out := new(EksLocationConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EksLocationConfigParameters) DeepCopyInto(out *EksLocationConfigParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EksLocationConfigParameters.
func (in *EksLocationConfigParameters) DeepCopy() *EksLocationConfigParameters {
	if in == nil {
		return nil
	}
	out := new(EksLocationConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EksMachinePoolInitParameters) DeepCopyInto(out *EksMachinePoolInitParameters) {
	*out = *in
	if in.AdditionalLabels != nil {
		in, out := &in.AdditionalLabels, &out.AdditionalLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.AzSubnets != nil {
		in, out := &in.AzSubnets, &out.AzSubnets
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Azs != nil {
		in, out := &in.Azs, &out.Azs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CapacityType != nil {
		in, out := &in.CapacityType, &out.CapacityType
		*out = new(string)
		**out = **in
	}
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.DiskSizeGb != nil {
		in, out := &in.DiskSizeGb, &out.DiskSizeGb
		*out = new(float64)
		**out = **in
	}
	if in.EksLaunchTemplate != nil {
		in, out := &in.EksLaunchTemplate, &out.EksLaunchTemplate
		*out = make([]EksLaunchTemplateInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.MaxPrice != nil {
		in, out := &in.MaxPrice, &out.MaxPrice
		*out = new(string)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Node != nil {
		in, out := &in.Node, &out.Node
		*out = make([]EksMachinePoolNodeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Taints != nil {
		in, out := &in.Taints, &out.Taints
		*out = make([]EksMachinePoolTaintsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UpdateStrategy != nil {
		in, out := &in.UpdateStrategy, &out.UpdateStrategy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EksMachinePoolInitParameters.
func (in *EksMachinePoolInitParameters) DeepCopy() *EksMachinePoolInitParameters {
	if in == nil {
		return nil
	}
	out := new(EksMachinePoolInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EksMachinePoolNodeInitParameters) DeepCopyInto(out *EksMachinePoolNodeInitParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.NodeID != nil {
		in, out := &in.NodeID, &out.NodeID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EksMachinePoolNodeInitParameters.
func (in *EksMachinePoolNodeInitParameters) DeepCopy() *EksMachinePoolNodeInitParameters {
	if in == nil {
		return nil
	}
	out := new(EksMachinePoolNodeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EksMachinePoolNodeObservation) DeepCopyInto(out *EksMachinePoolNodeObservation) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.NodeID != nil {
		in, out := &in.NodeID, &out.NodeID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EksMachinePoolNodeObservation.
func (in *EksMachinePoolNodeObservation) DeepCopy() *EksMachinePoolNodeObservation {
	if in == nil {
		return nil
	}
	out := new(EksMachinePoolNodeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EksMachinePoolNodeParameters) DeepCopyInto(out *EksMachinePoolNodeParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.NodeID != nil {
		in, out := &in.NodeID, &out.NodeID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EksMachinePoolNodeParameters.
func (in *EksMachinePoolNodeParameters) DeepCopy() *EksMachinePoolNodeParameters {
	if in == nil {
		return nil
	}
	out := new(EksMachinePoolNodeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EksMachinePoolObservation) DeepCopyInto(out *EksMachinePoolObservation) {
	*out = *in
	if in.AdditionalLabels != nil {
		in, out := &in.AdditionalLabels, &out.AdditionalLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.AzSubnets != nil {
		in, out := &in.AzSubnets, &out.AzSubnets
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Azs != nil {
		in, out := &in.Azs, &out.Azs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CapacityType != nil {
		in, out := &in.CapacityType, &out.CapacityType
		*out = new(string)
		**out = **in
	}
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.DiskSizeGb != nil {
		in, out := &in.DiskSizeGb, &out.DiskSizeGb
		*out = new(float64)
		**out = **in
	}
	if in.EksLaunchTemplate != nil {
		in, out := &in.EksLaunchTemplate, &out.EksLaunchTemplate
		*out = make([]EksLaunchTemplateObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.MaxPrice != nil {
		in, out := &in.MaxPrice, &out.MaxPrice
		*out = new(string)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Node != nil {
		in, out := &in.Node, &out.Node
		*out = make([]EksMachinePoolNodeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Taints != nil {
		in, out := &in.Taints, &out.Taints
		*out = make([]EksMachinePoolTaintsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UpdateStrategy != nil {
		in, out := &in.UpdateStrategy, &out.UpdateStrategy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EksMachinePoolObservation.
func (in *EksMachinePoolObservation) DeepCopy() *EksMachinePoolObservation {
	if in == nil {
		return nil
	}
	out := new(EksMachinePoolObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EksMachinePoolParameters) DeepCopyInto(out *EksMachinePoolParameters) {
	*out = *in
	if in.AdditionalLabels != nil {
		in, out := &in.AdditionalLabels, &out.AdditionalLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.AzSubnets != nil {
		in, out := &in.AzSubnets, &out.AzSubnets
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Azs != nil {
		in, out := &in.Azs, &out.Azs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CapacityType != nil {
		in, out := &in.CapacityType, &out.CapacityType
		*out = new(string)
		**out = **in
	}
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.DiskSizeGb != nil {
		in, out := &in.DiskSizeGb, &out.DiskSizeGb
		*out = new(float64)
		**out = **in
	}
	if in.EksLaunchTemplate != nil {
		in, out := &in.EksLaunchTemplate, &out.EksLaunchTemplate
		*out = make([]EksLaunchTemplateParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.MaxPrice != nil {
		in, out := &in.MaxPrice, &out.MaxPrice
		*out = new(string)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Node != nil {
		in, out := &in.Node, &out.Node
		*out = make([]EksMachinePoolNodeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Taints != nil {
		in, out := &in.Taints, &out.Taints
		*out = make([]EksMachinePoolTaintsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UpdateStrategy != nil {
		in, out := &in.UpdateStrategy, &out.UpdateStrategy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EksMachinePoolParameters.
func (in *EksMachinePoolParameters) DeepCopy() *EksMachinePoolParameters {
	if in == nil {
		return nil
	}
	out := new(EksMachinePoolParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EksMachinePoolTaintsInitParameters) DeepCopyInto(out *EksMachinePoolTaintsInitParameters) {
	*out = *in
	if in.Effect != nil {
		in, out := &in.Effect, &out.Effect
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EksMachinePoolTaintsInitParameters.
func (in *EksMachinePoolTaintsInitParameters) DeepCopy() *EksMachinePoolTaintsInitParameters {
	if in == nil {
		return nil
	}
	out := new(EksMachinePoolTaintsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EksMachinePoolTaintsObservation) DeepCopyInto(out *EksMachinePoolTaintsObservation) {
	*out = *in
	if in.Effect != nil {
		in, out := &in.Effect, &out.Effect
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EksMachinePoolTaintsObservation.
func (in *EksMachinePoolTaintsObservation) DeepCopy() *EksMachinePoolTaintsObservation {
	if in == nil {
		return nil
	}
	out := new(EksMachinePoolTaintsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EksMachinePoolTaintsParameters) DeepCopyInto(out *EksMachinePoolTaintsParameters) {
	*out = *in
	if in.Effect != nil {
		in, out := &in.Effect, &out.Effect
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EksMachinePoolTaintsParameters.
func (in *EksMachinePoolTaintsParameters) DeepCopy() *EksMachinePoolTaintsParameters {
	if in == nil {
		return nil
	}
	out := new(EksMachinePoolTaintsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EksNamespacesInitParameters) DeepCopyInto(out *EksNamespacesInitParameters) {
	*out = *in
	if in.ImagesBlacklist != nil {
		in, out := &in.ImagesBlacklist, &out.ImagesBlacklist
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ResourceAllocation != nil {
		in, out := &in.ResourceAllocation, &out.ResourceAllocation
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EksNamespacesInitParameters.
func (in *EksNamespacesInitParameters) DeepCopy() *EksNamespacesInitParameters {
	if in == nil {
		return nil
	}
	out := new(EksNamespacesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EksNamespacesObservation) DeepCopyInto(out *EksNamespacesObservation) {
	*out = *in
	if in.ImagesBlacklist != nil {
		in, out := &in.ImagesBlacklist, &out.ImagesBlacklist
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ResourceAllocation != nil {
		in, out := &in.ResourceAllocation, &out.ResourceAllocation
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EksNamespacesObservation.
func (in *EksNamespacesObservation) DeepCopy() *EksNamespacesObservation {
	if in == nil {
		return nil
	}
	out := new(EksNamespacesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EksNamespacesParameters) DeepCopyInto(out *EksNamespacesParameters) {
	*out = *in
	if in.ImagesBlacklist != nil {
		in, out := &in.ImagesBlacklist, &out.ImagesBlacklist
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ResourceAllocation != nil {
		in, out := &in.ResourceAllocation, &out.ResourceAllocation
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EksNamespacesParameters.
func (in *EksNamespacesParameters) DeepCopy() *EksNamespacesParameters {
	if in == nil {
		return nil
	}
	out := new(EksNamespacesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EksObservation) DeepCopyInto(out *EksObservation) {
	*out = *in
	if in.AdminKubeConfig != nil {
		in, out := &in.AdminKubeConfig, &out.AdminKubeConfig
		*out = new(string)
		**out = **in
	}
	if in.ApplySetting != nil {
		in, out := &in.ApplySetting, &out.ApplySetting
		*out = new(string)
		**out = **in
	}
	if in.BackupPolicy != nil {
		in, out := &in.BackupPolicy, &out.BackupPolicy
		*out = make([]EksBackupPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CloudAccountID != nil {
		in, out := &in.CloudAccountID, &out.CloudAccountID
		*out = new(string)
		**out = **in
	}
	if in.CloudConfig != nil {
		in, out := &in.CloudConfig, &out.CloudConfig
		*out = make([]EksCloudConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CloudConfigID != nil {
		in, out := &in.CloudConfigID, &out.CloudConfigID
		*out = new(string)
		**out = **in
	}
	if in.ClusterMetaAttribute != nil {
		in, out := &in.ClusterMetaAttribute, &out.ClusterMetaAttribute
		*out = new(string)
		**out = **in
	}
	if in.ClusterProfile != nil {
		in, out := &in.ClusterProfile, &out.ClusterProfile
		*out = make([]EksClusterProfileObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterRbacBinding != nil {
		in, out := &in.ClusterRbacBinding, &out.ClusterRbacBinding
		*out = make([]EksClusterRbacBindingObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Context != nil {
		in, out := &in.Context, &out.Context
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.FargateProfile != nil {
		in, out := &in.FargateProfile, &out.FargateProfile
		*out = make([]FargateProfileObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ForceDelete != nil {
		in, out := &in.ForceDelete, &out.ForceDelete
		*out = new(bool)
		**out = **in
	}
	if in.ForceDeleteDelay != nil {
		in, out := &in.ForceDeleteDelay, &out.ForceDeleteDelay
		*out = new(float64)
		**out = **in
	}
	if in.HostConfig != nil {
		in, out := &in.HostConfig, &out.HostConfig
		*out = make([]EksHostConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Kubeconfig != nil {
		in, out := &in.Kubeconfig, &out.Kubeconfig
		*out = new(string)
		**out = **in
	}
	if in.LocationConfig != nil {
		in, out := &in.LocationConfig, &out.LocationConfig
		*out = make([]EksLocationConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MachinePool != nil {
		in, out := &in.MachinePool, &out.MachinePool
		*out = make([]EksMachinePoolObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]EksNamespacesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OsPatchAfter != nil {
		in, out := &in.OsPatchAfter, &out.OsPatchAfter
		*out = new(string)
		**out = **in
	}
	if in.OsPatchOnBoot != nil {
		in, out := &in.OsPatchOnBoot, &out.OsPatchOnBoot
		*out = new(bool)
		**out = **in
	}
	if in.OsPatchSchedule != nil {
		in, out := &in.OsPatchSchedule, &out.OsPatchSchedule
		*out = new(string)
		**out = **in
	}
	if in.PauseAgentUpgrades != nil {
		in, out := &in.PauseAgentUpgrades, &out.PauseAgentUpgrades
		*out = new(string)
		**out = **in
	}
	if in.ReviewRepaveState != nil {
		in, out := &in.ReviewRepaveState, &out.ReviewRepaveState
		*out = new(string)
		**out = **in
	}
	if in.ScanPolicy != nil {
		in, out := &in.ScanPolicy, &out.ScanPolicy
		*out = make([]EksScanPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SkipCompletion != nil {
		in, out := &in.SkipCompletion, &out.SkipCompletion
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EksObservation.
func (in *EksObservation) DeepCopy() *EksObservation {
	if in == nil {
		return nil
	}
	out := new(EksObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EksParameters) DeepCopyInto(out *EksParameters) {
	*out = *in
	if in.ApplySetting != nil {
		in, out := &in.ApplySetting, &out.ApplySetting
		*out = new(string)
		**out = **in
	}
	if in.BackupPolicy != nil {
		in, out := &in.BackupPolicy, &out.BackupPolicy
		*out = make([]EksBackupPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CloudAccountID != nil {
		in, out := &in.CloudAccountID, &out.CloudAccountID
		*out = new(string)
		**out = **in
	}
	if in.CloudConfig != nil {
		in, out := &in.CloudConfig, &out.CloudConfig
		*out = make([]EksCloudConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterMetaAttribute != nil {
		in, out := &in.ClusterMetaAttribute, &out.ClusterMetaAttribute
		*out = new(string)
		**out = **in
	}
	if in.ClusterProfile != nil {
		in, out := &in.ClusterProfile, &out.ClusterProfile
		*out = make([]EksClusterProfileParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterRbacBinding != nil {
		in, out := &in.ClusterRbacBinding, &out.ClusterRbacBinding
		*out = make([]EksClusterRbacBindingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Context != nil {
		in, out := &in.Context, &out.Context
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.FargateProfile != nil {
		in, out := &in.FargateProfile, &out.FargateProfile
		*out = make([]FargateProfileParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ForceDelete != nil {
		in, out := &in.ForceDelete, &out.ForceDelete
		*out = new(bool)
		**out = **in
	}
	if in.ForceDeleteDelay != nil {
		in, out := &in.ForceDeleteDelay, &out.ForceDeleteDelay
		*out = new(float64)
		**out = **in
	}
	if in.HostConfig != nil {
		in, out := &in.HostConfig, &out.HostConfig
		*out = make([]EksHostConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MachinePool != nil {
		in, out := &in.MachinePool, &out.MachinePool
		*out = make([]EksMachinePoolParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]EksNamespacesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OsPatchAfter != nil {
		in, out := &in.OsPatchAfter, &out.OsPatchAfter
		*out = new(string)
		**out = **in
	}
	if in.OsPatchOnBoot != nil {
		in, out := &in.OsPatchOnBoot, &out.OsPatchOnBoot
		*out = new(bool)
		**out = **in
	}
	if in.OsPatchSchedule != nil {
		in, out := &in.OsPatchSchedule, &out.OsPatchSchedule
		*out = new(string)
		**out = **in
	}
	if in.PauseAgentUpgrades != nil {
		in, out := &in.PauseAgentUpgrades, &out.PauseAgentUpgrades
		*out = new(string)
		**out = **in
	}
	if in.ReviewRepaveState != nil {
		in, out := &in.ReviewRepaveState, &out.ReviewRepaveState
		*out = new(string)
		**out = **in
	}
	if in.ScanPolicy != nil {
		in, out := &in.ScanPolicy, &out.ScanPolicy
		*out = make([]EksScanPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SkipCompletion != nil {
		in, out := &in.SkipCompletion, &out.SkipCompletion
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EksParameters.
func (in *EksParameters) DeepCopy() *EksParameters {
	if in == nil {
		return nil
	}
	out := new(EksParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EksScanPolicyInitParameters) DeepCopyInto(out *EksScanPolicyInitParameters) {
	*out = *in
	if in.ConfigurationScanSchedule != nil {
		in, out := &in.ConfigurationScanSchedule, &out.ConfigurationScanSchedule
		*out = new(string)
		**out = **in
	}
	if in.ConformanceScanSchedule != nil {
		in, out := &in.ConformanceScanSchedule, &out.ConformanceScanSchedule
		*out = new(string)
		**out = **in
	}
	if in.PenetrationScanSchedule != nil {
		in, out := &in.PenetrationScanSchedule, &out.PenetrationScanSchedule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EksScanPolicyInitParameters.
func (in *EksScanPolicyInitParameters) DeepCopy() *EksScanPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(EksScanPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EksScanPolicyObservation) DeepCopyInto(out *EksScanPolicyObservation) {
	*out = *in
	if in.ConfigurationScanSchedule != nil {
		in, out := &in.ConfigurationScanSchedule, &out.ConfigurationScanSchedule
		*out = new(string)
		**out = **in
	}
	if in.ConformanceScanSchedule != nil {
		in, out := &in.ConformanceScanSchedule, &out.ConformanceScanSchedule
		*out = new(string)
		**out = **in
	}
	if in.PenetrationScanSchedule != nil {
		in, out := &in.PenetrationScanSchedule, &out.PenetrationScanSchedule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EksScanPolicyObservation.
func (in *EksScanPolicyObservation) DeepCopy() *EksScanPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(EksScanPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EksScanPolicyParameters) DeepCopyInto(out *EksScanPolicyParameters) {
	*out = *in
	if in.ConfigurationScanSchedule != nil {
		in, out := &in.ConfigurationScanSchedule, &out.ConfigurationScanSchedule
		*out = new(string)
		**out = **in
	}
	if in.ConformanceScanSchedule != nil {
		in, out := &in.ConformanceScanSchedule, &out.ConformanceScanSchedule
		*out = new(string)
		**out = **in
	}
	if in.PenetrationScanSchedule != nil {
		in, out := &in.PenetrationScanSchedule, &out.PenetrationScanSchedule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EksScanPolicyParameters.
func (in *EksScanPolicyParameters) DeepCopy() *EksScanPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(EksScanPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EksSpec) DeepCopyInto(out *EksSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EksSpec.
func (in *EksSpec) DeepCopy() *EksSpec {
	if in == nil {
		return nil
	}
	out := new(EksSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EksStatus) DeepCopyInto(out *EksStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EksStatus.
func (in *EksStatus) DeepCopy() *EksStatus {
	if in == nil {
		return nil
	}
	out := new(EksStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FargateProfileInitParameters) DeepCopyInto(out *FargateProfileInitParameters) {
	*out = *in
	if in.AdditionalTags != nil {
		in, out := &in.AdditionalTags, &out.AdditionalTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Selector != nil {
		in, out := &in.Selector, &out.Selector
		*out = make([]SelectorInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Subnets != nil {
		in, out := &in.Subnets, &out.Subnets
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FargateProfileInitParameters.
func (in *FargateProfileInitParameters) DeepCopy() *FargateProfileInitParameters {
	if in == nil {
		return nil
	}
	out := new(FargateProfileInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FargateProfileObservation) DeepCopyInto(out *FargateProfileObservation) {
	*out = *in
	if in.AdditionalTags != nil {
		in, out := &in.AdditionalTags, &out.AdditionalTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Selector != nil {
		in, out := &in.Selector, &out.Selector
		*out = make([]SelectorObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Subnets != nil {
		in, out := &in.Subnets, &out.Subnets
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FargateProfileObservation.
func (in *FargateProfileObservation) DeepCopy() *FargateProfileObservation {
	if in == nil {
		return nil
	}
	out := new(FargateProfileObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FargateProfileParameters) DeepCopyInto(out *FargateProfileParameters) {
	*out = *in
	if in.AdditionalTags != nil {
		in, out := &in.AdditionalTags, &out.AdditionalTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Selector != nil {
		in, out := &in.Selector, &out.Selector
		*out = make([]SelectorParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Subnets != nil {
		in, out := &in.Subnets, &out.Subnets
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FargateProfileParameters.
func (in *FargateProfileParameters) DeepCopy() *FargateProfileParameters {
	if in == nil {
		return nil
	}
	out := new(FargateProfileParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GCP) DeepCopyInto(out *GCP) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GCP.
func (in *GCP) DeepCopy() *GCP {
	if in == nil {
		return nil
	}
	out := new(GCP)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GCP) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GCPBackupPolicyInitParameters) DeepCopyInto(out *GCPBackupPolicyInitParameters) {
	*out = *in
	if in.BackupLocationID != nil {
		in, out := &in.BackupLocationID, &out.BackupLocationID
		*out = new(string)
		**out = **in
	}
	if in.ClusterUids != nil {
		in, out := &in.ClusterUids, &out.ClusterUids
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExpiryInHour != nil {
		in, out := &in.ExpiryInHour, &out.ExpiryInHour
		*out = new(float64)
		**out = **in
	}
	if in.IncludeAllClusters != nil {
		in, out := &in.IncludeAllClusters, &out.IncludeAllClusters
		*out = new(bool)
		**out = **in
	}
	if in.IncludeClusterResources != nil {
		in, out := &in.IncludeClusterResources, &out.IncludeClusterResources
		*out = new(bool)
		**out = **in
	}
	if in.IncludeDisks != nil {
		in, out := &in.IncludeDisks, &out.IncludeDisks
		*out = new(bool)
		**out = **in
	}
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GCPBackupPolicyInitParameters.
func (in *GCPBackupPolicyInitParameters) DeepCopy() *GCPBackupPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(GCPBackupPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GCPBackupPolicyObservation) DeepCopyInto(out *GCPBackupPolicyObservation) {
	*out = *in
	if in.BackupLocationID != nil {
		in, out := &in.BackupLocationID, &out.BackupLocationID
		*out = new(string)
		**out = **in
	}
	if in.ClusterUids != nil {
		in, out := &in.ClusterUids, &out.ClusterUids
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExpiryInHour != nil {
		in, out := &in.ExpiryInHour, &out.ExpiryInHour
		*out = new(float64)
		**out = **in
	}
	if in.IncludeAllClusters != nil {
		in, out := &in.IncludeAllClusters, &out.IncludeAllClusters
		*out = new(bool)
		**out = **in
	}
	if in.IncludeClusterResources != nil {
		in, out := &in.IncludeClusterResources, &out.IncludeClusterResources
		*out = new(bool)
		**out = **in
	}
	if in.IncludeDisks != nil {
		in, out := &in.IncludeDisks, &out.IncludeDisks
		*out = new(bool)
		**out = **in
	}
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GCPBackupPolicyObservation.
func (in *GCPBackupPolicyObservation) DeepCopy() *GCPBackupPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(GCPBackupPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GCPBackupPolicyParameters) DeepCopyInto(out *GCPBackupPolicyParameters) {
	*out = *in
	if in.BackupLocationID != nil {
		in, out := &in.BackupLocationID, &out.BackupLocationID
		*out = new(string)
		**out = **in
	}
	if in.ClusterUids != nil {
		in, out := &in.ClusterUids, &out.ClusterUids
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExpiryInHour != nil {
		in, out := &in.ExpiryInHour, &out.ExpiryInHour
		*out = new(float64)
		**out = **in
	}
	if in.IncludeAllClusters != nil {
		in, out := &in.IncludeAllClusters, &out.IncludeAllClusters
		*out = new(bool)
		**out = **in
	}
	if in.IncludeClusterResources != nil {
		in, out := &in.IncludeClusterResources, &out.IncludeClusterResources
		*out = new(bool)
		**out = **in
	}
	if in.IncludeDisks != nil {
		in, out := &in.IncludeDisks, &out.IncludeDisks
		*out = new(bool)
		**out = **in
	}
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GCPBackupPolicyParameters.
func (in *GCPBackupPolicyParameters) DeepCopy() *GCPBackupPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(GCPBackupPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GCPCloudConfigInitParameters) DeepCopyInto(out *GCPCloudConfigInitParameters) {
	*out = *in
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GCPCloudConfigInitParameters.
func (in *GCPCloudConfigInitParameters) DeepCopy() *GCPCloudConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(GCPCloudConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GCPCloudConfigObservation) DeepCopyInto(out *GCPCloudConfigObservation) {
	*out = *in
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GCPCloudConfigObservation.
func (in *GCPCloudConfigObservation) DeepCopy() *GCPCloudConfigObservation {
	if in == nil {
		return nil
	}
	out := new(GCPCloudConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GCPCloudConfigParameters) DeepCopyInto(out *GCPCloudConfigParameters) {
	*out = *in
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GCPCloudConfigParameters.
func (in *GCPCloudConfigParameters) DeepCopy() *GCPCloudConfigParameters {
	if in == nil {
		return nil
	}
	out := new(GCPCloudConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GCPClusterProfileInitParameters) DeepCopyInto(out *GCPClusterProfileInitParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Pack != nil {
		in, out := &in.Pack, &out.Pack
		*out = make([]GCPClusterProfilePackInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GCPClusterProfileInitParameters.
func (in *GCPClusterProfileInitParameters) DeepCopy() *GCPClusterProfileInitParameters {
	if in == nil {
		return nil
	}
	out := new(GCPClusterProfileInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GCPClusterProfileObservation) DeepCopyInto(out *GCPClusterProfileObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Pack != nil {
		in, out := &in.Pack, &out.Pack
		*out = make([]GCPClusterProfilePackObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GCPClusterProfileObservation.
func (in *GCPClusterProfileObservation) DeepCopy() *GCPClusterProfileObservation {
	if in == nil {
		return nil
	}
	out := new(GCPClusterProfileObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GCPClusterProfilePackInitParameters) DeepCopyInto(out *GCPClusterProfilePackInitParameters) {
	*out = *in
	if in.Manifest != nil {
		in, out := &in.Manifest, &out.Manifest
		*out = make([]GCPClusterProfilePackManifestInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RegistryUID != nil {
		in, out := &in.RegistryUID, &out.RegistryUID
		*out = new(string)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GCPClusterProfilePackInitParameters.
func (in *GCPClusterProfilePackInitParameters) DeepCopy() *GCPClusterProfilePackInitParameters {
	if in == nil {
		return nil
	}
	out := new(GCPClusterProfilePackInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GCPClusterProfilePackManifestInitParameters) DeepCopyInto(out *GCPClusterProfilePackManifestInitParameters) {
	*out = *in
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GCPClusterProfilePackManifestInitParameters.
func (in *GCPClusterProfilePackManifestInitParameters) DeepCopy() *GCPClusterProfilePackManifestInitParameters {
	if in == nil {
		return nil
	}
	out := new(GCPClusterProfilePackManifestInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GCPClusterProfilePackManifestObservation) DeepCopyInto(out *GCPClusterProfilePackManifestObservation) {
	*out = *in
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GCPClusterProfilePackManifestObservation.
func (in *GCPClusterProfilePackManifestObservation) DeepCopy() *GCPClusterProfilePackManifestObservation {
	if in == nil {
		return nil
	}
	out := new(GCPClusterProfilePackManifestObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GCPClusterProfilePackManifestParameters) DeepCopyInto(out *GCPClusterProfilePackManifestParameters) {
	*out = *in
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GCPClusterProfilePackManifestParameters.
func (in *GCPClusterProfilePackManifestParameters) DeepCopy() *GCPClusterProfilePackManifestParameters {
	if in == nil {
		return nil
	}
	out := new(GCPClusterProfilePackManifestParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GCPClusterProfilePackObservation) DeepCopyInto(out *GCPClusterProfilePackObservation) {
	*out = *in
	if in.Manifest != nil {
		in, out := &in.Manifest, &out.Manifest
		*out = make([]GCPClusterProfilePackManifestObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RegistryUID != nil {
		in, out := &in.RegistryUID, &out.RegistryUID
		*out = new(string)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GCPClusterProfilePackObservation.
func (in *GCPClusterProfilePackObservation) DeepCopy() *GCPClusterProfilePackObservation {
	if in == nil {
		return nil
	}
	out := new(GCPClusterProfilePackObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GCPClusterProfilePackParameters) DeepCopyInto(out *GCPClusterProfilePackParameters) {
	*out = *in
	if in.Manifest != nil {
		in, out := &in.Manifest, &out.Manifest
		*out = make([]GCPClusterProfilePackManifestParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RegistryUID != nil {
		in, out := &in.RegistryUID, &out.RegistryUID
		*out = new(string)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GCPClusterProfilePackParameters.
func (in *GCPClusterProfilePackParameters) DeepCopy() *GCPClusterProfilePackParameters {
	if in == nil {
		return nil
	}
	out := new(GCPClusterProfilePackParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GCPClusterProfileParameters) DeepCopyInto(out *GCPClusterProfileParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Pack != nil {
		in, out := &in.Pack, &out.Pack
		*out = make([]GCPClusterProfilePackParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GCPClusterProfileParameters.
func (in *GCPClusterProfileParameters) DeepCopy() *GCPClusterProfileParameters {
	if in == nil {
		return nil
	}
	out := new(GCPClusterProfileParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GCPClusterRbacBindingInitParameters) DeepCopyInto(out *GCPClusterRbacBindingInitParameters) {
	*out = *in
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Subjects != nil {
		in, out := &in.Subjects, &out.Subjects
		*out = make([]GCPClusterRbacBindingSubjectsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GCPClusterRbacBindingInitParameters.
func (in *GCPClusterRbacBindingInitParameters) DeepCopy() *GCPClusterRbacBindingInitParameters {
	if in == nil {
		return nil
	}
	out := new(GCPClusterRbacBindingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GCPClusterRbacBindingObservation) DeepCopyInto(out *GCPClusterRbacBindingObservation) {
	*out = *in
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Subjects != nil {
		in, out := &in.Subjects, &out.Subjects
		*out = make([]GCPClusterRbacBindingSubjectsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GCPClusterRbacBindingObservation.
func (in *GCPClusterRbacBindingObservation) DeepCopy() *GCPClusterRbacBindingObservation {
	if in == nil {
		return nil
	}
	out := new(GCPClusterRbacBindingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GCPClusterRbacBindingParameters) DeepCopyInto(out *GCPClusterRbacBindingParameters) {
	*out = *in
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Subjects != nil {
		in, out := &in.Subjects, &out.Subjects
		*out = make([]GCPClusterRbacBindingSubjectsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GCPClusterRbacBindingParameters.
func (in *GCPClusterRbacBindingParameters) DeepCopy() *GCPClusterRbacBindingParameters {
	if in == nil {
		return nil
	}
	out := new(GCPClusterRbacBindingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GCPClusterRbacBindingSubjectsInitParameters) DeepCopyInto(out *GCPClusterRbacBindingSubjectsInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GCPClusterRbacBindingSubjectsInitParameters.
func (in *GCPClusterRbacBindingSubjectsInitParameters) DeepCopy() *GCPClusterRbacBindingSubjectsInitParameters {
	if in == nil {
		return nil
	}
	out := new(GCPClusterRbacBindingSubjectsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GCPClusterRbacBindingSubjectsObservation) DeepCopyInto(out *GCPClusterRbacBindingSubjectsObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GCPClusterRbacBindingSubjectsObservation.
func (in *GCPClusterRbacBindingSubjectsObservation) DeepCopy() *GCPClusterRbacBindingSubjectsObservation {
	if in == nil {
		return nil
	}
	out := new(GCPClusterRbacBindingSubjectsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GCPClusterRbacBindingSubjectsParameters) DeepCopyInto(out *GCPClusterRbacBindingSubjectsParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GCPClusterRbacBindingSubjectsParameters.
func (in *GCPClusterRbacBindingSubjectsParameters) DeepCopy() *GCPClusterRbacBindingSubjectsParameters {
	if in == nil {
		return nil
	}
	out := new(GCPClusterRbacBindingSubjectsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GCPHostConfigInitParameters) DeepCopyInto(out *GCPHostConfigInitParameters) {
	*out = *in
	if in.ExternalTrafficPolicy != nil {
		in, out := &in.ExternalTrafficPolicy, &out.ExternalTrafficPolicy
		*out = new(string)
		**out = **in
	}
	if in.HostEndpointType != nil {
		in, out := &in.HostEndpointType, &out.HostEndpointType
		*out = new(string)
		**out = **in
	}
	if in.IngressHost != nil {
		in, out := &in.IngressHost, &out.IngressHost
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancerSourceRanges != nil {
		in, out := &in.LoadBalancerSourceRanges, &out.LoadBalancerSourceRanges
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GCPHostConfigInitParameters.
func (in *GCPHostConfigInitParameters) DeepCopy() *GCPHostConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(GCPHostConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GCPHostConfigObservation) DeepCopyInto(out *GCPHostConfigObservation) {
	*out = *in
	if in.ExternalTrafficPolicy != nil {
		in, out := &in.ExternalTrafficPolicy, &out.ExternalTrafficPolicy
		*out = new(string)
		**out = **in
	}
	if in.HostEndpointType != nil {
		in, out := &in.HostEndpointType, &out.HostEndpointType
		*out = new(string)
		**out = **in
	}
	if in.IngressHost != nil {
		in, out := &in.IngressHost, &out.IngressHost
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancerSourceRanges != nil {
		in, out := &in.LoadBalancerSourceRanges, &out.LoadBalancerSourceRanges
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GCPHostConfigObservation.
func (in *GCPHostConfigObservation) DeepCopy() *GCPHostConfigObservation {
	if in == nil {
		return nil
	}
	out := new(GCPHostConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GCPHostConfigParameters) DeepCopyInto(out *GCPHostConfigParameters) {
	*out = *in
	if in.ExternalTrafficPolicy != nil {
		in, out := &in.ExternalTrafficPolicy, &out.ExternalTrafficPolicy
		*out = new(string)
		**out = **in
	}
	if in.HostEndpointType != nil {
		in, out := &in.HostEndpointType, &out.HostEndpointType
		*out = new(string)
		**out = **in
	}
	if in.IngressHost != nil {
		in, out := &in.IngressHost, &out.IngressHost
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancerSourceRanges != nil {
		in, out := &in.LoadBalancerSourceRanges, &out.LoadBalancerSourceRanges
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GCPHostConfigParameters.
func (in *GCPHostConfigParameters) DeepCopy() *GCPHostConfigParameters {
	if in == nil {
		return nil
	}
	out := new(GCPHostConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GCPInitParameters) DeepCopyInto(out *GCPInitParameters) {
	*out = *in
	if in.ApplySetting != nil {
		in, out := &in.ApplySetting, &out.ApplySetting
		*out = new(string)
		**out = **in
	}
	if in.BackupPolicy != nil {
		in, out := &in.BackupPolicy, &out.BackupPolicy
		*out = make([]GCPBackupPolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CloudAccountID != nil {
		in, out := &in.CloudAccountID, &out.CloudAccountID
		*out = new(string)
		**out = **in
	}
	if in.CloudConfig != nil {
		in, out := &in.CloudConfig, &out.CloudConfig
		*out = make([]GCPCloudConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterMetaAttribute != nil {
		in, out := &in.ClusterMetaAttribute, &out.ClusterMetaAttribute
		*out = new(string)
		**out = **in
	}
	if in.ClusterProfile != nil {
		in, out := &in.ClusterProfile, &out.ClusterProfile
		*out = make([]GCPClusterProfileInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterRbacBinding != nil {
		in, out := &in.ClusterRbacBinding, &out.ClusterRbacBinding
		*out = make([]GCPClusterRbacBindingInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Context != nil {
		in, out := &in.Context, &out.Context
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ForceDelete != nil {
		in, out := &in.ForceDelete, &out.ForceDelete
		*out = new(bool)
		**out = **in
	}
	if in.ForceDeleteDelay != nil {
		in, out := &in.ForceDeleteDelay, &out.ForceDeleteDelay
		*out = new(float64)
		**out = **in
	}
	if in.HostConfig != nil {
		in, out := &in.HostConfig, &out.HostConfig
		*out = make([]GCPHostConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MachinePool != nil {
		in, out := &in.MachinePool, &out.MachinePool
		*out = make([]GCPMachinePoolInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]GCPNamespacesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OsPatchAfter != nil {
		in, out := &in.OsPatchAfter, &out.OsPatchAfter
		*out = new(string)
		**out = **in
	}
	if in.OsPatchOnBoot != nil {
		in, out := &in.OsPatchOnBoot, &out.OsPatchOnBoot
		*out = new(bool)
		**out = **in
	}
	if in.OsPatchSchedule != nil {
		in, out := &in.OsPatchSchedule, &out.OsPatchSchedule
		*out = new(string)
		**out = **in
	}
	if in.PauseAgentUpgrades != nil {
		in, out := &in.PauseAgentUpgrades, &out.PauseAgentUpgrades
		*out = new(string)
		**out = **in
	}
	if in.ReviewRepaveState != nil {
		in, out := &in.ReviewRepaveState, &out.ReviewRepaveState
		*out = new(string)
		**out = **in
	}
	if in.ScanPolicy != nil {
		in, out := &in.ScanPolicy, &out.ScanPolicy
		*out = make([]GCPScanPolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SkipCompletion != nil {
		in, out := &in.SkipCompletion, &out.SkipCompletion
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GCPInitParameters.
func (in *GCPInitParameters) DeepCopy() *GCPInitParameters {
	if in == nil {
		return nil
	}
	out := new(GCPInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GCPList) DeepCopyInto(out *GCPList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]GCP, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GCPList.
func (in *GCPList) DeepCopy() *GCPList {
	if in == nil {
		return nil
	}
	out := new(GCPList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GCPList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GCPLocationConfigInitParameters) DeepCopyInto(out *GCPLocationConfigInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GCPLocationConfigInitParameters.
func (in *GCPLocationConfigInitParameters) DeepCopy() *GCPLocationConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(GCPLocationConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GCPLocationConfigObservation) DeepCopyInto(out *GCPLocationConfigObservation) {
	*out = *in
	if in.CountryCode != nil {
		in, out := &in.CountryCode, &out.CountryCode
		*out = new(string)
		**out = **in
	}
	if in.CountryName != nil {
		in, out := &in.CountryName, &out.CountryName
		*out = new(string)
		**out = **in
	}
	if in.Latitude != nil {
		in, out := &in.Latitude, &out.Latitude
		*out = new(float64)
		**out = **in
	}
	if in.Longitude != nil {
		in, out := &in.Longitude, &out.Longitude
		*out = new(float64)
		**out = **in
	}
	if in.RegionCode != nil {
		in, out := &in.RegionCode, &out.RegionCode
		*out = new(string)
		**out = **in
	}
	if in.RegionName != nil {
		in, out := &in.RegionName, &out.RegionName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GCPLocationConfigObservation.
func (in *GCPLocationConfigObservation) DeepCopy() *GCPLocationConfigObservation {
	if in == nil {
		return nil
	}
	out := new(GCPLocationConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GCPLocationConfigParameters) DeepCopyInto(out *GCPLocationConfigParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GCPLocationConfigParameters.
func (in *GCPLocationConfigParameters) DeepCopy() *GCPLocationConfigParameters {
	if in == nil {
		return nil
	}
	out := new(GCPLocationConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GCPMachinePoolInitParameters) DeepCopyInto(out *GCPMachinePoolInitParameters) {
	*out = *in
	if in.AdditionalLabels != nil {
		in, out := &in.AdditionalLabels, &out.AdditionalLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Azs != nil {
		in, out := &in.Azs, &out.Azs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ControlPlane != nil {
		in, out := &in.ControlPlane, &out.ControlPlane
		*out = new(bool)
		**out = **in
	}
	if in.ControlPlaneAsWorker != nil {
		in, out := &in.ControlPlaneAsWorker, &out.ControlPlaneAsWorker
		*out = new(bool)
		**out = **in
	}
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.DiskSizeGb != nil {
		in, out := &in.DiskSizeGb, &out.DiskSizeGb
		*out = new(float64)
		**out = **in
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Node != nil {
		in, out := &in.Node, &out.Node
		*out = make([]GCPMachinePoolNodeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NodeRepaveInterval != nil {
		in, out := &in.NodeRepaveInterval, &out.NodeRepaveInterval
		*out = new(float64)
		**out = **in
	}
	if in.Taints != nil {
		in, out := &in.Taints, &out.Taints
		*out = make([]GCPMachinePoolTaintsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UpdateStrategy != nil {
		in, out := &in.UpdateStrategy, &out.UpdateStrategy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GCPMachinePoolInitParameters.
func (in *GCPMachinePoolInitParameters) DeepCopy() *GCPMachinePoolInitParameters {
	if in == nil {
		return nil
	}
	out := new(GCPMachinePoolInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GCPMachinePoolNodeInitParameters) DeepCopyInto(out *GCPMachinePoolNodeInitParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.NodeID != nil {
		in, out := &in.NodeID, &out.NodeID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GCPMachinePoolNodeInitParameters.
func (in *GCPMachinePoolNodeInitParameters) DeepCopy() *GCPMachinePoolNodeInitParameters {
	if in == nil {
		return nil
	}
	out := new(GCPMachinePoolNodeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GCPMachinePoolNodeObservation) DeepCopyInto(out *GCPMachinePoolNodeObservation) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.NodeID != nil {
		in, out := &in.NodeID, &out.NodeID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GCPMachinePoolNodeObservation.
func (in *GCPMachinePoolNodeObservation) DeepCopy() *GCPMachinePoolNodeObservation {
	if in == nil {
		return nil
	}
	out := new(GCPMachinePoolNodeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GCPMachinePoolNodeParameters) DeepCopyInto(out *GCPMachinePoolNodeParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.NodeID != nil {
		in, out := &in.NodeID, &out.NodeID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GCPMachinePoolNodeParameters.
func (in *GCPMachinePoolNodeParameters) DeepCopy() *GCPMachinePoolNodeParameters {
	if in == nil {
		return nil
	}
	out := new(GCPMachinePoolNodeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GCPMachinePoolObservation) DeepCopyInto(out *GCPMachinePoolObservation) {
	*out = *in
	if in.AdditionalLabels != nil {
		in, out := &in.AdditionalLabels, &out.AdditionalLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Azs != nil {
		in, out := &in.Azs, &out.Azs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ControlPlane != nil {
		in, out := &in.ControlPlane, &out.ControlPlane
		*out = new(bool)
		**out = **in
	}
	if in.ControlPlaneAsWorker != nil {
		in, out := &in.ControlPlaneAsWorker, &out.ControlPlaneAsWorker
		*out = new(bool)
		**out = **in
	}
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.DiskSizeGb != nil {
		in, out := &in.DiskSizeGb, &out.DiskSizeGb
		*out = new(float64)
		**out = **in
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Node != nil {
		in, out := &in.Node, &out.Node
		*out = make([]GCPMachinePoolNodeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NodeRepaveInterval != nil {
		in, out := &in.NodeRepaveInterval, &out.NodeRepaveInterval
		*out = new(float64)
		**out = **in
	}
	if in.Taints != nil {
		in, out := &in.Taints, &out.Taints
		*out = make([]GCPMachinePoolTaintsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UpdateStrategy != nil {
		in, out := &in.UpdateStrategy, &out.UpdateStrategy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GCPMachinePoolObservation.
func (in *GCPMachinePoolObservation) DeepCopy() *GCPMachinePoolObservation {
	if in == nil {
		return nil
	}
	out := new(GCPMachinePoolObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GCPMachinePoolParameters) DeepCopyInto(out *GCPMachinePoolParameters) {
	*out = *in
	if in.AdditionalLabels != nil {
		in, out := &in.AdditionalLabels, &out.AdditionalLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Azs != nil {
		in, out := &in.Azs, &out.Azs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ControlPlane != nil {
		in, out := &in.ControlPlane, &out.ControlPlane
		*out = new(bool)
		**out = **in
	}
	if in.ControlPlaneAsWorker != nil {
		in, out := &in.ControlPlaneAsWorker, &out.ControlPlaneAsWorker
		*out = new(bool)
		**out = **in
	}
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.DiskSizeGb != nil {
		in, out := &in.DiskSizeGb, &out.DiskSizeGb
		*out = new(float64)
		**out = **in
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Node != nil {
		in, out := &in.Node, &out.Node
		*out = make([]GCPMachinePoolNodeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NodeRepaveInterval != nil {
		in, out := &in.NodeRepaveInterval, &out.NodeRepaveInterval
		*out = new(float64)
		**out = **in
	}
	if in.Taints != nil {
		in, out := &in.Taints, &out.Taints
		*out = make([]GCPMachinePoolTaintsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UpdateStrategy != nil {
		in, out := &in.UpdateStrategy, &out.UpdateStrategy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GCPMachinePoolParameters.
func (in *GCPMachinePoolParameters) DeepCopy() *GCPMachinePoolParameters {
	if in == nil {
		return nil
	}
	out := new(GCPMachinePoolParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GCPMachinePoolTaintsInitParameters) DeepCopyInto(out *GCPMachinePoolTaintsInitParameters) {
	*out = *in
	if in.Effect != nil {
		in, out := &in.Effect, &out.Effect
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GCPMachinePoolTaintsInitParameters.
func (in *GCPMachinePoolTaintsInitParameters) DeepCopy() *GCPMachinePoolTaintsInitParameters {
	if in == nil {
		return nil
	}
	out := new(GCPMachinePoolTaintsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GCPMachinePoolTaintsObservation) DeepCopyInto(out *GCPMachinePoolTaintsObservation) {
	*out = *in
	if in.Effect != nil {
		in, out := &in.Effect, &out.Effect
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GCPMachinePoolTaintsObservation.
func (in *GCPMachinePoolTaintsObservation) DeepCopy() *GCPMachinePoolTaintsObservation {
	if in == nil {
		return nil
	}
	out := new(GCPMachinePoolTaintsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GCPMachinePoolTaintsParameters) DeepCopyInto(out *GCPMachinePoolTaintsParameters) {
	*out = *in
	if in.Effect != nil {
		in, out := &in.Effect, &out.Effect
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GCPMachinePoolTaintsParameters.
func (in *GCPMachinePoolTaintsParameters) DeepCopy() *GCPMachinePoolTaintsParameters {
	if in == nil {
		return nil
	}
	out := new(GCPMachinePoolTaintsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GCPNamespacesInitParameters) DeepCopyInto(out *GCPNamespacesInitParameters) {
	*out = *in
	if in.ImagesBlacklist != nil {
		in, out := &in.ImagesBlacklist, &out.ImagesBlacklist
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ResourceAllocation != nil {
		in, out := &in.ResourceAllocation, &out.ResourceAllocation
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GCPNamespacesInitParameters.
func (in *GCPNamespacesInitParameters) DeepCopy() *GCPNamespacesInitParameters {
	if in == nil {
		return nil
	}
	out := new(GCPNamespacesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GCPNamespacesObservation) DeepCopyInto(out *GCPNamespacesObservation) {
	*out = *in
	if in.ImagesBlacklist != nil {
		in, out := &in.ImagesBlacklist, &out.ImagesBlacklist
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ResourceAllocation != nil {
		in, out := &in.ResourceAllocation, &out.ResourceAllocation
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GCPNamespacesObservation.
func (in *GCPNamespacesObservation) DeepCopy() *GCPNamespacesObservation {
	if in == nil {
		return nil
	}
	out := new(GCPNamespacesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GCPNamespacesParameters) DeepCopyInto(out *GCPNamespacesParameters) {
	*out = *in
	if in.ImagesBlacklist != nil {
		in, out := &in.ImagesBlacklist, &out.ImagesBlacklist
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ResourceAllocation != nil {
		in, out := &in.ResourceAllocation, &out.ResourceAllocation
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GCPNamespacesParameters.
func (in *GCPNamespacesParameters) DeepCopy() *GCPNamespacesParameters {
	if in == nil {
		return nil
	}
	out := new(GCPNamespacesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GCPObservation) DeepCopyInto(out *GCPObservation) {
	*out = *in
	if in.AdminKubeConfig != nil {
		in, out := &in.AdminKubeConfig, &out.AdminKubeConfig
		*out = new(string)
		**out = **in
	}
	if in.ApplySetting != nil {
		in, out := &in.ApplySetting, &out.ApplySetting
		*out = new(string)
		**out = **in
	}
	if in.BackupPolicy != nil {
		in, out := &in.BackupPolicy, &out.BackupPolicy
		*out = make([]GCPBackupPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CloudAccountID != nil {
		in, out := &in.CloudAccountID, &out.CloudAccountID
		*out = new(string)
		**out = **in
	}
	if in.CloudConfig != nil {
		in, out := &in.CloudConfig, &out.CloudConfig
		*out = make([]GCPCloudConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CloudConfigID != nil {
		in, out := &in.CloudConfigID, &out.CloudConfigID
		*out = new(string)
		**out = **in
	}
	if in.ClusterMetaAttribute != nil {
		in, out := &in.ClusterMetaAttribute, &out.ClusterMetaAttribute
		*out = new(string)
		**out = **in
	}
	if in.ClusterProfile != nil {
		in, out := &in.ClusterProfile, &out.ClusterProfile
		*out = make([]GCPClusterProfileObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterRbacBinding != nil {
		in, out := &in.ClusterRbacBinding, &out.ClusterRbacBinding
		*out = make([]GCPClusterRbacBindingObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Context != nil {
		in, out := &in.Context, &out.Context
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ForceDelete != nil {
		in, out := &in.ForceDelete, &out.ForceDelete
		*out = new(bool)
		**out = **in
	}
	if in.ForceDeleteDelay != nil {
		in, out := &in.ForceDeleteDelay, &out.ForceDeleteDelay
		*out = new(float64)
		**out = **in
	}
	if in.HostConfig != nil {
		in, out := &in.HostConfig, &out.HostConfig
		*out = make([]GCPHostConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Kubeconfig != nil {
		in, out := &in.Kubeconfig, &out.Kubeconfig
		*out = new(string)
		**out = **in
	}
	if in.LocationConfig != nil {
		in, out := &in.LocationConfig, &out.LocationConfig
		*out = make([]GCPLocationConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MachinePool != nil {
		in, out := &in.MachinePool, &out.MachinePool
		*out = make([]GCPMachinePoolObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]GCPNamespacesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OsPatchAfter != nil {
		in, out := &in.OsPatchAfter, &out.OsPatchAfter
		*out = new(string)
		**out = **in
	}
	if in.OsPatchOnBoot != nil {
		in, out := &in.OsPatchOnBoot, &out.OsPatchOnBoot
		*out = new(bool)
		**out = **in
	}
	if in.OsPatchSchedule != nil {
		in, out := &in.OsPatchSchedule, &out.OsPatchSchedule
		*out = new(string)
		**out = **in
	}
	if in.PauseAgentUpgrades != nil {
		in, out := &in.PauseAgentUpgrades, &out.PauseAgentUpgrades
		*out = new(string)
		**out = **in
	}
	if in.ReviewRepaveState != nil {
		in, out := &in.ReviewRepaveState, &out.ReviewRepaveState
		*out = new(string)
		**out = **in
	}
	if in.ScanPolicy != nil {
		in, out := &in.ScanPolicy, &out.ScanPolicy
		*out = make([]GCPScanPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SkipCompletion != nil {
		in, out := &in.SkipCompletion, &out.SkipCompletion
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GCPObservation.
func (in *GCPObservation) DeepCopy() *GCPObservation {
	if in == nil {
		return nil
	}
	out := new(GCPObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GCPParameters) DeepCopyInto(out *GCPParameters) {
	*out = *in
	if in.ApplySetting != nil {
		in, out := &in.ApplySetting, &out.ApplySetting
		*out = new(string)
		**out = **in
	}
	if in.BackupPolicy != nil {
		in, out := &in.BackupPolicy, &out.BackupPolicy
		*out = make([]GCPBackupPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CloudAccountID != nil {
		in, out := &in.CloudAccountID, &out.CloudAccountID
		*out = new(string)
		**out = **in
	}
	if in.CloudConfig != nil {
		in, out := &in.CloudConfig, &out.CloudConfig
		*out = make([]GCPCloudConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterMetaAttribute != nil {
		in, out := &in.ClusterMetaAttribute, &out.ClusterMetaAttribute
		*out = new(string)
		**out = **in
	}
	if in.ClusterProfile != nil {
		in, out := &in.ClusterProfile, &out.ClusterProfile
		*out = make([]GCPClusterProfileParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterRbacBinding != nil {
		in, out := &in.ClusterRbacBinding, &out.ClusterRbacBinding
		*out = make([]GCPClusterRbacBindingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Context != nil {
		in, out := &in.Context, &out.Context
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ForceDelete != nil {
		in, out := &in.ForceDelete, &out.ForceDelete
		*out = new(bool)
		**out = **in
	}
	if in.ForceDeleteDelay != nil {
		in, out := &in.ForceDeleteDelay, &out.ForceDeleteDelay
		*out = new(float64)
		**out = **in
	}
	if in.HostConfig != nil {
		in, out := &in.HostConfig, &out.HostConfig
		*out = make([]GCPHostConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MachinePool != nil {
		in, out := &in.MachinePool, &out.MachinePool
		*out = make([]GCPMachinePoolParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]GCPNamespacesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OsPatchAfter != nil {
		in, out := &in.OsPatchAfter, &out.OsPatchAfter
		*out = new(string)
		**out = **in
	}
	if in.OsPatchOnBoot != nil {
		in, out := &in.OsPatchOnBoot, &out.OsPatchOnBoot
		*out = new(bool)
		**out = **in
	}
	if in.OsPatchSchedule != nil {
		in, out := &in.OsPatchSchedule, &out.OsPatchSchedule
		*out = new(string)
		**out = **in
	}
	if in.PauseAgentUpgrades != nil {
		in, out := &in.PauseAgentUpgrades, &out.PauseAgentUpgrades
		*out = new(string)
		**out = **in
	}
	if in.ReviewRepaveState != nil {
		in, out := &in.ReviewRepaveState, &out.ReviewRepaveState
		*out = new(string)
		**out = **in
	}
	if in.ScanPolicy != nil {
		in, out := &in.ScanPolicy, &out.ScanPolicy
		*out = make([]GCPScanPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SkipCompletion != nil {
		in, out := &in.SkipCompletion, &out.SkipCompletion
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GCPParameters.
func (in *GCPParameters) DeepCopy() *GCPParameters {
	if in == nil {
		return nil
	}
	out := new(GCPParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GCPScanPolicyInitParameters) DeepCopyInto(out *GCPScanPolicyInitParameters) {
	*out = *in
	if in.ConfigurationScanSchedule != nil {
		in, out := &in.ConfigurationScanSchedule, &out.ConfigurationScanSchedule
		*out = new(string)
		**out = **in
	}
	if in.ConformanceScanSchedule != nil {
		in, out := &in.ConformanceScanSchedule, &out.ConformanceScanSchedule
		*out = new(string)
		**out = **in
	}
	if in.PenetrationScanSchedule != nil {
		in, out := &in.PenetrationScanSchedule, &out.PenetrationScanSchedule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GCPScanPolicyInitParameters.
func (in *GCPScanPolicyInitParameters) DeepCopy() *GCPScanPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(GCPScanPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GCPScanPolicyObservation) DeepCopyInto(out *GCPScanPolicyObservation) {
	*out = *in
	if in.ConfigurationScanSchedule != nil {
		in, out := &in.ConfigurationScanSchedule, &out.ConfigurationScanSchedule
		*out = new(string)
		**out = **in
	}
	if in.ConformanceScanSchedule != nil {
		in, out := &in.ConformanceScanSchedule, &out.ConformanceScanSchedule
		*out = new(string)
		**out = **in
	}
	if in.PenetrationScanSchedule != nil {
		in, out := &in.PenetrationScanSchedule, &out.PenetrationScanSchedule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GCPScanPolicyObservation.
func (in *GCPScanPolicyObservation) DeepCopy() *GCPScanPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(GCPScanPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GCPScanPolicyParameters) DeepCopyInto(out *GCPScanPolicyParameters) {
	*out = *in
	if in.ConfigurationScanSchedule != nil {
		in, out := &in.ConfigurationScanSchedule, &out.ConfigurationScanSchedule
		*out = new(string)
		**out = **in
	}
	if in.ConformanceScanSchedule != nil {
		in, out := &in.ConformanceScanSchedule, &out.ConformanceScanSchedule
		*out = new(string)
		**out = **in
	}
	if in.PenetrationScanSchedule != nil {
		in, out := &in.PenetrationScanSchedule, &out.PenetrationScanSchedule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GCPScanPolicyParameters.
func (in *GCPScanPolicyParameters) DeepCopy() *GCPScanPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(GCPScanPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GCPSpec) DeepCopyInto(out *GCPSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GCPSpec.
func (in *GCPSpec) DeepCopy() *GCPSpec {
	if in == nil {
		return nil
	}
	out := new(GCPSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GCPStatus) DeepCopyInto(out *GCPStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GCPStatus.
func (in *GCPStatus) DeepCopy() *GCPStatus {
	if in == nil {
		return nil
	}
	out := new(GCPStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Gke) DeepCopyInto(out *Gke) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Gke.
func (in *Gke) DeepCopy() *Gke {
	if in == nil {
		return nil
	}
	out := new(Gke)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Gke) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GkeBackupPolicyInitParameters) DeepCopyInto(out *GkeBackupPolicyInitParameters) {
	*out = *in
	if in.BackupLocationID != nil {
		in, out := &in.BackupLocationID, &out.BackupLocationID
		*out = new(string)
		**out = **in
	}
	if in.ClusterUids != nil {
		in, out := &in.ClusterUids, &out.ClusterUids
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExpiryInHour != nil {
		in, out := &in.ExpiryInHour, &out.ExpiryInHour
		*out = new(float64)
		**out = **in
	}
	if in.IncludeAllClusters != nil {
		in, out := &in.IncludeAllClusters, &out.IncludeAllClusters
		*out = new(bool)
		**out = **in
	}
	if in.IncludeClusterResources != nil {
		in, out := &in.IncludeClusterResources, &out.IncludeClusterResources
		*out = new(bool)
		**out = **in
	}
	if in.IncludeDisks != nil {
		in, out := &in.IncludeDisks, &out.IncludeDisks
		*out = new(bool)
		**out = **in
	}
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GkeBackupPolicyInitParameters.
func (in *GkeBackupPolicyInitParameters) DeepCopy() *GkeBackupPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(GkeBackupPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GkeBackupPolicyObservation) DeepCopyInto(out *GkeBackupPolicyObservation) {
	*out = *in
	if in.BackupLocationID != nil {
		in, out := &in.BackupLocationID, &out.BackupLocationID
		*out = new(string)
		**out = **in
	}
	if in.ClusterUids != nil {
		in, out := &in.ClusterUids, &out.ClusterUids
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExpiryInHour != nil {
		in, out := &in.ExpiryInHour, &out.ExpiryInHour
		*out = new(float64)
		**out = **in
	}
	if in.IncludeAllClusters != nil {
		in, out := &in.IncludeAllClusters, &out.IncludeAllClusters
		*out = new(bool)
		**out = **in
	}
	if in.IncludeClusterResources != nil {
		in, out := &in.IncludeClusterResources, &out.IncludeClusterResources
		*out = new(bool)
		**out = **in
	}
	if in.IncludeDisks != nil {
		in, out := &in.IncludeDisks, &out.IncludeDisks
		*out = new(bool)
		**out = **in
	}
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GkeBackupPolicyObservation.
func (in *GkeBackupPolicyObservation) DeepCopy() *GkeBackupPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(GkeBackupPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GkeBackupPolicyParameters) DeepCopyInto(out *GkeBackupPolicyParameters) {
	*out = *in
	if in.BackupLocationID != nil {
		in, out := &in.BackupLocationID, &out.BackupLocationID
		*out = new(string)
		**out = **in
	}
	if in.ClusterUids != nil {
		in, out := &in.ClusterUids, &out.ClusterUids
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExpiryInHour != nil {
		in, out := &in.ExpiryInHour, &out.ExpiryInHour
		*out = new(float64)
		**out = **in
	}
	if in.IncludeAllClusters != nil {
		in, out := &in.IncludeAllClusters, &out.IncludeAllClusters
		*out = new(bool)
		**out = **in
	}
	if in.IncludeClusterResources != nil {
		in, out := &in.IncludeClusterResources, &out.IncludeClusterResources
		*out = new(bool)
		**out = **in
	}
	if in.IncludeDisks != nil {
		in, out := &in.IncludeDisks, &out.IncludeDisks
		*out = new(bool)
		**out = **in
	}
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GkeBackupPolicyParameters.
func (in *GkeBackupPolicyParameters) DeepCopy() *GkeBackupPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(GkeBackupPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GkeCloudConfigInitParameters) DeepCopyInto(out *GkeCloudConfigInitParameters) {
	*out = *in
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GkeCloudConfigInitParameters.
func (in *GkeCloudConfigInitParameters) DeepCopy() *GkeCloudConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(GkeCloudConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GkeCloudConfigObservation) DeepCopyInto(out *GkeCloudConfigObservation) {
	*out = *in
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GkeCloudConfigObservation.
func (in *GkeCloudConfigObservation) DeepCopy() *GkeCloudConfigObservation {
	if in == nil {
		return nil
	}
	out := new(GkeCloudConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GkeCloudConfigParameters) DeepCopyInto(out *GkeCloudConfigParameters) {
	*out = *in
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GkeCloudConfigParameters.
func (in *GkeCloudConfigParameters) DeepCopy() *GkeCloudConfigParameters {
	if in == nil {
		return nil
	}
	out := new(GkeCloudConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GkeClusterProfileInitParameters) DeepCopyInto(out *GkeClusterProfileInitParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Pack != nil {
		in, out := &in.Pack, &out.Pack
		*out = make([]GkeClusterProfilePackInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GkeClusterProfileInitParameters.
func (in *GkeClusterProfileInitParameters) DeepCopy() *GkeClusterProfileInitParameters {
	if in == nil {
		return nil
	}
	out := new(GkeClusterProfileInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GkeClusterProfileObservation) DeepCopyInto(out *GkeClusterProfileObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Pack != nil {
		in, out := &in.Pack, &out.Pack
		*out = make([]GkeClusterProfilePackObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GkeClusterProfileObservation.
func (in *GkeClusterProfileObservation) DeepCopy() *GkeClusterProfileObservation {
	if in == nil {
		return nil
	}
	out := new(GkeClusterProfileObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GkeClusterProfilePackInitParameters) DeepCopyInto(out *GkeClusterProfilePackInitParameters) {
	*out = *in
	if in.Manifest != nil {
		in, out := &in.Manifest, &out.Manifest
		*out = make([]GkeClusterProfilePackManifestInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RegistryUID != nil {
		in, out := &in.RegistryUID, &out.RegistryUID
		*out = new(string)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GkeClusterProfilePackInitParameters.
func (in *GkeClusterProfilePackInitParameters) DeepCopy() *GkeClusterProfilePackInitParameters {
	if in == nil {
		return nil
	}
	out := new(GkeClusterProfilePackInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GkeClusterProfilePackManifestInitParameters) DeepCopyInto(out *GkeClusterProfilePackManifestInitParameters) {
	*out = *in
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GkeClusterProfilePackManifestInitParameters.
func (in *GkeClusterProfilePackManifestInitParameters) DeepCopy() *GkeClusterProfilePackManifestInitParameters {
	if in == nil {
		return nil
	}
	out := new(GkeClusterProfilePackManifestInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GkeClusterProfilePackManifestObservation) DeepCopyInto(out *GkeClusterProfilePackManifestObservation) {
	*out = *in
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GkeClusterProfilePackManifestObservation.
func (in *GkeClusterProfilePackManifestObservation) DeepCopy() *GkeClusterProfilePackManifestObservation {
	if in == nil {
		return nil
	}
	out := new(GkeClusterProfilePackManifestObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GkeClusterProfilePackManifestParameters) DeepCopyInto(out *GkeClusterProfilePackManifestParameters) {
	*out = *in
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GkeClusterProfilePackManifestParameters.
func (in *GkeClusterProfilePackManifestParameters) DeepCopy() *GkeClusterProfilePackManifestParameters {
	if in == nil {
		return nil
	}
	out := new(GkeClusterProfilePackManifestParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GkeClusterProfilePackObservation) DeepCopyInto(out *GkeClusterProfilePackObservation) {
	*out = *in
	if in.Manifest != nil {
		in, out := &in.Manifest, &out.Manifest
		*out = make([]GkeClusterProfilePackManifestObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RegistryUID != nil {
		in, out := &in.RegistryUID, &out.RegistryUID
		*out = new(string)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GkeClusterProfilePackObservation.
func (in *GkeClusterProfilePackObservation) DeepCopy() *GkeClusterProfilePackObservation {
	if in == nil {
		return nil
	}
	out := new(GkeClusterProfilePackObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GkeClusterProfilePackParameters) DeepCopyInto(out *GkeClusterProfilePackParameters) {
	*out = *in
	if in.Manifest != nil {
		in, out := &in.Manifest, &out.Manifest
		*out = make([]GkeClusterProfilePackManifestParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RegistryUID != nil {
		in, out := &in.RegistryUID, &out.RegistryUID
		*out = new(string)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GkeClusterProfilePackParameters.
func (in *GkeClusterProfilePackParameters) DeepCopy() *GkeClusterProfilePackParameters {
	if in == nil {
		return nil
	}
	out := new(GkeClusterProfilePackParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GkeClusterProfileParameters) DeepCopyInto(out *GkeClusterProfileParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Pack != nil {
		in, out := &in.Pack, &out.Pack
		*out = make([]GkeClusterProfilePackParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GkeClusterProfileParameters.
func (in *GkeClusterProfileParameters) DeepCopy() *GkeClusterProfileParameters {
	if in == nil {
		return nil
	}
	out := new(GkeClusterProfileParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GkeClusterRbacBindingInitParameters) DeepCopyInto(out *GkeClusterRbacBindingInitParameters) {
	*out = *in
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Subjects != nil {
		in, out := &in.Subjects, &out.Subjects
		*out = make([]GkeClusterRbacBindingSubjectsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GkeClusterRbacBindingInitParameters.
func (in *GkeClusterRbacBindingInitParameters) DeepCopy() *GkeClusterRbacBindingInitParameters {
	if in == nil {
		return nil
	}
	out := new(GkeClusterRbacBindingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GkeClusterRbacBindingObservation) DeepCopyInto(out *GkeClusterRbacBindingObservation) {
	*out = *in
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Subjects != nil {
		in, out := &in.Subjects, &out.Subjects
		*out = make([]GkeClusterRbacBindingSubjectsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GkeClusterRbacBindingObservation.
func (in *GkeClusterRbacBindingObservation) DeepCopy() *GkeClusterRbacBindingObservation {
	if in == nil {
		return nil
	}
	out := new(GkeClusterRbacBindingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GkeClusterRbacBindingParameters) DeepCopyInto(out *GkeClusterRbacBindingParameters) {
	*out = *in
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Subjects != nil {
		in, out := &in.Subjects, &out.Subjects
		*out = make([]GkeClusterRbacBindingSubjectsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GkeClusterRbacBindingParameters.
func (in *GkeClusterRbacBindingParameters) DeepCopy() *GkeClusterRbacBindingParameters {
	if in == nil {
		return nil
	}
	out := new(GkeClusterRbacBindingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GkeClusterRbacBindingSubjectsInitParameters) DeepCopyInto(out *GkeClusterRbacBindingSubjectsInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GkeClusterRbacBindingSubjectsInitParameters.
func (in *GkeClusterRbacBindingSubjectsInitParameters) DeepCopy() *GkeClusterRbacBindingSubjectsInitParameters {
	if in == nil {
		return nil
	}
	out := new(GkeClusterRbacBindingSubjectsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GkeClusterRbacBindingSubjectsObservation) DeepCopyInto(out *GkeClusterRbacBindingSubjectsObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GkeClusterRbacBindingSubjectsObservation.
func (in *GkeClusterRbacBindingSubjectsObservation) DeepCopy() *GkeClusterRbacBindingSubjectsObservation {
	if in == nil {
		return nil
	}
	out := new(GkeClusterRbacBindingSubjectsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GkeClusterRbacBindingSubjectsParameters) DeepCopyInto(out *GkeClusterRbacBindingSubjectsParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GkeClusterRbacBindingSubjectsParameters.
func (in *GkeClusterRbacBindingSubjectsParameters) DeepCopy() *GkeClusterRbacBindingSubjectsParameters {
	if in == nil {
		return nil
	}
	out := new(GkeClusterRbacBindingSubjectsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GkeHostConfigInitParameters) DeepCopyInto(out *GkeHostConfigInitParameters) {
	*out = *in
	if in.ExternalTrafficPolicy != nil {
		in, out := &in.ExternalTrafficPolicy, &out.ExternalTrafficPolicy
		*out = new(string)
		**out = **in
	}
	if in.HostEndpointType != nil {
		in, out := &in.HostEndpointType, &out.HostEndpointType
		*out = new(string)
		**out = **in
	}
	if in.IngressHost != nil {
		in, out := &in.IngressHost, &out.IngressHost
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancerSourceRanges != nil {
		in, out := &in.LoadBalancerSourceRanges, &out.LoadBalancerSourceRanges
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GkeHostConfigInitParameters.
func (in *GkeHostConfigInitParameters) DeepCopy() *GkeHostConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(GkeHostConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GkeHostConfigObservation) DeepCopyInto(out *GkeHostConfigObservation) {
	*out = *in
	if in.ExternalTrafficPolicy != nil {
		in, out := &in.ExternalTrafficPolicy, &out.ExternalTrafficPolicy
		*out = new(string)
		**out = **in
	}
	if in.HostEndpointType != nil {
		in, out := &in.HostEndpointType, &out.HostEndpointType
		*out = new(string)
		**out = **in
	}
	if in.IngressHost != nil {
		in, out := &in.IngressHost, &out.IngressHost
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancerSourceRanges != nil {
		in, out := &in.LoadBalancerSourceRanges, &out.LoadBalancerSourceRanges
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GkeHostConfigObservation.
func (in *GkeHostConfigObservation) DeepCopy() *GkeHostConfigObservation {
	if in == nil {
		return nil
	}
	out := new(GkeHostConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GkeHostConfigParameters) DeepCopyInto(out *GkeHostConfigParameters) {
	*out = *in
	if in.ExternalTrafficPolicy != nil {
		in, out := &in.ExternalTrafficPolicy, &out.ExternalTrafficPolicy
		*out = new(string)
		**out = **in
	}
	if in.HostEndpointType != nil {
		in, out := &in.HostEndpointType, &out.HostEndpointType
		*out = new(string)
		**out = **in
	}
	if in.IngressHost != nil {
		in, out := &in.IngressHost, &out.IngressHost
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancerSourceRanges != nil {
		in, out := &in.LoadBalancerSourceRanges, &out.LoadBalancerSourceRanges
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GkeHostConfigParameters.
func (in *GkeHostConfigParameters) DeepCopy() *GkeHostConfigParameters {
	if in == nil {
		return nil
	}
	out := new(GkeHostConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GkeInitParameters) DeepCopyInto(out *GkeInitParameters) {
	*out = *in
	if in.ApplySetting != nil {
		in, out := &in.ApplySetting, &out.ApplySetting
		*out = new(string)
		**out = **in
	}
	if in.BackupPolicy != nil {
		in, out := &in.BackupPolicy, &out.BackupPolicy
		*out = make([]GkeBackupPolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CloudAccountID != nil {
		in, out := &in.CloudAccountID, &out.CloudAccountID
		*out = new(string)
		**out = **in
	}
	if in.CloudConfig != nil {
		in, out := &in.CloudConfig, &out.CloudConfig
		*out = make([]GkeCloudConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterMetaAttribute != nil {
		in, out := &in.ClusterMetaAttribute, &out.ClusterMetaAttribute
		*out = new(string)
		**out = **in
	}
	if in.ClusterProfile != nil {
		in, out := &in.ClusterProfile, &out.ClusterProfile
		*out = make([]GkeClusterProfileInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterRbacBinding != nil {
		in, out := &in.ClusterRbacBinding, &out.ClusterRbacBinding
		*out = make([]GkeClusterRbacBindingInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Context != nil {
		in, out := &in.Context, &out.Context
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ForceDelete != nil {
		in, out := &in.ForceDelete, &out.ForceDelete
		*out = new(bool)
		**out = **in
	}
	if in.ForceDeleteDelay != nil {
		in, out := &in.ForceDeleteDelay, &out.ForceDeleteDelay
		*out = new(float64)
		**out = **in
	}
	if in.HostConfig != nil {
		in, out := &in.HostConfig, &out.HostConfig
		*out = make([]GkeHostConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MachinePool != nil {
		in, out := &in.MachinePool, &out.MachinePool
		*out = make([]GkeMachinePoolInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]GkeNamespacesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OsPatchAfter != nil {
		in, out := &in.OsPatchAfter, &out.OsPatchAfter
		*out = new(string)
		**out = **in
	}
	if in.OsPatchOnBoot != nil {
		in, out := &in.OsPatchOnBoot, &out.OsPatchOnBoot
		*out = new(bool)
		**out = **in
	}
	if in.OsPatchSchedule != nil {
		in, out := &in.OsPatchSchedule, &out.OsPatchSchedule
		*out = new(string)
		**out = **in
	}
	if in.PauseAgentUpgrades != nil {
		in, out := &in.PauseAgentUpgrades, &out.PauseAgentUpgrades
		*out = new(string)
		**out = **in
	}
	if in.ReviewRepaveState != nil {
		in, out := &in.ReviewRepaveState, &out.ReviewRepaveState
		*out = new(string)
		**out = **in
	}
	if in.ScanPolicy != nil {
		in, out := &in.ScanPolicy, &out.ScanPolicy
		*out = make([]GkeScanPolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SkipCompletion != nil {
		in, out := &in.SkipCompletion, &out.SkipCompletion
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.UpdateWorkerPoolInParallel != nil {
		in, out := &in.UpdateWorkerPoolInParallel, &out.UpdateWorkerPoolInParallel
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GkeInitParameters.
func (in *GkeInitParameters) DeepCopy() *GkeInitParameters {
	if in == nil {
		return nil
	}
	out := new(GkeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GkeList) DeepCopyInto(out *GkeList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Gke, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GkeList.
func (in *GkeList) DeepCopy() *GkeList {
	if in == nil {
		return nil
	}
	out := new(GkeList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GkeList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GkeLocationConfigInitParameters) DeepCopyInto(out *GkeLocationConfigInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GkeLocationConfigInitParameters.
func (in *GkeLocationConfigInitParameters) DeepCopy() *GkeLocationConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(GkeLocationConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GkeLocationConfigObservation) DeepCopyInto(out *GkeLocationConfigObservation) {
	*out = *in
	if in.CountryCode != nil {
		in, out := &in.CountryCode, &out.CountryCode
		*out = new(string)
		**out = **in
	}
	if in.CountryName != nil {
		in, out := &in.CountryName, &out.CountryName
		*out = new(string)
		**out = **in
	}
	if in.Latitude != nil {
		in, out := &in.Latitude, &out.Latitude
		*out = new(float64)
		**out = **in
	}
	if in.Longitude != nil {
		in, out := &in.Longitude, &out.Longitude
		*out = new(float64)
		**out = **in
	}
	if in.RegionCode != nil {
		in, out := &in.RegionCode, &out.RegionCode
		*out = new(string)
		**out = **in
	}
	if in.RegionName != nil {
		in, out := &in.RegionName, &out.RegionName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GkeLocationConfigObservation.
func (in *GkeLocationConfigObservation) DeepCopy() *GkeLocationConfigObservation {
	if in == nil {
		return nil
	}
	out := new(GkeLocationConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GkeLocationConfigParameters) DeepCopyInto(out *GkeLocationConfigParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GkeLocationConfigParameters.
func (in *GkeLocationConfigParameters) DeepCopy() *GkeLocationConfigParameters {
	if in == nil {
		return nil
	}
	out := new(GkeLocationConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GkeMachinePoolInitParameters) DeepCopyInto(out *GkeMachinePoolInitParameters) {
	*out = *in
	if in.AdditionalLabels != nil {
		in, out := &in.AdditionalLabels, &out.AdditionalLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.DiskSizeGb != nil {
		in, out := &in.DiskSizeGb, &out.DiskSizeGb
		*out = new(float64)
		**out = **in
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Node != nil {
		in, out := &in.Node, &out.Node
		*out = make([]GkeMachinePoolNodeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Taints != nil {
		in, out := &in.Taints, &out.Taints
		*out = make([]GkeMachinePoolTaintsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UpdateStrategy != nil {
		in, out := &in.UpdateStrategy, &out.UpdateStrategy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GkeMachinePoolInitParameters.
func (in *GkeMachinePoolInitParameters) DeepCopy() *GkeMachinePoolInitParameters {
	if in == nil {
		return nil
	}
	out := new(GkeMachinePoolInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GkeMachinePoolNodeInitParameters) DeepCopyInto(out *GkeMachinePoolNodeInitParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.NodeID != nil {
		in, out := &in.NodeID, &out.NodeID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GkeMachinePoolNodeInitParameters.
func (in *GkeMachinePoolNodeInitParameters) DeepCopy() *GkeMachinePoolNodeInitParameters {
	if in == nil {
		return nil
	}
	out := new(GkeMachinePoolNodeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GkeMachinePoolNodeObservation) DeepCopyInto(out *GkeMachinePoolNodeObservation) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.NodeID != nil {
		in, out := &in.NodeID, &out.NodeID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GkeMachinePoolNodeObservation.
func (in *GkeMachinePoolNodeObservation) DeepCopy() *GkeMachinePoolNodeObservation {
	if in == nil {
		return nil
	}
	out := new(GkeMachinePoolNodeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GkeMachinePoolNodeParameters) DeepCopyInto(out *GkeMachinePoolNodeParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.NodeID != nil {
		in, out := &in.NodeID, &out.NodeID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GkeMachinePoolNodeParameters.
func (in *GkeMachinePoolNodeParameters) DeepCopy() *GkeMachinePoolNodeParameters {
	if in == nil {
		return nil
	}
	out := new(GkeMachinePoolNodeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GkeMachinePoolObservation) DeepCopyInto(out *GkeMachinePoolObservation) {
	*out = *in
	if in.AdditionalLabels != nil {
		in, out := &in.AdditionalLabels, &out.AdditionalLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.DiskSizeGb != nil {
		in, out := &in.DiskSizeGb, &out.DiskSizeGb
		*out = new(float64)
		**out = **in
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Node != nil {
		in, out := &in.Node, &out.Node
		*out = make([]GkeMachinePoolNodeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Taints != nil {
		in, out := &in.Taints, &out.Taints
		*out = make([]GkeMachinePoolTaintsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UpdateStrategy != nil {
		in, out := &in.UpdateStrategy, &out.UpdateStrategy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GkeMachinePoolObservation.
func (in *GkeMachinePoolObservation) DeepCopy() *GkeMachinePoolObservation {
	if in == nil {
		return nil
	}
	out := new(GkeMachinePoolObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GkeMachinePoolParameters) DeepCopyInto(out *GkeMachinePoolParameters) {
	*out = *in
	if in.AdditionalLabels != nil {
		in, out := &in.AdditionalLabels, &out.AdditionalLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.DiskSizeGb != nil {
		in, out := &in.DiskSizeGb, &out.DiskSizeGb
		*out = new(float64)
		**out = **in
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Node != nil {
		in, out := &in.Node, &out.Node
		*out = make([]GkeMachinePoolNodeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Taints != nil {
		in, out := &in.Taints, &out.Taints
		*out = make([]GkeMachinePoolTaintsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UpdateStrategy != nil {
		in, out := &in.UpdateStrategy, &out.UpdateStrategy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GkeMachinePoolParameters.
func (in *GkeMachinePoolParameters) DeepCopy() *GkeMachinePoolParameters {
	if in == nil {
		return nil
	}
	out := new(GkeMachinePoolParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GkeMachinePoolTaintsInitParameters) DeepCopyInto(out *GkeMachinePoolTaintsInitParameters) {
	*out = *in
	if in.Effect != nil {
		in, out := &in.Effect, &out.Effect
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GkeMachinePoolTaintsInitParameters.
func (in *GkeMachinePoolTaintsInitParameters) DeepCopy() *GkeMachinePoolTaintsInitParameters {
	if in == nil {
		return nil
	}
	out := new(GkeMachinePoolTaintsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GkeMachinePoolTaintsObservation) DeepCopyInto(out *GkeMachinePoolTaintsObservation) {
	*out = *in
	if in.Effect != nil {
		in, out := &in.Effect, &out.Effect
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GkeMachinePoolTaintsObservation.
func (in *GkeMachinePoolTaintsObservation) DeepCopy() *GkeMachinePoolTaintsObservation {
	if in == nil {
		return nil
	}
	out := new(GkeMachinePoolTaintsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GkeMachinePoolTaintsParameters) DeepCopyInto(out *GkeMachinePoolTaintsParameters) {
	*out = *in
	if in.Effect != nil {
		in, out := &in.Effect, &out.Effect
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GkeMachinePoolTaintsParameters.
func (in *GkeMachinePoolTaintsParameters) DeepCopy() *GkeMachinePoolTaintsParameters {
	if in == nil {
		return nil
	}
	out := new(GkeMachinePoolTaintsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GkeNamespacesInitParameters) DeepCopyInto(out *GkeNamespacesInitParameters) {
	*out = *in
	if in.ImagesBlacklist != nil {
		in, out := &in.ImagesBlacklist, &out.ImagesBlacklist
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ResourceAllocation != nil {
		in, out := &in.ResourceAllocation, &out.ResourceAllocation
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GkeNamespacesInitParameters.
func (in *GkeNamespacesInitParameters) DeepCopy() *GkeNamespacesInitParameters {
	if in == nil {
		return nil
	}
	out := new(GkeNamespacesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GkeNamespacesObservation) DeepCopyInto(out *GkeNamespacesObservation) {
	*out = *in
	if in.ImagesBlacklist != nil {
		in, out := &in.ImagesBlacklist, &out.ImagesBlacklist
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ResourceAllocation != nil {
		in, out := &in.ResourceAllocation, &out.ResourceAllocation
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GkeNamespacesObservation.
func (in *GkeNamespacesObservation) DeepCopy() *GkeNamespacesObservation {
	if in == nil {
		return nil
	}
	out := new(GkeNamespacesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GkeNamespacesParameters) DeepCopyInto(out *GkeNamespacesParameters) {
	*out = *in
	if in.ImagesBlacklist != nil {
		in, out := &in.ImagesBlacklist, &out.ImagesBlacklist
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ResourceAllocation != nil {
		in, out := &in.ResourceAllocation, &out.ResourceAllocation
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GkeNamespacesParameters.
func (in *GkeNamespacesParameters) DeepCopy() *GkeNamespacesParameters {
	if in == nil {
		return nil
	}
	out := new(GkeNamespacesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GkeObservation) DeepCopyInto(out *GkeObservation) {
	*out = *in
	if in.AdminKubeConfig != nil {
		in, out := &in.AdminKubeConfig, &out.AdminKubeConfig
		*out = new(string)
		**out = **in
	}
	if in.ApplySetting != nil {
		in, out := &in.ApplySetting, &out.ApplySetting
		*out = new(string)
		**out = **in
	}
	if in.BackupPolicy != nil {
		in, out := &in.BackupPolicy, &out.BackupPolicy
		*out = make([]GkeBackupPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CloudAccountID != nil {
		in, out := &in.CloudAccountID, &out.CloudAccountID
		*out = new(string)
		**out = **in
	}
	if in.CloudConfig != nil {
		in, out := &in.CloudConfig, &out.CloudConfig
		*out = make([]GkeCloudConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CloudConfigID != nil {
		in, out := &in.CloudConfigID, &out.CloudConfigID
		*out = new(string)
		**out = **in
	}
	if in.ClusterMetaAttribute != nil {
		in, out := &in.ClusterMetaAttribute, &out.ClusterMetaAttribute
		*out = new(string)
		**out = **in
	}
	if in.ClusterProfile != nil {
		in, out := &in.ClusterProfile, &out.ClusterProfile
		*out = make([]GkeClusterProfileObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterRbacBinding != nil {
		in, out := &in.ClusterRbacBinding, &out.ClusterRbacBinding
		*out = make([]GkeClusterRbacBindingObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Context != nil {
		in, out := &in.Context, &out.Context
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ForceDelete != nil {
		in, out := &in.ForceDelete, &out.ForceDelete
		*out = new(bool)
		**out = **in
	}
	if in.ForceDeleteDelay != nil {
		in, out := &in.ForceDeleteDelay, &out.ForceDeleteDelay
		*out = new(float64)
		**out = **in
	}
	if in.HostConfig != nil {
		in, out := &in.HostConfig, &out.HostConfig
		*out = make([]GkeHostConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Kubeconfig != nil {
		in, out := &in.Kubeconfig, &out.Kubeconfig
		*out = new(string)
		**out = **in
	}
	if in.LocationConfig != nil {
		in, out := &in.LocationConfig, &out.LocationConfig
		*out = make([]GkeLocationConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MachinePool != nil {
		in, out := &in.MachinePool, &out.MachinePool
		*out = make([]GkeMachinePoolObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]GkeNamespacesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OsPatchAfter != nil {
		in, out := &in.OsPatchAfter, &out.OsPatchAfter
		*out = new(string)
		**out = **in
	}
	if in.OsPatchOnBoot != nil {
		in, out := &in.OsPatchOnBoot, &out.OsPatchOnBoot
		*out = new(bool)
		**out = **in
	}
	if in.OsPatchSchedule != nil {
		in, out := &in.OsPatchSchedule, &out.OsPatchSchedule
		*out = new(string)
		**out = **in
	}
	if in.PauseAgentUpgrades != nil {
		in, out := &in.PauseAgentUpgrades, &out.PauseAgentUpgrades
		*out = new(string)
		**out = **in
	}
	if in.ReviewRepaveState != nil {
		in, out := &in.ReviewRepaveState, &out.ReviewRepaveState
		*out = new(string)
		**out = **in
	}
	if in.ScanPolicy != nil {
		in, out := &in.ScanPolicy, &out.ScanPolicy
		*out = make([]GkeScanPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SkipCompletion != nil {
		in, out := &in.SkipCompletion, &out.SkipCompletion
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.UpdateWorkerPoolInParallel != nil {
		in, out := &in.UpdateWorkerPoolInParallel, &out.UpdateWorkerPoolInParallel
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GkeObservation.
func (in *GkeObservation) DeepCopy() *GkeObservation {
	if in == nil {
		return nil
	}
	out := new(GkeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GkeParameters) DeepCopyInto(out *GkeParameters) {
	*out = *in
	if in.ApplySetting != nil {
		in, out := &in.ApplySetting, &out.ApplySetting
		*out = new(string)
		**out = **in
	}
	if in.BackupPolicy != nil {
		in, out := &in.BackupPolicy, &out.BackupPolicy
		*out = make([]GkeBackupPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CloudAccountID != nil {
		in, out := &in.CloudAccountID, &out.CloudAccountID
		*out = new(string)
		**out = **in
	}
	if in.CloudConfig != nil {
		in, out := &in.CloudConfig, &out.CloudConfig
		*out = make([]GkeCloudConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterMetaAttribute != nil {
		in, out := &in.ClusterMetaAttribute, &out.ClusterMetaAttribute
		*out = new(string)
		**out = **in
	}
	if in.ClusterProfile != nil {
		in, out := &in.ClusterProfile, &out.ClusterProfile
		*out = make([]GkeClusterProfileParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterRbacBinding != nil {
		in, out := &in.ClusterRbacBinding, &out.ClusterRbacBinding
		*out = make([]GkeClusterRbacBindingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Context != nil {
		in, out := &in.Context, &out.Context
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ForceDelete != nil {
		in, out := &in.ForceDelete, &out.ForceDelete
		*out = new(bool)
		**out = **in
	}
	if in.ForceDeleteDelay != nil {
		in, out := &in.ForceDeleteDelay, &out.ForceDeleteDelay
		*out = new(float64)
		**out = **in
	}
	if in.HostConfig != nil {
		in, out := &in.HostConfig, &out.HostConfig
		*out = make([]GkeHostConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MachinePool != nil {
		in, out := &in.MachinePool, &out.MachinePool
		*out = make([]GkeMachinePoolParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]GkeNamespacesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OsPatchAfter != nil {
		in, out := &in.OsPatchAfter, &out.OsPatchAfter
		*out = new(string)
		**out = **in
	}
	if in.OsPatchOnBoot != nil {
		in, out := &in.OsPatchOnBoot, &out.OsPatchOnBoot
		*out = new(bool)
		**out = **in
	}
	if in.OsPatchSchedule != nil {
		in, out := &in.OsPatchSchedule, &out.OsPatchSchedule
		*out = new(string)
		**out = **in
	}
	if in.PauseAgentUpgrades != nil {
		in, out := &in.PauseAgentUpgrades, &out.PauseAgentUpgrades
		*out = new(string)
		**out = **in
	}
	if in.ReviewRepaveState != nil {
		in, out := &in.ReviewRepaveState, &out.ReviewRepaveState
		*out = new(string)
		**out = **in
	}
	if in.ScanPolicy != nil {
		in, out := &in.ScanPolicy, &out.ScanPolicy
		*out = make([]GkeScanPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SkipCompletion != nil {
		in, out := &in.SkipCompletion, &out.SkipCompletion
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.UpdateWorkerPoolInParallel != nil {
		in, out := &in.UpdateWorkerPoolInParallel, &out.UpdateWorkerPoolInParallel
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GkeParameters.
func (in *GkeParameters) DeepCopy() *GkeParameters {
	if in == nil {
		return nil
	}
	out := new(GkeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GkeScanPolicyInitParameters) DeepCopyInto(out *GkeScanPolicyInitParameters) {
	*out = *in
	if in.ConfigurationScanSchedule != nil {
		in, out := &in.ConfigurationScanSchedule, &out.ConfigurationScanSchedule
		*out = new(string)
		**out = **in
	}
	if in.ConformanceScanSchedule != nil {
		in, out := &in.ConformanceScanSchedule, &out.ConformanceScanSchedule
		*out = new(string)
		**out = **in
	}
	if in.PenetrationScanSchedule != nil {
		in, out := &in.PenetrationScanSchedule, &out.PenetrationScanSchedule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GkeScanPolicyInitParameters.
func (in *GkeScanPolicyInitParameters) DeepCopy() *GkeScanPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(GkeScanPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GkeScanPolicyObservation) DeepCopyInto(out *GkeScanPolicyObservation) {
	*out = *in
	if in.ConfigurationScanSchedule != nil {
		in, out := &in.ConfigurationScanSchedule, &out.ConfigurationScanSchedule
		*out = new(string)
		**out = **in
	}
	if in.ConformanceScanSchedule != nil {
		in, out := &in.ConformanceScanSchedule, &out.ConformanceScanSchedule
		*out = new(string)
		**out = **in
	}
	if in.PenetrationScanSchedule != nil {
		in, out := &in.PenetrationScanSchedule, &out.PenetrationScanSchedule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GkeScanPolicyObservation.
func (in *GkeScanPolicyObservation) DeepCopy() *GkeScanPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(GkeScanPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GkeScanPolicyParameters) DeepCopyInto(out *GkeScanPolicyParameters) {
	*out = *in
	if in.ConfigurationScanSchedule != nil {
		in, out := &in.ConfigurationScanSchedule, &out.ConfigurationScanSchedule
		*out = new(string)
		**out = **in
	}
	if in.ConformanceScanSchedule != nil {
		in, out := &in.ConformanceScanSchedule, &out.ConformanceScanSchedule
		*out = new(string)
		**out = **in
	}
	if in.PenetrationScanSchedule != nil {
		in, out := &in.PenetrationScanSchedule, &out.PenetrationScanSchedule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GkeScanPolicyParameters.
func (in *GkeScanPolicyParameters) DeepCopy() *GkeScanPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(GkeScanPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GkeSpec) DeepCopyInto(out *GkeSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GkeSpec.
func (in *GkeSpec) DeepCopy() *GkeSpec {
	if in == nil {
		return nil
	}
	out := new(GkeSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GkeStatus) DeepCopyInto(out *GkeStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GkeStatus.
func (in *GkeStatus) DeepCopy() *GkeStatus {
	if in == nil {
		return nil
	}
	out := new(GkeStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GpuConfigInitParameters) DeepCopyInto(out *GpuConfigInitParameters) {
	*out = *in
	if in.Addresses != nil {
		in, out := &in.Addresses, &out.Addresses
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DeviceModel != nil {
		in, out := &in.DeviceModel, &out.DeviceModel
		*out = new(string)
		**out = **in
	}
	if in.NumGpus != nil {
		in, out := &in.NumGpus, &out.NumGpus
		*out = new(float64)
		**out = **in
	}
	if in.Vendor != nil {
		in, out := &in.Vendor, &out.Vendor
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GpuConfigInitParameters.
func (in *GpuConfigInitParameters) DeepCopy() *GpuConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(GpuConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GpuConfigObservation) DeepCopyInto(out *GpuConfigObservation) {
	*out = *in
	if in.Addresses != nil {
		in, out := &in.Addresses, &out.Addresses
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DeviceModel != nil {
		in, out := &in.DeviceModel, &out.DeviceModel
		*out = new(string)
		**out = **in
	}
	if in.NumGpus != nil {
		in, out := &in.NumGpus, &out.NumGpus
		*out = new(float64)
		**out = **in
	}
	if in.Vendor != nil {
		in, out := &in.Vendor, &out.Vendor
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GpuConfigObservation.
func (in *GpuConfigObservation) DeepCopy() *GpuConfigObservation {
	if in == nil {
		return nil
	}
	out := new(GpuConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GpuConfigParameters) DeepCopyInto(out *GpuConfigParameters) {
	*out = *in
	if in.Addresses != nil {
		in, out := &in.Addresses, &out.Addresses
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DeviceModel != nil {
		in, out := &in.DeviceModel, &out.DeviceModel
		*out = new(string)
		**out = **in
	}
	if in.NumGpus != nil {
		in, out := &in.NumGpus, &out.NumGpus
		*out = new(float64)
		**out = **in
	}
	if in.Vendor != nil {
		in, out := &in.Vendor, &out.Vendor
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GpuConfigParameters.
func (in *GpuConfigParameters) DeepCopy() *GpuConfigParameters {
	if in == nil {
		return nil
	}
	out := new(GpuConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GpuDeviceInitParameters) DeepCopyInto(out *GpuDeviceInitParameters) {
	*out = *in
	if in.Addresses != nil {
		in, out := &in.Addresses, &out.Addresses
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DeviceModel != nil {
		in, out := &in.DeviceModel, &out.DeviceModel
		*out = new(string)
		**out = **in
	}
	if in.Vendor != nil {
		in, out := &in.Vendor, &out.Vendor
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GpuDeviceInitParameters.
func (in *GpuDeviceInitParameters) DeepCopy() *GpuDeviceInitParameters {
	if in == nil {
		return nil
	}
	out := new(GpuDeviceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GpuDeviceObservation) DeepCopyInto(out *GpuDeviceObservation) {
	*out = *in
	if in.Addresses != nil {
		in, out := &in.Addresses, &out.Addresses
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DeviceModel != nil {
		in, out := &in.DeviceModel, &out.DeviceModel
		*out = new(string)
		**out = **in
	}
	if in.Vendor != nil {
		in, out := &in.Vendor, &out.Vendor
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GpuDeviceObservation.
func (in *GpuDeviceObservation) DeepCopy() *GpuDeviceObservation {
	if in == nil {
		return nil
	}
	out := new(GpuDeviceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GpuDeviceParameters) DeepCopyInto(out *GpuDeviceParameters) {
	*out = *in
	if in.Addresses != nil {
		in, out := &in.Addresses, &out.Addresses
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DeviceModel != nil {
		in, out := &in.DeviceModel, &out.DeviceModel
		*out = new(string)
		**out = **in
	}
	if in.Vendor != nil {
		in, out := &in.Vendor, &out.Vendor
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GpuDeviceParameters.
func (in *GpuDeviceParameters) DeepCopy() *GpuDeviceParameters {
	if in == nil {
		return nil
	}
	out := new(GpuDeviceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Group) DeepCopyInto(out *Group) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Group.
func (in *Group) DeepCopy() *Group {
	if in == nil {
		return nil
	}
	out := new(Group)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Group) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupClusterProfileInitParameters) DeepCopyInto(out *GroupClusterProfileInitParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Pack != nil {
		in, out := &in.Pack, &out.Pack
		*out = make([]GroupClusterProfilePackInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupClusterProfileInitParameters.
func (in *GroupClusterProfileInitParameters) DeepCopy() *GroupClusterProfileInitParameters {
	if in == nil {
		return nil
	}
	out := new(GroupClusterProfileInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupClusterProfileObservation) DeepCopyInto(out *GroupClusterProfileObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Pack != nil {
		in, out := &in.Pack, &out.Pack
		*out = make([]GroupClusterProfilePackObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupClusterProfileObservation.
func (in *GroupClusterProfileObservation) DeepCopy() *GroupClusterProfileObservation {
	if in == nil {
		return nil
	}
	out := new(GroupClusterProfileObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupClusterProfilePackInitParameters) DeepCopyInto(out *GroupClusterProfilePackInitParameters) {
	*out = *in
	if in.Manifest != nil {
		in, out := &in.Manifest, &out.Manifest
		*out = make([]GroupClusterProfilePackManifestInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RegistryUID != nil {
		in, out := &in.RegistryUID, &out.RegistryUID
		*out = new(string)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupClusterProfilePackInitParameters.
func (in *GroupClusterProfilePackInitParameters) DeepCopy() *GroupClusterProfilePackInitParameters {
	if in == nil {
		return nil
	}
	out := new(GroupClusterProfilePackInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupClusterProfilePackManifestInitParameters) DeepCopyInto(out *GroupClusterProfilePackManifestInitParameters) {
	*out = *in
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupClusterProfilePackManifestInitParameters.
func (in *GroupClusterProfilePackManifestInitParameters) DeepCopy() *GroupClusterProfilePackManifestInitParameters {
	if in == nil {
		return nil
	}
	out := new(GroupClusterProfilePackManifestInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupClusterProfilePackManifestObservation) DeepCopyInto(out *GroupClusterProfilePackManifestObservation) {
	*out = *in
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupClusterProfilePackManifestObservation.
func (in *GroupClusterProfilePackManifestObservation) DeepCopy() *GroupClusterProfilePackManifestObservation {
	if in == nil {
		return nil
	}
	out := new(GroupClusterProfilePackManifestObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupClusterProfilePackManifestParameters) DeepCopyInto(out *GroupClusterProfilePackManifestParameters) {
	*out = *in
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupClusterProfilePackManifestParameters.
func (in *GroupClusterProfilePackManifestParameters) DeepCopy() *GroupClusterProfilePackManifestParameters {
	if in == nil {
		return nil
	}
	out := new(GroupClusterProfilePackManifestParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupClusterProfilePackObservation) DeepCopyInto(out *GroupClusterProfilePackObservation) {
	*out = *in
	if in.Manifest != nil {
		in, out := &in.Manifest, &out.Manifest
		*out = make([]GroupClusterProfilePackManifestObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RegistryUID != nil {
		in, out := &in.RegistryUID, &out.RegistryUID
		*out = new(string)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupClusterProfilePackObservation.
func (in *GroupClusterProfilePackObservation) DeepCopy() *GroupClusterProfilePackObservation {
	if in == nil {
		return nil
	}
	out := new(GroupClusterProfilePackObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupClusterProfilePackParameters) DeepCopyInto(out *GroupClusterProfilePackParameters) {
	*out = *in
	if in.Manifest != nil {
		in, out := &in.Manifest, &out.Manifest
		*out = make([]GroupClusterProfilePackManifestParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RegistryUID != nil {
		in, out := &in.RegistryUID, &out.RegistryUID
		*out = new(string)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupClusterProfilePackParameters.
func (in *GroupClusterProfilePackParameters) DeepCopy() *GroupClusterProfilePackParameters {
	if in == nil {
		return nil
	}
	out := new(GroupClusterProfilePackParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupClusterProfileParameters) DeepCopyInto(out *GroupClusterProfileParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Pack != nil {
		in, out := &in.Pack, &out.Pack
		*out = make([]GroupClusterProfilePackParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupClusterProfileParameters.
func (in *GroupClusterProfileParameters) DeepCopy() *GroupClusterProfileParameters {
	if in == nil {
		return nil
	}
	out := new(GroupClusterProfileParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupInitParameters) DeepCopyInto(out *GroupInitParameters) {
	*out = *in
	if in.ClusterProfile != nil {
		in, out := &in.ClusterProfile, &out.ClusterProfile
		*out = make([]GroupClusterProfileInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Clusters != nil {
		in, out := &in.Clusters, &out.Clusters
		*out = make([]ClustersInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Config != nil {
		in, out := &in.Config, &out.Config
		*out = make([]ConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Context != nil {
		in, out := &in.Context, &out.Context
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupInitParameters.
func (in *GroupInitParameters) DeepCopy() *GroupInitParameters {
	if in == nil {
		return nil
	}
	out := new(GroupInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupList) DeepCopyInto(out *GroupList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Group, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupList.
func (in *GroupList) DeepCopy() *GroupList {
	if in == nil {
		return nil
	}
	out := new(GroupList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GroupList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupObservation) DeepCopyInto(out *GroupObservation) {
	*out = *in
	if in.ClusterProfile != nil {
		in, out := &in.ClusterProfile, &out.ClusterProfile
		*out = make([]GroupClusterProfileObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Clusters != nil {
		in, out := &in.Clusters, &out.Clusters
		*out = make([]ClustersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Config != nil {
		in, out := &in.Config, &out.Config
		*out = make([]ConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Context != nil {
		in, out := &in.Context, &out.Context
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupObservation.
func (in *GroupObservation) DeepCopy() *GroupObservation {
	if in == nil {
		return nil
	}
	out := new(GroupObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupParameters) DeepCopyInto(out *GroupParameters) {
	*out = *in
	if in.ClusterProfile != nil {
		in, out := &in.ClusterProfile, &out.ClusterProfile
		*out = make([]GroupClusterProfileParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Clusters != nil {
		in, out := &in.Clusters, &out.Clusters
		*out = make([]ClustersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Config != nil {
		in, out := &in.Config, &out.Config
		*out = make([]ConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Context != nil {
		in, out := &in.Context, &out.Context
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupParameters.
func (in *GroupParameters) DeepCopy() *GroupParameters {
	if in == nil {
		return nil
	}
	out := new(GroupParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupSpec) DeepCopyInto(out *GroupSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupSpec.
func (in *GroupSpec) DeepCopy() *GroupSpec {
	if in == nil {
		return nil
	}
	out := new(GroupSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupStatus) DeepCopyInto(out *GroupStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupStatus.
func (in *GroupStatus) DeepCopy() *GroupStatus {
	if in == nil {
		return nil
	}
	out := new(GroupStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HostConfigInitParameters) DeepCopyInto(out *HostConfigInitParameters) {
	*out = *in
	if in.ExternalTrafficPolicy != nil {
		in, out := &in.ExternalTrafficPolicy, &out.ExternalTrafficPolicy
		*out = new(string)
		**out = **in
	}
	if in.HostEndpointType != nil {
		in, out := &in.HostEndpointType, &out.HostEndpointType
		*out = new(string)
		**out = **in
	}
	if in.IngressHost != nil {
		in, out := &in.IngressHost, &out.IngressHost
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancerSourceRanges != nil {
		in, out := &in.LoadBalancerSourceRanges, &out.LoadBalancerSourceRanges
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HostConfigInitParameters.
func (in *HostConfigInitParameters) DeepCopy() *HostConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(HostConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HostConfigObservation) DeepCopyInto(out *HostConfigObservation) {
	*out = *in
	if in.ExternalTrafficPolicy != nil {
		in, out := &in.ExternalTrafficPolicy, &out.ExternalTrafficPolicy
		*out = new(string)
		**out = **in
	}
	if in.HostEndpointType != nil {
		in, out := &in.HostEndpointType, &out.HostEndpointType
		*out = new(string)
		**out = **in
	}
	if in.IngressHost != nil {
		in, out := &in.IngressHost, &out.IngressHost
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancerSourceRanges != nil {
		in, out := &in.LoadBalancerSourceRanges, &out.LoadBalancerSourceRanges
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HostConfigObservation.
func (in *HostConfigObservation) DeepCopy() *HostConfigObservation {
	if in == nil {
		return nil
	}
	out := new(HostConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HostConfigParameters) DeepCopyInto(out *HostConfigParameters) {
	*out = *in
	if in.ExternalTrafficPolicy != nil {
		in, out := &in.ExternalTrafficPolicy, &out.ExternalTrafficPolicy
		*out = new(string)
		**out = **in
	}
	if in.HostEndpointType != nil {
		in, out := &in.HostEndpointType, &out.HostEndpointType
		*out = new(string)
		**out = **in
	}
	if in.IngressHost != nil {
		in, out := &in.IngressHost, &out.IngressHost
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancerSourceRanges != nil {
		in, out := &in.LoadBalancerSourceRanges, &out.LoadBalancerSourceRanges
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HostConfigParameters.
func (in *HostConfigParameters) DeepCopy() *HostConfigParameters {
	if in == nil {
		return nil
	}
	out := new(HostConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceTypeInitParameters) DeepCopyInto(out *InstanceTypeInitParameters) {
	*out = *in
	if in.CPU != nil {
		in, out := &in.CPU, &out.CPU
		*out = new(float64)
		**out = **in
	}
	if in.DiskSizeGb != nil {
		in, out := &in.DiskSizeGb, &out.DiskSizeGb
		*out = new(float64)
		**out = **in
	}
	if in.MemoryMb != nil {
		in, out := &in.MemoryMb, &out.MemoryMb
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceTypeInitParameters.
func (in *InstanceTypeInitParameters) DeepCopy() *InstanceTypeInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceTypeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceTypeObservation) DeepCopyInto(out *InstanceTypeObservation) {
	*out = *in
	if in.CPU != nil {
		in, out := &in.CPU, &out.CPU
		*out = new(float64)
		**out = **in
	}
	if in.DiskSizeGb != nil {
		in, out := &in.DiskSizeGb, &out.DiskSizeGb
		*out = new(float64)
		**out = **in
	}
	if in.MemoryMb != nil {
		in, out := &in.MemoryMb, &out.MemoryMb
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceTypeObservation.
func (in *InstanceTypeObservation) DeepCopy() *InstanceTypeObservation {
	if in == nil {
		return nil
	}
	out := new(InstanceTypeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceTypeParameters) DeepCopyInto(out *InstanceTypeParameters) {
	*out = *in
	if in.CPU != nil {
		in, out := &in.CPU, &out.CPU
		*out = new(float64)
		**out = **in
	}
	if in.DiskSizeGb != nil {
		in, out := &in.DiskSizeGb, &out.DiskSizeGb
		*out = new(float64)
		**out = **in
	}
	if in.MemoryMb != nil {
		in, out := &in.MemoryMb, &out.MemoryMb
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceTypeParameters.
func (in *InstanceTypeParameters) DeepCopy() *InstanceTypeParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceTypeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Libvirt) DeepCopyInto(out *Libvirt) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Libvirt.
func (in *Libvirt) DeepCopy() *Libvirt {
	if in == nil {
		return nil
	}
	out := new(Libvirt)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Libvirt) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibvirtBackupPolicyInitParameters) DeepCopyInto(out *LibvirtBackupPolicyInitParameters) {
	*out = *in
	if in.BackupLocationID != nil {
		in, out := &in.BackupLocationID, &out.BackupLocationID
		*out = new(string)
		**out = **in
	}
	if in.ClusterUids != nil {
		in, out := &in.ClusterUids, &out.ClusterUids
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExpiryInHour != nil {
		in, out := &in.ExpiryInHour, &out.ExpiryInHour
		*out = new(float64)
		**out = **in
	}
	if in.IncludeAllClusters != nil {
		in, out := &in.IncludeAllClusters, &out.IncludeAllClusters
		*out = new(bool)
		**out = **in
	}
	if in.IncludeClusterResources != nil {
		in, out := &in.IncludeClusterResources, &out.IncludeClusterResources
		*out = new(bool)
		**out = **in
	}
	if in.IncludeDisks != nil {
		in, out := &in.IncludeDisks, &out.IncludeDisks
		*out = new(bool)
		**out = **in
	}
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibvirtBackupPolicyInitParameters.
func (in *LibvirtBackupPolicyInitParameters) DeepCopy() *LibvirtBackupPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(LibvirtBackupPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibvirtBackupPolicyObservation) DeepCopyInto(out *LibvirtBackupPolicyObservation) {
	*out = *in
	if in.BackupLocationID != nil {
		in, out := &in.BackupLocationID, &out.BackupLocationID
		*out = new(string)
		**out = **in
	}
	if in.ClusterUids != nil {
		in, out := &in.ClusterUids, &out.ClusterUids
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExpiryInHour != nil {
		in, out := &in.ExpiryInHour, &out.ExpiryInHour
		*out = new(float64)
		**out = **in
	}
	if in.IncludeAllClusters != nil {
		in, out := &in.IncludeAllClusters, &out.IncludeAllClusters
		*out = new(bool)
		**out = **in
	}
	if in.IncludeClusterResources != nil {
		in, out := &in.IncludeClusterResources, &out.IncludeClusterResources
		*out = new(bool)
		**out = **in
	}
	if in.IncludeDisks != nil {
		in, out := &in.IncludeDisks, &out.IncludeDisks
		*out = new(bool)
		**out = **in
	}
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibvirtBackupPolicyObservation.
func (in *LibvirtBackupPolicyObservation) DeepCopy() *LibvirtBackupPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(LibvirtBackupPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibvirtBackupPolicyParameters) DeepCopyInto(out *LibvirtBackupPolicyParameters) {
	*out = *in
	if in.BackupLocationID != nil {
		in, out := &in.BackupLocationID, &out.BackupLocationID
		*out = new(string)
		**out = **in
	}
	if in.ClusterUids != nil {
		in, out := &in.ClusterUids, &out.ClusterUids
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExpiryInHour != nil {
		in, out := &in.ExpiryInHour, &out.ExpiryInHour
		*out = new(float64)
		**out = **in
	}
	if in.IncludeAllClusters != nil {
		in, out := &in.IncludeAllClusters, &out.IncludeAllClusters
		*out = new(bool)
		**out = **in
	}
	if in.IncludeClusterResources != nil {
		in, out := &in.IncludeClusterResources, &out.IncludeClusterResources
		*out = new(bool)
		**out = **in
	}
	if in.IncludeDisks != nil {
		in, out := &in.IncludeDisks, &out.IncludeDisks
		*out = new(bool)
		**out = **in
	}
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibvirtBackupPolicyParameters.
func (in *LibvirtBackupPolicyParameters) DeepCopy() *LibvirtBackupPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(LibvirtBackupPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibvirtCloudConfigInitParameters) DeepCopyInto(out *LibvirtCloudConfigInitParameters) {
	*out = *in
	if in.NetworkSearchDomain != nil {
		in, out := &in.NetworkSearchDomain, &out.NetworkSearchDomain
		*out = new(string)
		**out = **in
	}
	if in.NetworkType != nil {
		in, out := &in.NetworkType, &out.NetworkType
		*out = new(string)
		**out = **in
	}
	if in.NtpServers != nil {
		in, out := &in.NtpServers, &out.NtpServers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SSHKeys != nil {
		in, out := &in.SSHKeys, &out.SSHKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Vip != nil {
		in, out := &in.Vip, &out.Vip
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibvirtCloudConfigInitParameters.
func (in *LibvirtCloudConfigInitParameters) DeepCopy() *LibvirtCloudConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(LibvirtCloudConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibvirtCloudConfigObservation) DeepCopyInto(out *LibvirtCloudConfigObservation) {
	*out = *in
	if in.NetworkSearchDomain != nil {
		in, out := &in.NetworkSearchDomain, &out.NetworkSearchDomain
		*out = new(string)
		**out = **in
	}
	if in.NetworkType != nil {
		in, out := &in.NetworkType, &out.NetworkType
		*out = new(string)
		**out = **in
	}
	if in.NtpServers != nil {
		in, out := &in.NtpServers, &out.NtpServers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SSHKeys != nil {
		in, out := &in.SSHKeys, &out.SSHKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Vip != nil {
		in, out := &in.Vip, &out.Vip
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibvirtCloudConfigObservation.
func (in *LibvirtCloudConfigObservation) DeepCopy() *LibvirtCloudConfigObservation {
	if in == nil {
		return nil
	}
	out := new(LibvirtCloudConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibvirtCloudConfigParameters) DeepCopyInto(out *LibvirtCloudConfigParameters) {
	*out = *in
	if in.NetworkSearchDomain != nil {
		in, out := &in.NetworkSearchDomain, &out.NetworkSearchDomain
		*out = new(string)
		**out = **in
	}
	if in.NetworkType != nil {
		in, out := &in.NetworkType, &out.NetworkType
		*out = new(string)
		**out = **in
	}
	if in.NtpServers != nil {
		in, out := &in.NtpServers, &out.NtpServers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SSHKeys != nil {
		in, out := &in.SSHKeys, &out.SSHKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Vip != nil {
		in, out := &in.Vip, &out.Vip
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibvirtCloudConfigParameters.
func (in *LibvirtCloudConfigParameters) DeepCopy() *LibvirtCloudConfigParameters {
	if in == nil {
		return nil
	}
	out := new(LibvirtCloudConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibvirtClusterProfileInitParameters) DeepCopyInto(out *LibvirtClusterProfileInitParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Pack != nil {
		in, out := &in.Pack, &out.Pack
		*out = make([]LibvirtClusterProfilePackInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibvirtClusterProfileInitParameters.
func (in *LibvirtClusterProfileInitParameters) DeepCopy() *LibvirtClusterProfileInitParameters {
	if in == nil {
		return nil
	}
	out := new(LibvirtClusterProfileInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibvirtClusterProfileObservation) DeepCopyInto(out *LibvirtClusterProfileObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Pack != nil {
		in, out := &in.Pack, &out.Pack
		*out = make([]LibvirtClusterProfilePackObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibvirtClusterProfileObservation.
func (in *LibvirtClusterProfileObservation) DeepCopy() *LibvirtClusterProfileObservation {
	if in == nil {
		return nil
	}
	out := new(LibvirtClusterProfileObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibvirtClusterProfilePackInitParameters) DeepCopyInto(out *LibvirtClusterProfilePackInitParameters) {
	*out = *in
	if in.Manifest != nil {
		in, out := &in.Manifest, &out.Manifest
		*out = make([]LibvirtClusterProfilePackManifestInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RegistryUID != nil {
		in, out := &in.RegistryUID, &out.RegistryUID
		*out = new(string)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibvirtClusterProfilePackInitParameters.
func (in *LibvirtClusterProfilePackInitParameters) DeepCopy() *LibvirtClusterProfilePackInitParameters {
	if in == nil {
		return nil
	}
	out := new(LibvirtClusterProfilePackInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibvirtClusterProfilePackManifestInitParameters) DeepCopyInto(out *LibvirtClusterProfilePackManifestInitParameters) {
	*out = *in
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibvirtClusterProfilePackManifestInitParameters.
func (in *LibvirtClusterProfilePackManifestInitParameters) DeepCopy() *LibvirtClusterProfilePackManifestInitParameters {
	if in == nil {
		return nil
	}
	out := new(LibvirtClusterProfilePackManifestInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibvirtClusterProfilePackManifestObservation) DeepCopyInto(out *LibvirtClusterProfilePackManifestObservation) {
	*out = *in
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibvirtClusterProfilePackManifestObservation.
func (in *LibvirtClusterProfilePackManifestObservation) DeepCopy() *LibvirtClusterProfilePackManifestObservation {
	if in == nil {
		return nil
	}
	out := new(LibvirtClusterProfilePackManifestObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibvirtClusterProfilePackManifestParameters) DeepCopyInto(out *LibvirtClusterProfilePackManifestParameters) {
	*out = *in
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibvirtClusterProfilePackManifestParameters.
func (in *LibvirtClusterProfilePackManifestParameters) DeepCopy() *LibvirtClusterProfilePackManifestParameters {
	if in == nil {
		return nil
	}
	out := new(LibvirtClusterProfilePackManifestParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibvirtClusterProfilePackObservation) DeepCopyInto(out *LibvirtClusterProfilePackObservation) {
	*out = *in
	if in.Manifest != nil {
		in, out := &in.Manifest, &out.Manifest
		*out = make([]LibvirtClusterProfilePackManifestObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RegistryUID != nil {
		in, out := &in.RegistryUID, &out.RegistryUID
		*out = new(string)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibvirtClusterProfilePackObservation.
func (in *LibvirtClusterProfilePackObservation) DeepCopy() *LibvirtClusterProfilePackObservation {
	if in == nil {
		return nil
	}
	out := new(LibvirtClusterProfilePackObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibvirtClusterProfilePackParameters) DeepCopyInto(out *LibvirtClusterProfilePackParameters) {
	*out = *in
	if in.Manifest != nil {
		in, out := &in.Manifest, &out.Manifest
		*out = make([]LibvirtClusterProfilePackManifestParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RegistryUID != nil {
		in, out := &in.RegistryUID, &out.RegistryUID
		*out = new(string)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibvirtClusterProfilePackParameters.
func (in *LibvirtClusterProfilePackParameters) DeepCopy() *LibvirtClusterProfilePackParameters {
	if in == nil {
		return nil
	}
	out := new(LibvirtClusterProfilePackParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibvirtClusterProfileParameters) DeepCopyInto(out *LibvirtClusterProfileParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Pack != nil {
		in, out := &in.Pack, &out.Pack
		*out = make([]LibvirtClusterProfilePackParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibvirtClusterProfileParameters.
func (in *LibvirtClusterProfileParameters) DeepCopy() *LibvirtClusterProfileParameters {
	if in == nil {
		return nil
	}
	out := new(LibvirtClusterProfileParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibvirtClusterRbacBindingInitParameters) DeepCopyInto(out *LibvirtClusterRbacBindingInitParameters) {
	*out = *in
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Subjects != nil {
		in, out := &in.Subjects, &out.Subjects
		*out = make([]LibvirtClusterRbacBindingSubjectsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibvirtClusterRbacBindingInitParameters.
func (in *LibvirtClusterRbacBindingInitParameters) DeepCopy() *LibvirtClusterRbacBindingInitParameters {
	if in == nil {
		return nil
	}
	out := new(LibvirtClusterRbacBindingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibvirtClusterRbacBindingObservation) DeepCopyInto(out *LibvirtClusterRbacBindingObservation) {
	*out = *in
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Subjects != nil {
		in, out := &in.Subjects, &out.Subjects
		*out = make([]LibvirtClusterRbacBindingSubjectsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibvirtClusterRbacBindingObservation.
func (in *LibvirtClusterRbacBindingObservation) DeepCopy() *LibvirtClusterRbacBindingObservation {
	if in == nil {
		return nil
	}
	out := new(LibvirtClusterRbacBindingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibvirtClusterRbacBindingParameters) DeepCopyInto(out *LibvirtClusterRbacBindingParameters) {
	*out = *in
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Subjects != nil {
		in, out := &in.Subjects, &out.Subjects
		*out = make([]LibvirtClusterRbacBindingSubjectsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibvirtClusterRbacBindingParameters.
func (in *LibvirtClusterRbacBindingParameters) DeepCopy() *LibvirtClusterRbacBindingParameters {
	if in == nil {
		return nil
	}
	out := new(LibvirtClusterRbacBindingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibvirtClusterRbacBindingSubjectsInitParameters) DeepCopyInto(out *LibvirtClusterRbacBindingSubjectsInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibvirtClusterRbacBindingSubjectsInitParameters.
func (in *LibvirtClusterRbacBindingSubjectsInitParameters) DeepCopy() *LibvirtClusterRbacBindingSubjectsInitParameters {
	if in == nil {
		return nil
	}
	out := new(LibvirtClusterRbacBindingSubjectsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibvirtClusterRbacBindingSubjectsObservation) DeepCopyInto(out *LibvirtClusterRbacBindingSubjectsObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibvirtClusterRbacBindingSubjectsObservation.
func (in *LibvirtClusterRbacBindingSubjectsObservation) DeepCopy() *LibvirtClusterRbacBindingSubjectsObservation {
	if in == nil {
		return nil
	}
	out := new(LibvirtClusterRbacBindingSubjectsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibvirtClusterRbacBindingSubjectsParameters) DeepCopyInto(out *LibvirtClusterRbacBindingSubjectsParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibvirtClusterRbacBindingSubjectsParameters.
func (in *LibvirtClusterRbacBindingSubjectsParameters) DeepCopy() *LibvirtClusterRbacBindingSubjectsParameters {
	if in == nil {
		return nil
	}
	out := new(LibvirtClusterRbacBindingSubjectsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibvirtHostConfigInitParameters) DeepCopyInto(out *LibvirtHostConfigInitParameters) {
	*out = *in
	if in.ExternalTrafficPolicy != nil {
		in, out := &in.ExternalTrafficPolicy, &out.ExternalTrafficPolicy
		*out = new(string)
		**out = **in
	}
	if in.HostEndpointType != nil {
		in, out := &in.HostEndpointType, &out.HostEndpointType
		*out = new(string)
		**out = **in
	}
	if in.IngressHost != nil {
		in, out := &in.IngressHost, &out.IngressHost
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancerSourceRanges != nil {
		in, out := &in.LoadBalancerSourceRanges, &out.LoadBalancerSourceRanges
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibvirtHostConfigInitParameters.
func (in *LibvirtHostConfigInitParameters) DeepCopy() *LibvirtHostConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(LibvirtHostConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibvirtHostConfigObservation) DeepCopyInto(out *LibvirtHostConfigObservation) {
	*out = *in
	if in.ExternalTrafficPolicy != nil {
		in, out := &in.ExternalTrafficPolicy, &out.ExternalTrafficPolicy
		*out = new(string)
		**out = **in
	}
	if in.HostEndpointType != nil {
		in, out := &in.HostEndpointType, &out.HostEndpointType
		*out = new(string)
		**out = **in
	}
	if in.IngressHost != nil {
		in, out := &in.IngressHost, &out.IngressHost
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancerSourceRanges != nil {
		in, out := &in.LoadBalancerSourceRanges, &out.LoadBalancerSourceRanges
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibvirtHostConfigObservation.
func (in *LibvirtHostConfigObservation) DeepCopy() *LibvirtHostConfigObservation {
	if in == nil {
		return nil
	}
	out := new(LibvirtHostConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibvirtHostConfigParameters) DeepCopyInto(out *LibvirtHostConfigParameters) {
	*out = *in
	if in.ExternalTrafficPolicy != nil {
		in, out := &in.ExternalTrafficPolicy, &out.ExternalTrafficPolicy
		*out = new(string)
		**out = **in
	}
	if in.HostEndpointType != nil {
		in, out := &in.HostEndpointType, &out.HostEndpointType
		*out = new(string)
		**out = **in
	}
	if in.IngressHost != nil {
		in, out := &in.IngressHost, &out.IngressHost
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancerSourceRanges != nil {
		in, out := &in.LoadBalancerSourceRanges, &out.LoadBalancerSourceRanges
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibvirtHostConfigParameters.
func (in *LibvirtHostConfigParameters) DeepCopy() *LibvirtHostConfigParameters {
	if in == nil {
		return nil
	}
	out := new(LibvirtHostConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibvirtInitParameters) DeepCopyInto(out *LibvirtInitParameters) {
	*out = *in
	if in.ApplySetting != nil {
		in, out := &in.ApplySetting, &out.ApplySetting
		*out = new(string)
		**out = **in
	}
	if in.BackupPolicy != nil {
		in, out := &in.BackupPolicy, &out.BackupPolicy
		*out = make([]LibvirtBackupPolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CloudAccountID != nil {
		in, out := &in.CloudAccountID, &out.CloudAccountID
		*out = new(string)
		**out = **in
	}
	if in.CloudConfig != nil {
		in, out := &in.CloudConfig, &out.CloudConfig
		*out = make([]LibvirtCloudConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterMetaAttribute != nil {
		in, out := &in.ClusterMetaAttribute, &out.ClusterMetaAttribute
		*out = new(string)
		**out = **in
	}
	if in.ClusterProfile != nil {
		in, out := &in.ClusterProfile, &out.ClusterProfile
		*out = make([]LibvirtClusterProfileInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterRbacBinding != nil {
		in, out := &in.ClusterRbacBinding, &out.ClusterRbacBinding
		*out = make([]LibvirtClusterRbacBindingInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Context != nil {
		in, out := &in.Context, &out.Context
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ForceDelete != nil {
		in, out := &in.ForceDelete, &out.ForceDelete
		*out = new(bool)
		**out = **in
	}
	if in.ForceDeleteDelay != nil {
		in, out := &in.ForceDeleteDelay, &out.ForceDeleteDelay
		*out = new(float64)
		**out = **in
	}
	if in.HostConfig != nil {
		in, out := &in.HostConfig, &out.HostConfig
		*out = make([]LibvirtHostConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LocationConfig != nil {
		in, out := &in.LocationConfig, &out.LocationConfig
		*out = make([]LibvirtLocationConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MachinePool != nil {
		in, out := &in.MachinePool, &out.MachinePool
		*out = make([]LibvirtMachinePoolInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]LibvirtNamespacesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OsPatchAfter != nil {
		in, out := &in.OsPatchAfter, &out.OsPatchAfter
		*out = new(string)
		**out = **in
	}
	if in.OsPatchOnBoot != nil {
		in, out := &in.OsPatchOnBoot, &out.OsPatchOnBoot
		*out = new(bool)
		**out = **in
	}
	if in.OsPatchSchedule != nil {
		in, out := &in.OsPatchSchedule, &out.OsPatchSchedule
		*out = new(string)
		**out = **in
	}
	if in.PauseAgentUpgrades != nil {
		in, out := &in.PauseAgentUpgrades, &out.PauseAgentUpgrades
		*out = new(string)
		**out = **in
	}
	if in.ReviewRepaveState != nil {
		in, out := &in.ReviewRepaveState, &out.ReviewRepaveState
		*out = new(string)
		**out = **in
	}
	if in.ScanPolicy != nil {
		in, out := &in.ScanPolicy, &out.ScanPolicy
		*out = make([]LibvirtScanPolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SkipCompletion != nil {
		in, out := &in.SkipCompletion, &out.SkipCompletion
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibvirtInitParameters.
func (in *LibvirtInitParameters) DeepCopy() *LibvirtInitParameters {
	if in == nil {
		return nil
	}
	out := new(LibvirtInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibvirtList) DeepCopyInto(out *LibvirtList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Libvirt, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibvirtList.
func (in *LibvirtList) DeepCopy() *LibvirtList {
	if in == nil {
		return nil
	}
	out := new(LibvirtList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LibvirtList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibvirtLocationConfigInitParameters) DeepCopyInto(out *LibvirtLocationConfigInitParameters) {
	*out = *in
	if in.CountryCode != nil {
		in, out := &in.CountryCode, &out.CountryCode
		*out = new(string)
		**out = **in
	}
	if in.CountryName != nil {
		in, out := &in.CountryName, &out.CountryName
		*out = new(string)
		**out = **in
	}
	if in.Latitude != nil {
		in, out := &in.Latitude, &out.Latitude
		*out = new(float64)
		**out = **in
	}
	if in.Longitude != nil {
		in, out := &in.Longitude, &out.Longitude
		*out = new(float64)
		**out = **in
	}
	if in.RegionCode != nil {
		in, out := &in.RegionCode, &out.RegionCode
		*out = new(string)
		**out = **in
	}
	if in.RegionName != nil {
		in, out := &in.RegionName, &out.RegionName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibvirtLocationConfigInitParameters.
func (in *LibvirtLocationConfigInitParameters) DeepCopy() *LibvirtLocationConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(LibvirtLocationConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibvirtLocationConfigObservation) DeepCopyInto(out *LibvirtLocationConfigObservation) {
	*out = *in
	if in.CountryCode != nil {
		in, out := &in.CountryCode, &out.CountryCode
		*out = new(string)
		**out = **in
	}
	if in.CountryName != nil {
		in, out := &in.CountryName, &out.CountryName
		*out = new(string)
		**out = **in
	}
	if in.Latitude != nil {
		in, out := &in.Latitude, &out.Latitude
		*out = new(float64)
		**out = **in
	}
	if in.Longitude != nil {
		in, out := &in.Longitude, &out.Longitude
		*out = new(float64)
		**out = **in
	}
	if in.RegionCode != nil {
		in, out := &in.RegionCode, &out.RegionCode
		*out = new(string)
		**out = **in
	}
	if in.RegionName != nil {
		in, out := &in.RegionName, &out.RegionName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibvirtLocationConfigObservation.
func (in *LibvirtLocationConfigObservation) DeepCopy() *LibvirtLocationConfigObservation {
	if in == nil {
		return nil
	}
	out := new(LibvirtLocationConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibvirtLocationConfigParameters) DeepCopyInto(out *LibvirtLocationConfigParameters) {
	*out = *in
	if in.CountryCode != nil {
		in, out := &in.CountryCode, &out.CountryCode
		*out = new(string)
		**out = **in
	}
	if in.CountryName != nil {
		in, out := &in.CountryName, &out.CountryName
		*out = new(string)
		**out = **in
	}
	if in.Latitude != nil {
		in, out := &in.Latitude, &out.Latitude
		*out = new(float64)
		**out = **in
	}
	if in.Longitude != nil {
		in, out := &in.Longitude, &out.Longitude
		*out = new(float64)
		**out = **in
	}
	if in.RegionCode != nil {
		in, out := &in.RegionCode, &out.RegionCode
		*out = new(string)
		**out = **in
	}
	if in.RegionName != nil {
		in, out := &in.RegionName, &out.RegionName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibvirtLocationConfigParameters.
func (in *LibvirtLocationConfigParameters) DeepCopy() *LibvirtLocationConfigParameters {
	if in == nil {
		return nil
	}
	out := new(LibvirtLocationConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibvirtMachinePoolInitParameters) DeepCopyInto(out *LibvirtMachinePoolInitParameters) {
	*out = *in
	if in.AdditionalLabels != nil {
		in, out := &in.AdditionalLabels, &out.AdditionalLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ControlPlane != nil {
		in, out := &in.ControlPlane, &out.ControlPlane
		*out = new(bool)
		**out = **in
	}
	if in.ControlPlaneAsWorker != nil {
		in, out := &in.ControlPlaneAsWorker, &out.ControlPlaneAsWorker
		*out = new(bool)
		**out = **in
	}
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = make([]MachinePoolInstanceTypeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Node != nil {
		in, out := &in.Node, &out.Node
		*out = make([]LibvirtMachinePoolNodeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NodeRepaveInterval != nil {
		in, out := &in.NodeRepaveInterval, &out.NodeRepaveInterval
		*out = new(float64)
		**out = **in
	}
	if in.Placements != nil {
		in, out := &in.Placements, &out.Placements
		*out = make([]PlacementsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Taints != nil {
		in, out := &in.Taints, &out.Taints
		*out = make([]LibvirtMachinePoolTaintsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UpdateStrategy != nil {
		in, out := &in.UpdateStrategy, &out.UpdateStrategy
		*out = new(string)
		**out = **in
	}
	if in.XslTemplate != nil {
		in, out := &in.XslTemplate, &out.XslTemplate
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibvirtMachinePoolInitParameters.
func (in *LibvirtMachinePoolInitParameters) DeepCopy() *LibvirtMachinePoolInitParameters {
	if in == nil {
		return nil
	}
	out := new(LibvirtMachinePoolInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibvirtMachinePoolNodeInitParameters) DeepCopyInto(out *LibvirtMachinePoolNodeInitParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.NodeID != nil {
		in, out := &in.NodeID, &out.NodeID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibvirtMachinePoolNodeInitParameters.
func (in *LibvirtMachinePoolNodeInitParameters) DeepCopy() *LibvirtMachinePoolNodeInitParameters {
	if in == nil {
		return nil
	}
	out := new(LibvirtMachinePoolNodeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibvirtMachinePoolNodeObservation) DeepCopyInto(out *LibvirtMachinePoolNodeObservation) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.NodeID != nil {
		in, out := &in.NodeID, &out.NodeID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibvirtMachinePoolNodeObservation.
func (in *LibvirtMachinePoolNodeObservation) DeepCopy() *LibvirtMachinePoolNodeObservation {
	if in == nil {
		return nil
	}
	out := new(LibvirtMachinePoolNodeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibvirtMachinePoolNodeParameters) DeepCopyInto(out *LibvirtMachinePoolNodeParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.NodeID != nil {
		in, out := &in.NodeID, &out.NodeID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibvirtMachinePoolNodeParameters.
func (in *LibvirtMachinePoolNodeParameters) DeepCopy() *LibvirtMachinePoolNodeParameters {
	if in == nil {
		return nil
	}
	out := new(LibvirtMachinePoolNodeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibvirtMachinePoolObservation) DeepCopyInto(out *LibvirtMachinePoolObservation) {
	*out = *in
	if in.AdditionalLabels != nil {
		in, out := &in.AdditionalLabels, &out.AdditionalLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ControlPlane != nil {
		in, out := &in.ControlPlane, &out.ControlPlane
		*out = new(bool)
		**out = **in
	}
	if in.ControlPlaneAsWorker != nil {
		in, out := &in.ControlPlaneAsWorker, &out.ControlPlaneAsWorker
		*out = new(bool)
		**out = **in
	}
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = make([]MachinePoolInstanceTypeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Node != nil {
		in, out := &in.Node, &out.Node
		*out = make([]LibvirtMachinePoolNodeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NodeRepaveInterval != nil {
		in, out := &in.NodeRepaveInterval, &out.NodeRepaveInterval
		*out = new(float64)
		**out = **in
	}
	if in.Placements != nil {
		in, out := &in.Placements, &out.Placements
		*out = make([]PlacementsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Taints != nil {
		in, out := &in.Taints, &out.Taints
		*out = make([]LibvirtMachinePoolTaintsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UpdateStrategy != nil {
		in, out := &in.UpdateStrategy, &out.UpdateStrategy
		*out = new(string)
		**out = **in
	}
	if in.XslTemplate != nil {
		in, out := &in.XslTemplate, &out.XslTemplate
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibvirtMachinePoolObservation.
func (in *LibvirtMachinePoolObservation) DeepCopy() *LibvirtMachinePoolObservation {
	if in == nil {
		return nil
	}
	out := new(LibvirtMachinePoolObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibvirtMachinePoolParameters) DeepCopyInto(out *LibvirtMachinePoolParameters) {
	*out = *in
	if in.AdditionalLabels != nil {
		in, out := &in.AdditionalLabels, &out.AdditionalLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ControlPlane != nil {
		in, out := &in.ControlPlane, &out.ControlPlane
		*out = new(bool)
		**out = **in
	}
	if in.ControlPlaneAsWorker != nil {
		in, out := &in.ControlPlaneAsWorker, &out.ControlPlaneAsWorker
		*out = new(bool)
		**out = **in
	}
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = make([]MachinePoolInstanceTypeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Node != nil {
		in, out := &in.Node, &out.Node
		*out = make([]LibvirtMachinePoolNodeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NodeRepaveInterval != nil {
		in, out := &in.NodeRepaveInterval, &out.NodeRepaveInterval
		*out = new(float64)
		**out = **in
	}
	if in.Placements != nil {
		in, out := &in.Placements, &out.Placements
		*out = make([]PlacementsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Taints != nil {
		in, out := &in.Taints, &out.Taints
		*out = make([]LibvirtMachinePoolTaintsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UpdateStrategy != nil {
		in, out := &in.UpdateStrategy, &out.UpdateStrategy
		*out = new(string)
		**out = **in
	}
	if in.XslTemplate != nil {
		in, out := &in.XslTemplate, &out.XslTemplate
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibvirtMachinePoolParameters.
func (in *LibvirtMachinePoolParameters) DeepCopy() *LibvirtMachinePoolParameters {
	if in == nil {
		return nil
	}
	out := new(LibvirtMachinePoolParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibvirtMachinePoolTaintsInitParameters) DeepCopyInto(out *LibvirtMachinePoolTaintsInitParameters) {
	*out = *in
	if in.Effect != nil {
		in, out := &in.Effect, &out.Effect
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibvirtMachinePoolTaintsInitParameters.
func (in *LibvirtMachinePoolTaintsInitParameters) DeepCopy() *LibvirtMachinePoolTaintsInitParameters {
	if in == nil {
		return nil
	}
	out := new(LibvirtMachinePoolTaintsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibvirtMachinePoolTaintsObservation) DeepCopyInto(out *LibvirtMachinePoolTaintsObservation) {
	*out = *in
	if in.Effect != nil {
		in, out := &in.Effect, &out.Effect
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibvirtMachinePoolTaintsObservation.
func (in *LibvirtMachinePoolTaintsObservation) DeepCopy() *LibvirtMachinePoolTaintsObservation {
	if in == nil {
		return nil
	}
	out := new(LibvirtMachinePoolTaintsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibvirtMachinePoolTaintsParameters) DeepCopyInto(out *LibvirtMachinePoolTaintsParameters) {
	*out = *in
	if in.Effect != nil {
		in, out := &in.Effect, &out.Effect
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibvirtMachinePoolTaintsParameters.
func (in *LibvirtMachinePoolTaintsParameters) DeepCopy() *LibvirtMachinePoolTaintsParameters {
	if in == nil {
		return nil
	}
	out := new(LibvirtMachinePoolTaintsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibvirtNamespacesInitParameters) DeepCopyInto(out *LibvirtNamespacesInitParameters) {
	*out = *in
	if in.ImagesBlacklist != nil {
		in, out := &in.ImagesBlacklist, &out.ImagesBlacklist
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ResourceAllocation != nil {
		in, out := &in.ResourceAllocation, &out.ResourceAllocation
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibvirtNamespacesInitParameters.
func (in *LibvirtNamespacesInitParameters) DeepCopy() *LibvirtNamespacesInitParameters {
	if in == nil {
		return nil
	}
	out := new(LibvirtNamespacesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibvirtNamespacesObservation) DeepCopyInto(out *LibvirtNamespacesObservation) {
	*out = *in
	if in.ImagesBlacklist != nil {
		in, out := &in.ImagesBlacklist, &out.ImagesBlacklist
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ResourceAllocation != nil {
		in, out := &in.ResourceAllocation, &out.ResourceAllocation
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibvirtNamespacesObservation.
func (in *LibvirtNamespacesObservation) DeepCopy() *LibvirtNamespacesObservation {
	if in == nil {
		return nil
	}
	out := new(LibvirtNamespacesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibvirtNamespacesParameters) DeepCopyInto(out *LibvirtNamespacesParameters) {
	*out = *in
	if in.ImagesBlacklist != nil {
		in, out := &in.ImagesBlacklist, &out.ImagesBlacklist
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ResourceAllocation != nil {
		in, out := &in.ResourceAllocation, &out.ResourceAllocation
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibvirtNamespacesParameters.
func (in *LibvirtNamespacesParameters) DeepCopy() *LibvirtNamespacesParameters {
	if in == nil {
		return nil
	}
	out := new(LibvirtNamespacesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibvirtObservation) DeepCopyInto(out *LibvirtObservation) {
	*out = *in
	if in.AdminKubeConfig != nil {
		in, out := &in.AdminKubeConfig, &out.AdminKubeConfig
		*out = new(string)
		**out = **in
	}
	if in.ApplySetting != nil {
		in, out := &in.ApplySetting, &out.ApplySetting
		*out = new(string)
		**out = **in
	}
	if in.BackupPolicy != nil {
		in, out := &in.BackupPolicy, &out.BackupPolicy
		*out = make([]LibvirtBackupPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CloudAccountID != nil {
		in, out := &in.CloudAccountID, &out.CloudAccountID
		*out = new(string)
		**out = **in
	}
	if in.CloudConfig != nil {
		in, out := &in.CloudConfig, &out.CloudConfig
		*out = make([]LibvirtCloudConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CloudConfigID != nil {
		in, out := &in.CloudConfigID, &out.CloudConfigID
		*out = new(string)
		**out = **in
	}
	if in.ClusterMetaAttribute != nil {
		in, out := &in.ClusterMetaAttribute, &out.ClusterMetaAttribute
		*out = new(string)
		**out = **in
	}
	if in.ClusterProfile != nil {
		in, out := &in.ClusterProfile, &out.ClusterProfile
		*out = make([]LibvirtClusterProfileObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterRbacBinding != nil {
		in, out := &in.ClusterRbacBinding, &out.ClusterRbacBinding
		*out = make([]LibvirtClusterRbacBindingObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Context != nil {
		in, out := &in.Context, &out.Context
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ForceDelete != nil {
		in, out := &in.ForceDelete, &out.ForceDelete
		*out = new(bool)
		**out = **in
	}
	if in.ForceDeleteDelay != nil {
		in, out := &in.ForceDeleteDelay, &out.ForceDeleteDelay
		*out = new(float64)
		**out = **in
	}
	if in.HostConfig != nil {
		in, out := &in.HostConfig, &out.HostConfig
		*out = make([]LibvirtHostConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Kubeconfig != nil {
		in, out := &in.Kubeconfig, &out.Kubeconfig
		*out = new(string)
		**out = **in
	}
	if in.LocationConfig != nil {
		in, out := &in.LocationConfig, &out.LocationConfig
		*out = make([]LibvirtLocationConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MachinePool != nil {
		in, out := &in.MachinePool, &out.MachinePool
		*out = make([]LibvirtMachinePoolObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]LibvirtNamespacesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OsPatchAfter != nil {
		in, out := &in.OsPatchAfter, &out.OsPatchAfter
		*out = new(string)
		**out = **in
	}
	if in.OsPatchOnBoot != nil {
		in, out := &in.OsPatchOnBoot, &out.OsPatchOnBoot
		*out = new(bool)
		**out = **in
	}
	if in.OsPatchSchedule != nil {
		in, out := &in.OsPatchSchedule, &out.OsPatchSchedule
		*out = new(string)
		**out = **in
	}
	if in.PauseAgentUpgrades != nil {
		in, out := &in.PauseAgentUpgrades, &out.PauseAgentUpgrades
		*out = new(string)
		**out = **in
	}
	if in.ReviewRepaveState != nil {
		in, out := &in.ReviewRepaveState, &out.ReviewRepaveState
		*out = new(string)
		**out = **in
	}
	if in.ScanPolicy != nil {
		in, out := &in.ScanPolicy, &out.ScanPolicy
		*out = make([]LibvirtScanPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SkipCompletion != nil {
		in, out := &in.SkipCompletion, &out.SkipCompletion
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibvirtObservation.
func (in *LibvirtObservation) DeepCopy() *LibvirtObservation {
	if in == nil {
		return nil
	}
	out := new(LibvirtObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibvirtParameters) DeepCopyInto(out *LibvirtParameters) {
	*out = *in
	if in.ApplySetting != nil {
		in, out := &in.ApplySetting, &out.ApplySetting
		*out = new(string)
		**out = **in
	}
	if in.BackupPolicy != nil {
		in, out := &in.BackupPolicy, &out.BackupPolicy
		*out = make([]LibvirtBackupPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CloudAccountID != nil {
		in, out := &in.CloudAccountID, &out.CloudAccountID
		*out = new(string)
		**out = **in
	}
	if in.CloudConfig != nil {
		in, out := &in.CloudConfig, &out.CloudConfig
		*out = make([]LibvirtCloudConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterMetaAttribute != nil {
		in, out := &in.ClusterMetaAttribute, &out.ClusterMetaAttribute
		*out = new(string)
		**out = **in
	}
	if in.ClusterProfile != nil {
		in, out := &in.ClusterProfile, &out.ClusterProfile
		*out = make([]LibvirtClusterProfileParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterRbacBinding != nil {
		in, out := &in.ClusterRbacBinding, &out.ClusterRbacBinding
		*out = make([]LibvirtClusterRbacBindingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Context != nil {
		in, out := &in.Context, &out.Context
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ForceDelete != nil {
		in, out := &in.ForceDelete, &out.ForceDelete
		*out = new(bool)
		**out = **in
	}
	if in.ForceDeleteDelay != nil {
		in, out := &in.ForceDeleteDelay, &out.ForceDeleteDelay
		*out = new(float64)
		**out = **in
	}
	if in.HostConfig != nil {
		in, out := &in.HostConfig, &out.HostConfig
		*out = make([]LibvirtHostConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LocationConfig != nil {
		in, out := &in.LocationConfig, &out.LocationConfig
		*out = make([]LibvirtLocationConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MachinePool != nil {
		in, out := &in.MachinePool, &out.MachinePool
		*out = make([]LibvirtMachinePoolParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]LibvirtNamespacesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OsPatchAfter != nil {
		in, out := &in.OsPatchAfter, &out.OsPatchAfter
		*out = new(string)
		**out = **in
	}
	if in.OsPatchOnBoot != nil {
		in, out := &in.OsPatchOnBoot, &out.OsPatchOnBoot
		*out = new(bool)
		**out = **in
	}
	if in.OsPatchSchedule != nil {
		in, out := &in.OsPatchSchedule, &out.OsPatchSchedule
		*out = new(string)
		**out = **in
	}
	if in.PauseAgentUpgrades != nil {
		in, out := &in.PauseAgentUpgrades, &out.PauseAgentUpgrades
		*out = new(string)
		**out = **in
	}
	if in.ReviewRepaveState != nil {
		in, out := &in.ReviewRepaveState, &out.ReviewRepaveState
		*out = new(string)
		**out = **in
	}
	if in.ScanPolicy != nil {
		in, out := &in.ScanPolicy, &out.ScanPolicy
		*out = make([]LibvirtScanPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SkipCompletion != nil {
		in, out := &in.SkipCompletion, &out.SkipCompletion
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibvirtParameters.
func (in *LibvirtParameters) DeepCopy() *LibvirtParameters {
	if in == nil {
		return nil
	}
	out := new(LibvirtParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibvirtScanPolicyInitParameters) DeepCopyInto(out *LibvirtScanPolicyInitParameters) {
	*out = *in
	if in.ConfigurationScanSchedule != nil {
		in, out := &in.ConfigurationScanSchedule, &out.ConfigurationScanSchedule
		*out = new(string)
		**out = **in
	}
	if in.ConformanceScanSchedule != nil {
		in, out := &in.ConformanceScanSchedule, &out.ConformanceScanSchedule
		*out = new(string)
		**out = **in
	}
	if in.PenetrationScanSchedule != nil {
		in, out := &in.PenetrationScanSchedule, &out.PenetrationScanSchedule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibvirtScanPolicyInitParameters.
func (in *LibvirtScanPolicyInitParameters) DeepCopy() *LibvirtScanPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(LibvirtScanPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibvirtScanPolicyObservation) DeepCopyInto(out *LibvirtScanPolicyObservation) {
	*out = *in
	if in.ConfigurationScanSchedule != nil {
		in, out := &in.ConfigurationScanSchedule, &out.ConfigurationScanSchedule
		*out = new(string)
		**out = **in
	}
	if in.ConformanceScanSchedule != nil {
		in, out := &in.ConformanceScanSchedule, &out.ConformanceScanSchedule
		*out = new(string)
		**out = **in
	}
	if in.PenetrationScanSchedule != nil {
		in, out := &in.PenetrationScanSchedule, &out.PenetrationScanSchedule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibvirtScanPolicyObservation.
func (in *LibvirtScanPolicyObservation) DeepCopy() *LibvirtScanPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(LibvirtScanPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibvirtScanPolicyParameters) DeepCopyInto(out *LibvirtScanPolicyParameters) {
	*out = *in
	if in.ConfigurationScanSchedule != nil {
		in, out := &in.ConfigurationScanSchedule, &out.ConfigurationScanSchedule
		*out = new(string)
		**out = **in
	}
	if in.ConformanceScanSchedule != nil {
		in, out := &in.ConformanceScanSchedule, &out.ConformanceScanSchedule
		*out = new(string)
		**out = **in
	}
	if in.PenetrationScanSchedule != nil {
		in, out := &in.PenetrationScanSchedule, &out.PenetrationScanSchedule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibvirtScanPolicyParameters.
func (in *LibvirtScanPolicyParameters) DeepCopy() *LibvirtScanPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(LibvirtScanPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibvirtSpec) DeepCopyInto(out *LibvirtSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibvirtSpec.
func (in *LibvirtSpec) DeepCopy() *LibvirtSpec {
	if in == nil {
		return nil
	}
	out := new(LibvirtSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LibvirtStatus) DeepCopyInto(out *LibvirtStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LibvirtStatus.
func (in *LibvirtStatus) DeepCopy() *LibvirtStatus {
	if in == nil {
		return nil
	}
	out := new(LibvirtStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LocationConfigInitParameters) DeepCopyInto(out *LocationConfigInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LocationConfigInitParameters.
func (in *LocationConfigInitParameters) DeepCopy() *LocationConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(LocationConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LocationConfigObservation) DeepCopyInto(out *LocationConfigObservation) {
	*out = *in
	if in.CountryCode != nil {
		in, out := &in.CountryCode, &out.CountryCode
		*out = new(string)
		**out = **in
	}
	if in.CountryName != nil {
		in, out := &in.CountryName, &out.CountryName
		*out = new(string)
		**out = **in
	}
	if in.Latitude != nil {
		in, out := &in.Latitude, &out.Latitude
		*out = new(float64)
		**out = **in
	}
	if in.Longitude != nil {
		in, out := &in.Longitude, &out.Longitude
		*out = new(float64)
		**out = **in
	}
	if in.RegionCode != nil {
		in, out := &in.RegionCode, &out.RegionCode
		*out = new(string)
		**out = **in
	}
	if in.RegionName != nil {
		in, out := &in.RegionName, &out.RegionName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LocationConfigObservation.
func (in *LocationConfigObservation) DeepCopy() *LocationConfigObservation {
	if in == nil {
		return nil
	}
	out := new(LocationConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LocationConfigParameters) DeepCopyInto(out *LocationConfigParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LocationConfigParameters.
func (in *LocationConfigParameters) DeepCopy() *LocationConfigParameters {
	if in == nil {
		return nil
	}
	out := new(LocationConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Maas) DeepCopyInto(out *Maas) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Maas.
func (in *Maas) DeepCopy() *Maas {
	if in == nil {
		return nil
	}
	out := new(Maas)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Maas) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaasBackupPolicyInitParameters) DeepCopyInto(out *MaasBackupPolicyInitParameters) {
	*out = *in
	if in.BackupLocationID != nil {
		in, out := &in.BackupLocationID, &out.BackupLocationID
		*out = new(string)
		**out = **in
	}
	if in.ClusterUids != nil {
		in, out := &in.ClusterUids, &out.ClusterUids
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExpiryInHour != nil {
		in, out := &in.ExpiryInHour, &out.ExpiryInHour
		*out = new(float64)
		**out = **in
	}
	if in.IncludeAllClusters != nil {
		in, out := &in.IncludeAllClusters, &out.IncludeAllClusters
		*out = new(bool)
		**out = **in
	}
	if in.IncludeClusterResources != nil {
		in, out := &in.IncludeClusterResources, &out.IncludeClusterResources
		*out = new(bool)
		**out = **in
	}
	if in.IncludeDisks != nil {
		in, out := &in.IncludeDisks, &out.IncludeDisks
		*out = new(bool)
		**out = **in
	}
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaasBackupPolicyInitParameters.
func (in *MaasBackupPolicyInitParameters) DeepCopy() *MaasBackupPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(MaasBackupPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaasBackupPolicyObservation) DeepCopyInto(out *MaasBackupPolicyObservation) {
	*out = *in
	if in.BackupLocationID != nil {
		in, out := &in.BackupLocationID, &out.BackupLocationID
		*out = new(string)
		**out = **in
	}
	if in.ClusterUids != nil {
		in, out := &in.ClusterUids, &out.ClusterUids
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExpiryInHour != nil {
		in, out := &in.ExpiryInHour, &out.ExpiryInHour
		*out = new(float64)
		**out = **in
	}
	if in.IncludeAllClusters != nil {
		in, out := &in.IncludeAllClusters, &out.IncludeAllClusters
		*out = new(bool)
		**out = **in
	}
	if in.IncludeClusterResources != nil {
		in, out := &in.IncludeClusterResources, &out.IncludeClusterResources
		*out = new(bool)
		**out = **in
	}
	if in.IncludeDisks != nil {
		in, out := &in.IncludeDisks, &out.IncludeDisks
		*out = new(bool)
		**out = **in
	}
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaasBackupPolicyObservation.
func (in *MaasBackupPolicyObservation) DeepCopy() *MaasBackupPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(MaasBackupPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaasBackupPolicyParameters) DeepCopyInto(out *MaasBackupPolicyParameters) {
	*out = *in
	if in.BackupLocationID != nil {
		in, out := &in.BackupLocationID, &out.BackupLocationID
		*out = new(string)
		**out = **in
	}
	if in.ClusterUids != nil {
		in, out := &in.ClusterUids, &out.ClusterUids
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExpiryInHour != nil {
		in, out := &in.ExpiryInHour, &out.ExpiryInHour
		*out = new(float64)
		**out = **in
	}
	if in.IncludeAllClusters != nil {
		in, out := &in.IncludeAllClusters, &out.IncludeAllClusters
		*out = new(bool)
		**out = **in
	}
	if in.IncludeClusterResources != nil {
		in, out := &in.IncludeClusterResources, &out.IncludeClusterResources
		*out = new(bool)
		**out = **in
	}
	if in.IncludeDisks != nil {
		in, out := &in.IncludeDisks, &out.IncludeDisks
		*out = new(bool)
		**out = **in
	}
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaasBackupPolicyParameters.
func (in *MaasBackupPolicyParameters) DeepCopy() *MaasBackupPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(MaasBackupPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaasCloudConfigInitParameters) DeepCopyInto(out *MaasCloudConfigInitParameters) {
	*out = *in
	if in.Domain != nil {
		in, out := &in.Domain, &out.Domain
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaasCloudConfigInitParameters.
func (in *MaasCloudConfigInitParameters) DeepCopy() *MaasCloudConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(MaasCloudConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaasCloudConfigObservation) DeepCopyInto(out *MaasCloudConfigObservation) {
	*out = *in
	if in.Domain != nil {
		in, out := &in.Domain, &out.Domain
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaasCloudConfigObservation.
func (in *MaasCloudConfigObservation) DeepCopy() *MaasCloudConfigObservation {
	if in == nil {
		return nil
	}
	out := new(MaasCloudConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaasCloudConfigParameters) DeepCopyInto(out *MaasCloudConfigParameters) {
	*out = *in
	if in.Domain != nil {
		in, out := &in.Domain, &out.Domain
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaasCloudConfigParameters.
func (in *MaasCloudConfigParameters) DeepCopy() *MaasCloudConfigParameters {
	if in == nil {
		return nil
	}
	out := new(MaasCloudConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaasClusterProfileInitParameters) DeepCopyInto(out *MaasClusterProfileInitParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Pack != nil {
		in, out := &in.Pack, &out.Pack
		*out = make([]MaasClusterProfilePackInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaasClusterProfileInitParameters.
func (in *MaasClusterProfileInitParameters) DeepCopy() *MaasClusterProfileInitParameters {
	if in == nil {
		return nil
	}
	out := new(MaasClusterProfileInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaasClusterProfileObservation) DeepCopyInto(out *MaasClusterProfileObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Pack != nil {
		in, out := &in.Pack, &out.Pack
		*out = make([]MaasClusterProfilePackObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaasClusterProfileObservation.
func (in *MaasClusterProfileObservation) DeepCopy() *MaasClusterProfileObservation {
	if in == nil {
		return nil
	}
	out := new(MaasClusterProfileObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaasClusterProfilePackInitParameters) DeepCopyInto(out *MaasClusterProfilePackInitParameters) {
	*out = *in
	if in.Manifest != nil {
		in, out := &in.Manifest, &out.Manifest
		*out = make([]MaasClusterProfilePackManifestInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RegistryUID != nil {
		in, out := &in.RegistryUID, &out.RegistryUID
		*out = new(string)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaasClusterProfilePackInitParameters.
func (in *MaasClusterProfilePackInitParameters) DeepCopy() *MaasClusterProfilePackInitParameters {
	if in == nil {
		return nil
	}
	out := new(MaasClusterProfilePackInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaasClusterProfilePackManifestInitParameters) DeepCopyInto(out *MaasClusterProfilePackManifestInitParameters) {
	*out = *in
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaasClusterProfilePackManifestInitParameters.
func (in *MaasClusterProfilePackManifestInitParameters) DeepCopy() *MaasClusterProfilePackManifestInitParameters {
	if in == nil {
		return nil
	}
	out := new(MaasClusterProfilePackManifestInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaasClusterProfilePackManifestObservation) DeepCopyInto(out *MaasClusterProfilePackManifestObservation) {
	*out = *in
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaasClusterProfilePackManifestObservation.
func (in *MaasClusterProfilePackManifestObservation) DeepCopy() *MaasClusterProfilePackManifestObservation {
	if in == nil {
		return nil
	}
	out := new(MaasClusterProfilePackManifestObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaasClusterProfilePackManifestParameters) DeepCopyInto(out *MaasClusterProfilePackManifestParameters) {
	*out = *in
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaasClusterProfilePackManifestParameters.
func (in *MaasClusterProfilePackManifestParameters) DeepCopy() *MaasClusterProfilePackManifestParameters {
	if in == nil {
		return nil
	}
	out := new(MaasClusterProfilePackManifestParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaasClusterProfilePackObservation) DeepCopyInto(out *MaasClusterProfilePackObservation) {
	*out = *in
	if in.Manifest != nil {
		in, out := &in.Manifest, &out.Manifest
		*out = make([]MaasClusterProfilePackManifestObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RegistryUID != nil {
		in, out := &in.RegistryUID, &out.RegistryUID
		*out = new(string)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaasClusterProfilePackObservation.
func (in *MaasClusterProfilePackObservation) DeepCopy() *MaasClusterProfilePackObservation {
	if in == nil {
		return nil
	}
	out := new(MaasClusterProfilePackObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaasClusterProfilePackParameters) DeepCopyInto(out *MaasClusterProfilePackParameters) {
	*out = *in
	if in.Manifest != nil {
		in, out := &in.Manifest, &out.Manifest
		*out = make([]MaasClusterProfilePackManifestParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RegistryUID != nil {
		in, out := &in.RegistryUID, &out.RegistryUID
		*out = new(string)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaasClusterProfilePackParameters.
func (in *MaasClusterProfilePackParameters) DeepCopy() *MaasClusterProfilePackParameters {
	if in == nil {
		return nil
	}
	out := new(MaasClusterProfilePackParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaasClusterProfileParameters) DeepCopyInto(out *MaasClusterProfileParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Pack != nil {
		in, out := &in.Pack, &out.Pack
		*out = make([]MaasClusterProfilePackParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaasClusterProfileParameters.
func (in *MaasClusterProfileParameters) DeepCopy() *MaasClusterProfileParameters {
	if in == nil {
		return nil
	}
	out := new(MaasClusterProfileParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaasClusterRbacBindingInitParameters) DeepCopyInto(out *MaasClusterRbacBindingInitParameters) {
	*out = *in
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Subjects != nil {
		in, out := &in.Subjects, &out.Subjects
		*out = make([]MaasClusterRbacBindingSubjectsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaasClusterRbacBindingInitParameters.
func (in *MaasClusterRbacBindingInitParameters) DeepCopy() *MaasClusterRbacBindingInitParameters {
	if in == nil {
		return nil
	}
	out := new(MaasClusterRbacBindingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaasClusterRbacBindingObservation) DeepCopyInto(out *MaasClusterRbacBindingObservation) {
	*out = *in
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Subjects != nil {
		in, out := &in.Subjects, &out.Subjects
		*out = make([]MaasClusterRbacBindingSubjectsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaasClusterRbacBindingObservation.
func (in *MaasClusterRbacBindingObservation) DeepCopy() *MaasClusterRbacBindingObservation {
	if in == nil {
		return nil
	}
	out := new(MaasClusterRbacBindingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaasClusterRbacBindingParameters) DeepCopyInto(out *MaasClusterRbacBindingParameters) {
	*out = *in
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Subjects != nil {
		in, out := &in.Subjects, &out.Subjects
		*out = make([]MaasClusterRbacBindingSubjectsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaasClusterRbacBindingParameters.
func (in *MaasClusterRbacBindingParameters) DeepCopy() *MaasClusterRbacBindingParameters {
	if in == nil {
		return nil
	}
	out := new(MaasClusterRbacBindingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaasClusterRbacBindingSubjectsInitParameters) DeepCopyInto(out *MaasClusterRbacBindingSubjectsInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaasClusterRbacBindingSubjectsInitParameters.
func (in *MaasClusterRbacBindingSubjectsInitParameters) DeepCopy() *MaasClusterRbacBindingSubjectsInitParameters {
	if in == nil {
		return nil
	}
	out := new(MaasClusterRbacBindingSubjectsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaasClusterRbacBindingSubjectsObservation) DeepCopyInto(out *MaasClusterRbacBindingSubjectsObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaasClusterRbacBindingSubjectsObservation.
func (in *MaasClusterRbacBindingSubjectsObservation) DeepCopy() *MaasClusterRbacBindingSubjectsObservation {
	if in == nil {
		return nil
	}
	out := new(MaasClusterRbacBindingSubjectsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaasClusterRbacBindingSubjectsParameters) DeepCopyInto(out *MaasClusterRbacBindingSubjectsParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaasClusterRbacBindingSubjectsParameters.
func (in *MaasClusterRbacBindingSubjectsParameters) DeepCopy() *MaasClusterRbacBindingSubjectsParameters {
	if in == nil {
		return nil
	}
	out := new(MaasClusterRbacBindingSubjectsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaasHostConfigInitParameters) DeepCopyInto(out *MaasHostConfigInitParameters) {
	*out = *in
	if in.ExternalTrafficPolicy != nil {
		in, out := &in.ExternalTrafficPolicy, &out.ExternalTrafficPolicy
		*out = new(string)
		**out = **in
	}
	if in.HostEndpointType != nil {
		in, out := &in.HostEndpointType, &out.HostEndpointType
		*out = new(string)
		**out = **in
	}
	if in.IngressHost != nil {
		in, out := &in.IngressHost, &out.IngressHost
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancerSourceRanges != nil {
		in, out := &in.LoadBalancerSourceRanges, &out.LoadBalancerSourceRanges
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaasHostConfigInitParameters.
func (in *MaasHostConfigInitParameters) DeepCopy() *MaasHostConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(MaasHostConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaasHostConfigObservation) DeepCopyInto(out *MaasHostConfigObservation) {
	*out = *in
	if in.ExternalTrafficPolicy != nil {
		in, out := &in.ExternalTrafficPolicy, &out.ExternalTrafficPolicy
		*out = new(string)
		**out = **in
	}
	if in.HostEndpointType != nil {
		in, out := &in.HostEndpointType, &out.HostEndpointType
		*out = new(string)
		**out = **in
	}
	if in.IngressHost != nil {
		in, out := &in.IngressHost, &out.IngressHost
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancerSourceRanges != nil {
		in, out := &in.LoadBalancerSourceRanges, &out.LoadBalancerSourceRanges
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaasHostConfigObservation.
func (in *MaasHostConfigObservation) DeepCopy() *MaasHostConfigObservation {
	if in == nil {
		return nil
	}
	out := new(MaasHostConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaasHostConfigParameters) DeepCopyInto(out *MaasHostConfigParameters) {
	*out = *in
	if in.ExternalTrafficPolicy != nil {
		in, out := &in.ExternalTrafficPolicy, &out.ExternalTrafficPolicy
		*out = new(string)
		**out = **in
	}
	if in.HostEndpointType != nil {
		in, out := &in.HostEndpointType, &out.HostEndpointType
		*out = new(string)
		**out = **in
	}
	if in.IngressHost != nil {
		in, out := &in.IngressHost, &out.IngressHost
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancerSourceRanges != nil {
		in, out := &in.LoadBalancerSourceRanges, &out.LoadBalancerSourceRanges
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaasHostConfigParameters.
func (in *MaasHostConfigParameters) DeepCopy() *MaasHostConfigParameters {
	if in == nil {
		return nil
	}
	out := new(MaasHostConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaasInitParameters) DeepCopyInto(out *MaasInitParameters) {
	*out = *in
	if in.ApplySetting != nil {
		in, out := &in.ApplySetting, &out.ApplySetting
		*out = new(string)
		**out = **in
	}
	if in.BackupPolicy != nil {
		in, out := &in.BackupPolicy, &out.BackupPolicy
		*out = make([]MaasBackupPolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CloudAccountID != nil {
		in, out := &in.CloudAccountID, &out.CloudAccountID
		*out = new(string)
		**out = **in
	}
	if in.CloudConfig != nil {
		in, out := &in.CloudConfig, &out.CloudConfig
		*out = make([]MaasCloudConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterMetaAttribute != nil {
		in, out := &in.ClusterMetaAttribute, &out.ClusterMetaAttribute
		*out = new(string)
		**out = **in
	}
	if in.ClusterProfile != nil {
		in, out := &in.ClusterProfile, &out.ClusterProfile
		*out = make([]MaasClusterProfileInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterRbacBinding != nil {
		in, out := &in.ClusterRbacBinding, &out.ClusterRbacBinding
		*out = make([]MaasClusterRbacBindingInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Context != nil {
		in, out := &in.Context, &out.Context
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ForceDelete != nil {
		in, out := &in.ForceDelete, &out.ForceDelete
		*out = new(bool)
		**out = **in
	}
	if in.ForceDeleteDelay != nil {
		in, out := &in.ForceDeleteDelay, &out.ForceDeleteDelay
		*out = new(float64)
		**out = **in
	}
	if in.HostConfig != nil {
		in, out := &in.HostConfig, &out.HostConfig
		*out = make([]MaasHostConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LocationConfig != nil {
		in, out := &in.LocationConfig, &out.LocationConfig
		*out = make([]MaasLocationConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MachinePool != nil {
		in, out := &in.MachinePool, &out.MachinePool
		*out = make([]MaasMachinePoolInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]MaasNamespacesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OsPatchAfter != nil {
		in, out := &in.OsPatchAfter, &out.OsPatchAfter
		*out = new(string)
		**out = **in
	}
	if in.OsPatchOnBoot != nil {
		in, out := &in.OsPatchOnBoot, &out.OsPatchOnBoot
		*out = new(bool)
		**out = **in
	}
	if in.OsPatchSchedule != nil {
		in, out := &in.OsPatchSchedule, &out.OsPatchSchedule
		*out = new(string)
		**out = **in
	}
	if in.PauseAgentUpgrades != nil {
		in, out := &in.PauseAgentUpgrades, &out.PauseAgentUpgrades
		*out = new(string)
		**out = **in
	}
	if in.ReviewRepaveState != nil {
		in, out := &in.ReviewRepaveState, &out.ReviewRepaveState
		*out = new(string)
		**out = **in
	}
	if in.ScanPolicy != nil {
		in, out := &in.ScanPolicy, &out.ScanPolicy
		*out = make([]MaasScanPolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SkipCompletion != nil {
		in, out := &in.SkipCompletion, &out.SkipCompletion
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaasInitParameters.
func (in *MaasInitParameters) DeepCopy() *MaasInitParameters {
	if in == nil {
		return nil
	}
	out := new(MaasInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaasList) DeepCopyInto(out *MaasList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Maas, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaasList.
func (in *MaasList) DeepCopy() *MaasList {
	if in == nil {
		return nil
	}
	out := new(MaasList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MaasList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaasLocationConfigInitParameters) DeepCopyInto(out *MaasLocationConfigInitParameters) {
	*out = *in
	if in.CountryCode != nil {
		in, out := &in.CountryCode, &out.CountryCode
		*out = new(string)
		**out = **in
	}
	if in.CountryName != nil {
		in, out := &in.CountryName, &out.CountryName
		*out = new(string)
		**out = **in
	}
	if in.Latitude != nil {
		in, out := &in.Latitude, &out.Latitude
		*out = new(float64)
		**out = **in
	}
	if in.Longitude != nil {
		in, out := &in.Longitude, &out.Longitude
		*out = new(float64)
		**out = **in
	}
	if in.RegionCode != nil {
		in, out := &in.RegionCode, &out.RegionCode
		*out = new(string)
		**out = **in
	}
	if in.RegionName != nil {
		in, out := &in.RegionName, &out.RegionName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaasLocationConfigInitParameters.
func (in *MaasLocationConfigInitParameters) DeepCopy() *MaasLocationConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(MaasLocationConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaasLocationConfigObservation) DeepCopyInto(out *MaasLocationConfigObservation) {
	*out = *in
	if in.CountryCode != nil {
		in, out := &in.CountryCode, &out.CountryCode
		*out = new(string)
		**out = **in
	}
	if in.CountryName != nil {
		in, out := &in.CountryName, &out.CountryName
		*out = new(string)
		**out = **in
	}
	if in.Latitude != nil {
		in, out := &in.Latitude, &out.Latitude
		*out = new(float64)
		**out = **in
	}
	if in.Longitude != nil {
		in, out := &in.Longitude, &out.Longitude
		*out = new(float64)
		**out = **in
	}
	if in.RegionCode != nil {
		in, out := &in.RegionCode, &out.RegionCode
		*out = new(string)
		**out = **in
	}
	if in.RegionName != nil {
		in, out := &in.RegionName, &out.RegionName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaasLocationConfigObservation.
func (in *MaasLocationConfigObservation) DeepCopy() *MaasLocationConfigObservation {
	if in == nil {
		return nil
	}
	out := new(MaasLocationConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaasLocationConfigParameters) DeepCopyInto(out *MaasLocationConfigParameters) {
	*out = *in
	if in.CountryCode != nil {
		in, out := &in.CountryCode, &out.CountryCode
		*out = new(string)
		**out = **in
	}
	if in.CountryName != nil {
		in, out := &in.CountryName, &out.CountryName
		*out = new(string)
		**out = **in
	}
	if in.Latitude != nil {
		in, out := &in.Latitude, &out.Latitude
		*out = new(float64)
		**out = **in
	}
	if in.Longitude != nil {
		in, out := &in.Longitude, &out.Longitude
		*out = new(float64)
		**out = **in
	}
	if in.RegionCode != nil {
		in, out := &in.RegionCode, &out.RegionCode
		*out = new(string)
		**out = **in
	}
	if in.RegionName != nil {
		in, out := &in.RegionName, &out.RegionName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaasLocationConfigParameters.
func (in *MaasLocationConfigParameters) DeepCopy() *MaasLocationConfigParameters {
	if in == nil {
		return nil
	}
	out := new(MaasLocationConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaasMachinePoolInitParameters) DeepCopyInto(out *MaasMachinePoolInitParameters) {
	*out = *in
	if in.AdditionalLabels != nil {
		in, out := &in.AdditionalLabels, &out.AdditionalLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Azs != nil {
		in, out := &in.Azs, &out.Azs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ControlPlane != nil {
		in, out := &in.ControlPlane, &out.ControlPlane
		*out = new(bool)
		**out = **in
	}
	if in.ControlPlaneAsWorker != nil {
		in, out := &in.ControlPlaneAsWorker, &out.ControlPlaneAsWorker
		*out = new(bool)
		**out = **in
	}
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = make([]MaasMachinePoolInstanceTypeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Node != nil {
		in, out := &in.Node, &out.Node
		*out = make([]MaasMachinePoolNodeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NodeRepaveInterval != nil {
		in, out := &in.NodeRepaveInterval, &out.NodeRepaveInterval
		*out = new(float64)
		**out = **in
	}
	if in.NodeTags != nil {
		in, out := &in.NodeTags, &out.NodeTags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Placement != nil {
		in, out := &in.Placement, &out.Placement
		*out = make([]MachinePoolPlacementInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Taints != nil {
		in, out := &in.Taints, &out.Taints
		*out = make([]MaasMachinePoolTaintsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UpdateStrategy != nil {
		in, out := &in.UpdateStrategy, &out.UpdateStrategy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaasMachinePoolInitParameters.
func (in *MaasMachinePoolInitParameters) DeepCopy() *MaasMachinePoolInitParameters {
	if in == nil {
		return nil
	}
	out := new(MaasMachinePoolInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaasMachinePoolInstanceTypeInitParameters) DeepCopyInto(out *MaasMachinePoolInstanceTypeInitParameters) {
	*out = *in
	if in.MinCPU != nil {
		in, out := &in.MinCPU, &out.MinCPU
		*out = new(float64)
		**out = **in
	}
	if in.MinMemoryMb != nil {
		in, out := &in.MinMemoryMb, &out.MinMemoryMb
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaasMachinePoolInstanceTypeInitParameters.
func (in *MaasMachinePoolInstanceTypeInitParameters) DeepCopy() *MaasMachinePoolInstanceTypeInitParameters {
	if in == nil {
		return nil
	}
	out := new(MaasMachinePoolInstanceTypeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaasMachinePoolInstanceTypeObservation) DeepCopyInto(out *MaasMachinePoolInstanceTypeObservation) {
	*out = *in
	if in.MinCPU != nil {
		in, out := &in.MinCPU, &out.MinCPU
		*out = new(float64)
		**out = **in
	}
	if in.MinMemoryMb != nil {
		in, out := &in.MinMemoryMb, &out.MinMemoryMb
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaasMachinePoolInstanceTypeObservation.
func (in *MaasMachinePoolInstanceTypeObservation) DeepCopy() *MaasMachinePoolInstanceTypeObservation {
	if in == nil {
		return nil
	}
	out := new(MaasMachinePoolInstanceTypeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaasMachinePoolInstanceTypeParameters) DeepCopyInto(out *MaasMachinePoolInstanceTypeParameters) {
	*out = *in
	if in.MinCPU != nil {
		in, out := &in.MinCPU, &out.MinCPU
		*out = new(float64)
		**out = **in
	}
	if in.MinMemoryMb != nil {
		in, out := &in.MinMemoryMb, &out.MinMemoryMb
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaasMachinePoolInstanceTypeParameters.
func (in *MaasMachinePoolInstanceTypeParameters) DeepCopy() *MaasMachinePoolInstanceTypeParameters {
	if in == nil {
		return nil
	}
	out := new(MaasMachinePoolInstanceTypeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaasMachinePoolNodeInitParameters) DeepCopyInto(out *MaasMachinePoolNodeInitParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.NodeID != nil {
		in, out := &in.NodeID, &out.NodeID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaasMachinePoolNodeInitParameters.
func (in *MaasMachinePoolNodeInitParameters) DeepCopy() *MaasMachinePoolNodeInitParameters {
	if in == nil {
		return nil
	}
	out := new(MaasMachinePoolNodeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaasMachinePoolNodeObservation) DeepCopyInto(out *MaasMachinePoolNodeObservation) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.NodeID != nil {
		in, out := &in.NodeID, &out.NodeID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaasMachinePoolNodeObservation.
func (in *MaasMachinePoolNodeObservation) DeepCopy() *MaasMachinePoolNodeObservation {
	if in == nil {
		return nil
	}
	out := new(MaasMachinePoolNodeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaasMachinePoolNodeParameters) DeepCopyInto(out *MaasMachinePoolNodeParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.NodeID != nil {
		in, out := &in.NodeID, &out.NodeID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaasMachinePoolNodeParameters.
func (in *MaasMachinePoolNodeParameters) DeepCopy() *MaasMachinePoolNodeParameters {
	if in == nil {
		return nil
	}
	out := new(MaasMachinePoolNodeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaasMachinePoolObservation) DeepCopyInto(out *MaasMachinePoolObservation) {
	*out = *in
	if in.AdditionalLabels != nil {
		in, out := &in.AdditionalLabels, &out.AdditionalLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Azs != nil {
		in, out := &in.Azs, &out.Azs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ControlPlane != nil {
		in, out := &in.ControlPlane, &out.ControlPlane
		*out = new(bool)
		**out = **in
	}
	if in.ControlPlaneAsWorker != nil {
		in, out := &in.ControlPlaneAsWorker, &out.ControlPlaneAsWorker
		*out = new(bool)
		**out = **in
	}
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = make([]MaasMachinePoolInstanceTypeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Node != nil {
		in, out := &in.Node, &out.Node
		*out = make([]MaasMachinePoolNodeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NodeRepaveInterval != nil {
		in, out := &in.NodeRepaveInterval, &out.NodeRepaveInterval
		*out = new(float64)
		**out = **in
	}
	if in.NodeTags != nil {
		in, out := &in.NodeTags, &out.NodeTags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Placement != nil {
		in, out := &in.Placement, &out.Placement
		*out = make([]MachinePoolPlacementObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Taints != nil {
		in, out := &in.Taints, &out.Taints
		*out = make([]MaasMachinePoolTaintsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UpdateStrategy != nil {
		in, out := &in.UpdateStrategy, &out.UpdateStrategy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaasMachinePoolObservation.
func (in *MaasMachinePoolObservation) DeepCopy() *MaasMachinePoolObservation {
	if in == nil {
		return nil
	}
	out := new(MaasMachinePoolObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaasMachinePoolParameters) DeepCopyInto(out *MaasMachinePoolParameters) {
	*out = *in
	if in.AdditionalLabels != nil {
		in, out := &in.AdditionalLabels, &out.AdditionalLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Azs != nil {
		in, out := &in.Azs, &out.Azs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ControlPlane != nil {
		in, out := &in.ControlPlane, &out.ControlPlane
		*out = new(bool)
		**out = **in
	}
	if in.ControlPlaneAsWorker != nil {
		in, out := &in.ControlPlaneAsWorker, &out.ControlPlaneAsWorker
		*out = new(bool)
		**out = **in
	}
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = make([]MaasMachinePoolInstanceTypeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Node != nil {
		in, out := &in.Node, &out.Node
		*out = make([]MaasMachinePoolNodeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NodeRepaveInterval != nil {
		in, out := &in.NodeRepaveInterval, &out.NodeRepaveInterval
		*out = new(float64)
		**out = **in
	}
	if in.NodeTags != nil {
		in, out := &in.NodeTags, &out.NodeTags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Placement != nil {
		in, out := &in.Placement, &out.Placement
		*out = make([]MachinePoolPlacementParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Taints != nil {
		in, out := &in.Taints, &out.Taints
		*out = make([]MaasMachinePoolTaintsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UpdateStrategy != nil {
		in, out := &in.UpdateStrategy, &out.UpdateStrategy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaasMachinePoolParameters.
func (in *MaasMachinePoolParameters) DeepCopy() *MaasMachinePoolParameters {
	if in == nil {
		return nil
	}
	out := new(MaasMachinePoolParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaasMachinePoolTaintsInitParameters) DeepCopyInto(out *MaasMachinePoolTaintsInitParameters) {
	*out = *in
	if in.Effect != nil {
		in, out := &in.Effect, &out.Effect
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaasMachinePoolTaintsInitParameters.
func (in *MaasMachinePoolTaintsInitParameters) DeepCopy() *MaasMachinePoolTaintsInitParameters {
	if in == nil {
		return nil
	}
	out := new(MaasMachinePoolTaintsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaasMachinePoolTaintsObservation) DeepCopyInto(out *MaasMachinePoolTaintsObservation) {
	*out = *in
	if in.Effect != nil {
		in, out := &in.Effect, &out.Effect
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaasMachinePoolTaintsObservation.
func (in *MaasMachinePoolTaintsObservation) DeepCopy() *MaasMachinePoolTaintsObservation {
	if in == nil {
		return nil
	}
	out := new(MaasMachinePoolTaintsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaasMachinePoolTaintsParameters) DeepCopyInto(out *MaasMachinePoolTaintsParameters) {
	*out = *in
	if in.Effect != nil {
		in, out := &in.Effect, &out.Effect
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaasMachinePoolTaintsParameters.
func (in *MaasMachinePoolTaintsParameters) DeepCopy() *MaasMachinePoolTaintsParameters {
	if in == nil {
		return nil
	}
	out := new(MaasMachinePoolTaintsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaasNamespacesInitParameters) DeepCopyInto(out *MaasNamespacesInitParameters) {
	*out = *in
	if in.ImagesBlacklist != nil {
		in, out := &in.ImagesBlacklist, &out.ImagesBlacklist
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ResourceAllocation != nil {
		in, out := &in.ResourceAllocation, &out.ResourceAllocation
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaasNamespacesInitParameters.
func (in *MaasNamespacesInitParameters) DeepCopy() *MaasNamespacesInitParameters {
	if in == nil {
		return nil
	}
	out := new(MaasNamespacesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaasNamespacesObservation) DeepCopyInto(out *MaasNamespacesObservation) {
	*out = *in
	if in.ImagesBlacklist != nil {
		in, out := &in.ImagesBlacklist, &out.ImagesBlacklist
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ResourceAllocation != nil {
		in, out := &in.ResourceAllocation, &out.ResourceAllocation
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaasNamespacesObservation.
func (in *MaasNamespacesObservation) DeepCopy() *MaasNamespacesObservation {
	if in == nil {
		return nil
	}
	out := new(MaasNamespacesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaasNamespacesParameters) DeepCopyInto(out *MaasNamespacesParameters) {
	*out = *in
	if in.ImagesBlacklist != nil {
		in, out := &in.ImagesBlacklist, &out.ImagesBlacklist
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ResourceAllocation != nil {
		in, out := &in.ResourceAllocation, &out.ResourceAllocation
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaasNamespacesParameters.
func (in *MaasNamespacesParameters) DeepCopy() *MaasNamespacesParameters {
	if in == nil {
		return nil
	}
	out := new(MaasNamespacesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaasObservation) DeepCopyInto(out *MaasObservation) {
	*out = *in
	if in.AdminKubeConfig != nil {
		in, out := &in.AdminKubeConfig, &out.AdminKubeConfig
		*out = new(string)
		**out = **in
	}
	if in.ApplySetting != nil {
		in, out := &in.ApplySetting, &out.ApplySetting
		*out = new(string)
		**out = **in
	}
	if in.BackupPolicy != nil {
		in, out := &in.BackupPolicy, &out.BackupPolicy
		*out = make([]MaasBackupPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CloudAccountID != nil {
		in, out := &in.CloudAccountID, &out.CloudAccountID
		*out = new(string)
		**out = **in
	}
	if in.CloudConfig != nil {
		in, out := &in.CloudConfig, &out.CloudConfig
		*out = make([]MaasCloudConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CloudConfigID != nil {
		in, out := &in.CloudConfigID, &out.CloudConfigID
		*out = new(string)
		**out = **in
	}
	if in.ClusterMetaAttribute != nil {
		in, out := &in.ClusterMetaAttribute, &out.ClusterMetaAttribute
		*out = new(string)
		**out = **in
	}
	if in.ClusterProfile != nil {
		in, out := &in.ClusterProfile, &out.ClusterProfile
		*out = make([]MaasClusterProfileObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterRbacBinding != nil {
		in, out := &in.ClusterRbacBinding, &out.ClusterRbacBinding
		*out = make([]MaasClusterRbacBindingObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Context != nil {
		in, out := &in.Context, &out.Context
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ForceDelete != nil {
		in, out := &in.ForceDelete, &out.ForceDelete
		*out = new(bool)
		**out = **in
	}
	if in.ForceDeleteDelay != nil {
		in, out := &in.ForceDeleteDelay, &out.ForceDeleteDelay
		*out = new(float64)
		**out = **in
	}
	if in.HostConfig != nil {
		in, out := &in.HostConfig, &out.HostConfig
		*out = make([]MaasHostConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Kubeconfig != nil {
		in, out := &in.Kubeconfig, &out.Kubeconfig
		*out = new(string)
		**out = **in
	}
	if in.LocationConfig != nil {
		in, out := &in.LocationConfig, &out.LocationConfig
		*out = make([]MaasLocationConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MachinePool != nil {
		in, out := &in.MachinePool, &out.MachinePool
		*out = make([]MaasMachinePoolObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]MaasNamespacesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OsPatchAfter != nil {
		in, out := &in.OsPatchAfter, &out.OsPatchAfter
		*out = new(string)
		**out = **in
	}
	if in.OsPatchOnBoot != nil {
		in, out := &in.OsPatchOnBoot, &out.OsPatchOnBoot
		*out = new(bool)
		**out = **in
	}
	if in.OsPatchSchedule != nil {
		in, out := &in.OsPatchSchedule, &out.OsPatchSchedule
		*out = new(string)
		**out = **in
	}
	if in.PauseAgentUpgrades != nil {
		in, out := &in.PauseAgentUpgrades, &out.PauseAgentUpgrades
		*out = new(string)
		**out = **in
	}
	if in.ReviewRepaveState != nil {
		in, out := &in.ReviewRepaveState, &out.ReviewRepaveState
		*out = new(string)
		**out = **in
	}
	if in.ScanPolicy != nil {
		in, out := &in.ScanPolicy, &out.ScanPolicy
		*out = make([]MaasScanPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SkipCompletion != nil {
		in, out := &in.SkipCompletion, &out.SkipCompletion
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaasObservation.
func (in *MaasObservation) DeepCopy() *MaasObservation {
	if in == nil {
		return nil
	}
	out := new(MaasObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaasParameters) DeepCopyInto(out *MaasParameters) {
	*out = *in
	if in.ApplySetting != nil {
		in, out := &in.ApplySetting, &out.ApplySetting
		*out = new(string)
		**out = **in
	}
	if in.BackupPolicy != nil {
		in, out := &in.BackupPolicy, &out.BackupPolicy
		*out = make([]MaasBackupPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CloudAccountID != nil {
		in, out := &in.CloudAccountID, &out.CloudAccountID
		*out = new(string)
		**out = **in
	}
	if in.CloudConfig != nil {
		in, out := &in.CloudConfig, &out.CloudConfig
		*out = make([]MaasCloudConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterMetaAttribute != nil {
		in, out := &in.ClusterMetaAttribute, &out.ClusterMetaAttribute
		*out = new(string)
		**out = **in
	}
	if in.ClusterProfile != nil {
		in, out := &in.ClusterProfile, &out.ClusterProfile
		*out = make([]MaasClusterProfileParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterRbacBinding != nil {
		in, out := &in.ClusterRbacBinding, &out.ClusterRbacBinding
		*out = make([]MaasClusterRbacBindingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Context != nil {
		in, out := &in.Context, &out.Context
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ForceDelete != nil {
		in, out := &in.ForceDelete, &out.ForceDelete
		*out = new(bool)
		**out = **in
	}
	if in.ForceDeleteDelay != nil {
		in, out := &in.ForceDeleteDelay, &out.ForceDeleteDelay
		*out = new(float64)
		**out = **in
	}
	if in.HostConfig != nil {
		in, out := &in.HostConfig, &out.HostConfig
		*out = make([]MaasHostConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LocationConfig != nil {
		in, out := &in.LocationConfig, &out.LocationConfig
		*out = make([]MaasLocationConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MachinePool != nil {
		in, out := &in.MachinePool, &out.MachinePool
		*out = make([]MaasMachinePoolParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]MaasNamespacesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OsPatchAfter != nil {
		in, out := &in.OsPatchAfter, &out.OsPatchAfter
		*out = new(string)
		**out = **in
	}
	if in.OsPatchOnBoot != nil {
		in, out := &in.OsPatchOnBoot, &out.OsPatchOnBoot
		*out = new(bool)
		**out = **in
	}
	if in.OsPatchSchedule != nil {
		in, out := &in.OsPatchSchedule, &out.OsPatchSchedule
		*out = new(string)
		**out = **in
	}
	if in.PauseAgentUpgrades != nil {
		in, out := &in.PauseAgentUpgrades, &out.PauseAgentUpgrades
		*out = new(string)
		**out = **in
	}
	if in.ReviewRepaveState != nil {
		in, out := &in.ReviewRepaveState, &out.ReviewRepaveState
		*out = new(string)
		**out = **in
	}
	if in.ScanPolicy != nil {
		in, out := &in.ScanPolicy, &out.ScanPolicy
		*out = make([]MaasScanPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SkipCompletion != nil {
		in, out := &in.SkipCompletion, &out.SkipCompletion
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaasParameters.
func (in *MaasParameters) DeepCopy() *MaasParameters {
	if in == nil {
		return nil
	}
	out := new(MaasParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaasScanPolicyInitParameters) DeepCopyInto(out *MaasScanPolicyInitParameters) {
	*out = *in
	if in.ConfigurationScanSchedule != nil {
		in, out := &in.ConfigurationScanSchedule, &out.ConfigurationScanSchedule
		*out = new(string)
		**out = **in
	}
	if in.ConformanceScanSchedule != nil {
		in, out := &in.ConformanceScanSchedule, &out.ConformanceScanSchedule
		*out = new(string)
		**out = **in
	}
	if in.PenetrationScanSchedule != nil {
		in, out := &in.PenetrationScanSchedule, &out.PenetrationScanSchedule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaasScanPolicyInitParameters.
func (in *MaasScanPolicyInitParameters) DeepCopy() *MaasScanPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(MaasScanPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaasScanPolicyObservation) DeepCopyInto(out *MaasScanPolicyObservation) {
	*out = *in
	if in.ConfigurationScanSchedule != nil {
		in, out := &in.ConfigurationScanSchedule, &out.ConfigurationScanSchedule
		*out = new(string)
		**out = **in
	}
	if in.ConformanceScanSchedule != nil {
		in, out := &in.ConformanceScanSchedule, &out.ConformanceScanSchedule
		*out = new(string)
		**out = **in
	}
	if in.PenetrationScanSchedule != nil {
		in, out := &in.PenetrationScanSchedule, &out.PenetrationScanSchedule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaasScanPolicyObservation.
func (in *MaasScanPolicyObservation) DeepCopy() *MaasScanPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(MaasScanPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaasScanPolicyParameters) DeepCopyInto(out *MaasScanPolicyParameters) {
	*out = *in
	if in.ConfigurationScanSchedule != nil {
		in, out := &in.ConfigurationScanSchedule, &out.ConfigurationScanSchedule
		*out = new(string)
		**out = **in
	}
	if in.ConformanceScanSchedule != nil {
		in, out := &in.ConformanceScanSchedule, &out.ConformanceScanSchedule
		*out = new(string)
		**out = **in
	}
	if in.PenetrationScanSchedule != nil {
		in, out := &in.PenetrationScanSchedule, &out.PenetrationScanSchedule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaasScanPolicyParameters.
func (in *MaasScanPolicyParameters) DeepCopy() *MaasScanPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(MaasScanPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaasSpec) DeepCopyInto(out *MaasSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaasSpec.
func (in *MaasSpec) DeepCopy() *MaasSpec {
	if in == nil {
		return nil
	}
	out := new(MaasSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaasStatus) DeepCopyInto(out *MaasStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaasStatus.
func (in *MaasStatus) DeepCopy() *MaasStatus {
	if in == nil {
		return nil
	}
	out := new(MaasStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MachinePoolInitParameters) DeepCopyInto(out *MachinePoolInitParameters) {
	*out = *in
	if in.AdditionalLabels != nil {
		in, out := &in.AdditionalLabels, &out.AdditionalLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.DiskSizeGb != nil {
		in, out := &in.DiskSizeGb, &out.DiskSizeGb
		*out = new(float64)
		**out = **in
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.IsSystemNodePool != nil {
		in, out := &in.IsSystemNodePool, &out.IsSystemNodePool
		*out = new(bool)
		**out = **in
	}
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Node != nil {
		in, out := &in.Node, &out.Node
		*out = make([]NodeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StorageAccountType != nil {
		in, out := &in.StorageAccountType, &out.StorageAccountType
		*out = new(string)
		**out = **in
	}
	if in.Taints != nil {
		in, out := &in.Taints, &out.Taints
		*out = make([]TaintsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UpdateStrategy != nil {
		in, out := &in.UpdateStrategy, &out.UpdateStrategy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MachinePoolInitParameters.
func (in *MachinePoolInitParameters) DeepCopy() *MachinePoolInitParameters {
	if in == nil {
		return nil
	}
	out := new(MachinePoolInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MachinePoolInstanceTypeInitParameters) DeepCopyInto(out *MachinePoolInstanceTypeInitParameters) {
	*out = *in
	if in.AttachedDisks != nil {
		in, out := &in.AttachedDisks, &out.AttachedDisks
		*out = make([]AttachedDisksInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CPU != nil {
		in, out := &in.CPU, &out.CPU
		*out = new(float64)
		**out = **in
	}
	if in.CachePassthrough != nil {
		in, out := &in.CachePassthrough, &out.CachePassthrough
		*out = new(bool)
		**out = **in
	}
	if in.CpusSets != nil {
		in, out := &in.CpusSets, &out.CpusSets
		*out = new(string)
		**out = **in
	}
	if in.DiskSizeGb != nil {
		in, out := &in.DiskSizeGb, &out.DiskSizeGb
		*out = new(float64)
		**out = **in
	}
	if in.GpuConfig != nil {
		in, out := &in.GpuConfig, &out.GpuConfig
		*out = make([]GpuConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MemoryMb != nil {
		in, out := &in.MemoryMb, &out.MemoryMb
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MachinePoolInstanceTypeInitParameters.
func (in *MachinePoolInstanceTypeInitParameters) DeepCopy() *MachinePoolInstanceTypeInitParameters {
	if in == nil {
		return nil
	}
	out := new(MachinePoolInstanceTypeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MachinePoolInstanceTypeObservation) DeepCopyInto(out *MachinePoolInstanceTypeObservation) {
	*out = *in
	if in.AttachedDisks != nil {
		in, out := &in.AttachedDisks, &out.AttachedDisks
		*out = make([]AttachedDisksObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CPU != nil {
		in, out := &in.CPU, &out.CPU
		*out = new(float64)
		**out = **in
	}
	if in.CachePassthrough != nil {
		in, out := &in.CachePassthrough, &out.CachePassthrough
		*out = new(bool)
		**out = **in
	}
	if in.CpusSets != nil {
		in, out := &in.CpusSets, &out.CpusSets
		*out = new(string)
		**out = **in
	}
	if in.DiskSizeGb != nil {
		in, out := &in.DiskSizeGb, &out.DiskSizeGb
		*out = new(float64)
		**out = **in
	}
	if in.GpuConfig != nil {
		in, out := &in.GpuConfig, &out.GpuConfig
		*out = make([]GpuConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MemoryMb != nil {
		in, out := &in.MemoryMb, &out.MemoryMb
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MachinePoolInstanceTypeObservation.
func (in *MachinePoolInstanceTypeObservation) DeepCopy() *MachinePoolInstanceTypeObservation {
	if in == nil {
		return nil
	}
	out := new(MachinePoolInstanceTypeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MachinePoolInstanceTypeParameters) DeepCopyInto(out *MachinePoolInstanceTypeParameters) {
	*out = *in
	if in.AttachedDisks != nil {
		in, out := &in.AttachedDisks, &out.AttachedDisks
		*out = make([]AttachedDisksParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CPU != nil {
		in, out := &in.CPU, &out.CPU
		*out = new(float64)
		**out = **in
	}
	if in.CachePassthrough != nil {
		in, out := &in.CachePassthrough, &out.CachePassthrough
		*out = new(bool)
		**out = **in
	}
	if in.CpusSets != nil {
		in, out := &in.CpusSets, &out.CpusSets
		*out = new(string)
		**out = **in
	}
	if in.DiskSizeGb != nil {
		in, out := &in.DiskSizeGb, &out.DiskSizeGb
		*out = new(float64)
		**out = **in
	}
	if in.GpuConfig != nil {
		in, out := &in.GpuConfig, &out.GpuConfig
		*out = make([]GpuConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MemoryMb != nil {
		in, out := &in.MemoryMb, &out.MemoryMb
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MachinePoolInstanceTypeParameters.
func (in *MachinePoolInstanceTypeParameters) DeepCopy() *MachinePoolInstanceTypeParameters {
	if in == nil {
		return nil
	}
	out := new(MachinePoolInstanceTypeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MachinePoolNodeInitParameters) DeepCopyInto(out *MachinePoolNodeInitParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.NodeID != nil {
		in, out := &in.NodeID, &out.NodeID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MachinePoolNodeInitParameters.
func (in *MachinePoolNodeInitParameters) DeepCopy() *MachinePoolNodeInitParameters {
	if in == nil {
		return nil
	}
	out := new(MachinePoolNodeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MachinePoolNodeObservation) DeepCopyInto(out *MachinePoolNodeObservation) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.NodeID != nil {
		in, out := &in.NodeID, &out.NodeID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MachinePoolNodeObservation.
func (in *MachinePoolNodeObservation) DeepCopy() *MachinePoolNodeObservation {
	if in == nil {
		return nil
	}
	out := new(MachinePoolNodeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MachinePoolNodeParameters) DeepCopyInto(out *MachinePoolNodeParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.NodeID != nil {
		in, out := &in.NodeID, &out.NodeID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MachinePoolNodeParameters.
func (in *MachinePoolNodeParameters) DeepCopy() *MachinePoolNodeParameters {
	if in == nil {
		return nil
	}
	out := new(MachinePoolNodeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MachinePoolObservation) DeepCopyInto(out *MachinePoolObservation) {
	*out = *in
	if in.AdditionalLabels != nil {
		in, out := &in.AdditionalLabels, &out.AdditionalLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.DiskSizeGb != nil {
		in, out := &in.DiskSizeGb, &out.DiskSizeGb
		*out = new(float64)
		**out = **in
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.IsSystemNodePool != nil {
		in, out := &in.IsSystemNodePool, &out.IsSystemNodePool
		*out = new(bool)
		**out = **in
	}
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Node != nil {
		in, out := &in.Node, &out.Node
		*out = make([]NodeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StorageAccountType != nil {
		in, out := &in.StorageAccountType, &out.StorageAccountType
		*out = new(string)
		**out = **in
	}
	if in.Taints != nil {
		in, out := &in.Taints, &out.Taints
		*out = make([]TaintsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UpdateStrategy != nil {
		in, out := &in.UpdateStrategy, &out.UpdateStrategy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MachinePoolObservation.
func (in *MachinePoolObservation) DeepCopy() *MachinePoolObservation {
	if in == nil {
		return nil
	}
	out := new(MachinePoolObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MachinePoolParameters) DeepCopyInto(out *MachinePoolParameters) {
	*out = *in
	if in.AdditionalLabels != nil {
		in, out := &in.AdditionalLabels, &out.AdditionalLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.DiskSizeGb != nil {
		in, out := &in.DiskSizeGb, &out.DiskSizeGb
		*out = new(float64)
		**out = **in
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.IsSystemNodePool != nil {
		in, out := &in.IsSystemNodePool, &out.IsSystemNodePool
		*out = new(bool)
		**out = **in
	}
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Node != nil {
		in, out := &in.Node, &out.Node
		*out = make([]NodeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StorageAccountType != nil {
		in, out := &in.StorageAccountType, &out.StorageAccountType
		*out = new(string)
		**out = **in
	}
	if in.Taints != nil {
		in, out := &in.Taints, &out.Taints
		*out = make([]TaintsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UpdateStrategy != nil {
		in, out := &in.UpdateStrategy, &out.UpdateStrategy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MachinePoolParameters.
func (in *MachinePoolParameters) DeepCopy() *MachinePoolParameters {
	if in == nil {
		return nil
	}
	out := new(MachinePoolParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MachinePoolPlacementInitParameters) DeepCopyInto(out *MachinePoolPlacementInitParameters) {
	*out = *in
	if in.ResourcePool != nil {
		in, out := &in.ResourcePool, &out.ResourcePool
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MachinePoolPlacementInitParameters.
func (in *MachinePoolPlacementInitParameters) DeepCopy() *MachinePoolPlacementInitParameters {
	if in == nil {
		return nil
	}
	out := new(MachinePoolPlacementInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MachinePoolPlacementObservation) DeepCopyInto(out *MachinePoolPlacementObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.ResourcePool != nil {
		in, out := &in.ResourcePool, &out.ResourcePool
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MachinePoolPlacementObservation.
func (in *MachinePoolPlacementObservation) DeepCopy() *MachinePoolPlacementObservation {
	if in == nil {
		return nil
	}
	out := new(MachinePoolPlacementObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MachinePoolPlacementParameters) DeepCopyInto(out *MachinePoolPlacementParameters) {
	*out = *in
	if in.ResourcePool != nil {
		in, out := &in.ResourcePool, &out.ResourcePool
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MachinePoolPlacementParameters.
func (in *MachinePoolPlacementParameters) DeepCopy() *MachinePoolPlacementParameters {
	if in == nil {
		return nil
	}
	out := new(MachinePoolPlacementParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MachinePoolTaintsInitParameters) DeepCopyInto(out *MachinePoolTaintsInitParameters) {
	*out = *in
	if in.Effect != nil {
		in, out := &in.Effect, &out.Effect
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MachinePoolTaintsInitParameters.
func (in *MachinePoolTaintsInitParameters) DeepCopy() *MachinePoolTaintsInitParameters {
	if in == nil {
		return nil
	}
	out := new(MachinePoolTaintsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MachinePoolTaintsObservation) DeepCopyInto(out *MachinePoolTaintsObservation) {
	*out = *in
	if in.Effect != nil {
		in, out := &in.Effect, &out.Effect
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MachinePoolTaintsObservation.
func (in *MachinePoolTaintsObservation) DeepCopy() *MachinePoolTaintsObservation {
	if in == nil {
		return nil
	}
	out := new(MachinePoolTaintsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MachinePoolTaintsParameters) DeepCopyInto(out *MachinePoolTaintsParameters) {
	*out = *in
	if in.Effect != nil {
		in, out := &in.Effect, &out.Effect
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MachinePoolTaintsParameters.
func (in *MachinePoolTaintsParameters) DeepCopy() *MachinePoolTaintsParameters {
	if in == nil {
		return nil
	}
	out := new(MachinePoolTaintsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManifestInitParameters) DeepCopyInto(out *ManifestInitParameters) {
	*out = *in
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManifestInitParameters.
func (in *ManifestInitParameters) DeepCopy() *ManifestInitParameters {
	if in == nil {
		return nil
	}
	out := new(ManifestInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManifestObservation) DeepCopyInto(out *ManifestObservation) {
	*out = *in
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManifestObservation.
func (in *ManifestObservation) DeepCopy() *ManifestObservation {
	if in == nil {
		return nil
	}
	out := new(ManifestObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManifestParameters) DeepCopyInto(out *ManifestParameters) {
	*out = *in
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManifestParameters.
func (in *ManifestParameters) DeepCopy() *ManifestParameters {
	if in == nil {
		return nil
	}
	out := new(ManifestParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NamespacesInitParameters) DeepCopyInto(out *NamespacesInitParameters) {
	*out = *in
	if in.ImagesBlacklist != nil {
		in, out := &in.ImagesBlacklist, &out.ImagesBlacklist
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ResourceAllocation != nil {
		in, out := &in.ResourceAllocation, &out.ResourceAllocation
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NamespacesInitParameters.
func (in *NamespacesInitParameters) DeepCopy() *NamespacesInitParameters {
	if in == nil {
		return nil
	}
	out := new(NamespacesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NamespacesObservation) DeepCopyInto(out *NamespacesObservation) {
	*out = *in
	if in.ImagesBlacklist != nil {
		in, out := &in.ImagesBlacklist, &out.ImagesBlacklist
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ResourceAllocation != nil {
		in, out := &in.ResourceAllocation, &out.ResourceAllocation
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NamespacesObservation.
func (in *NamespacesObservation) DeepCopy() *NamespacesObservation {
	if in == nil {
		return nil
	}
	out := new(NamespacesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NamespacesParameters) DeepCopyInto(out *NamespacesParameters) {
	*out = *in
	if in.ImagesBlacklist != nil {
		in, out := &in.ImagesBlacklist, &out.ImagesBlacklist
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ResourceAllocation != nil {
		in, out := &in.ResourceAllocation, &out.ResourceAllocation
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NamespacesParameters.
func (in *NamespacesParameters) DeepCopy() *NamespacesParameters {
	if in == nil {
		return nil
	}
	out := new(NamespacesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeInitParameters) DeepCopyInto(out *NodeInitParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.NodeID != nil {
		in, out := &in.NodeID, &out.NodeID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeInitParameters.
func (in *NodeInitParameters) DeepCopy() *NodeInitParameters {
	if in == nil {
		return nil
	}
	out := new(NodeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeObservation) DeepCopyInto(out *NodeObservation) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.NodeID != nil {
		in, out := &in.NodeID, &out.NodeID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeObservation.
func (in *NodeObservation) DeepCopy() *NodeObservation {
	if in == nil {
		return nil
	}
	out := new(NodeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeParameters) DeepCopyInto(out *NodeParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.NodeID != nil {
		in, out := &in.NodeID, &out.NodeID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeParameters.
func (in *NodeParameters) DeepCopy() *NodeParameters {
	if in == nil {
		return nil
	}
	out := new(NodeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Openstack) DeepCopyInto(out *Openstack) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Openstack.
func (in *Openstack) DeepCopy() *Openstack {
	if in == nil {
		return nil
	}
	out := new(Openstack)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Openstack) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenstackBackupPolicyInitParameters) DeepCopyInto(out *OpenstackBackupPolicyInitParameters) {
	*out = *in
	if in.BackupLocationID != nil {
		in, out := &in.BackupLocationID, &out.BackupLocationID
		*out = new(string)
		**out = **in
	}
	if in.ClusterUids != nil {
		in, out := &in.ClusterUids, &out.ClusterUids
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExpiryInHour != nil {
		in, out := &in.ExpiryInHour, &out.ExpiryInHour
		*out = new(float64)
		**out = **in
	}
	if in.IncludeAllClusters != nil {
		in, out := &in.IncludeAllClusters, &out.IncludeAllClusters
		*out = new(bool)
		**out = **in
	}
	if in.IncludeClusterResources != nil {
		in, out := &in.IncludeClusterResources, &out.IncludeClusterResources
		*out = new(bool)
		**out = **in
	}
	if in.IncludeDisks != nil {
		in, out := &in.IncludeDisks, &out.IncludeDisks
		*out = new(bool)
		**out = **in
	}
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenstackBackupPolicyInitParameters.
func (in *OpenstackBackupPolicyInitParameters) DeepCopy() *OpenstackBackupPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(OpenstackBackupPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenstackBackupPolicyObservation) DeepCopyInto(out *OpenstackBackupPolicyObservation) {
	*out = *in
	if in.BackupLocationID != nil {
		in, out := &in.BackupLocationID, &out.BackupLocationID
		*out = new(string)
		**out = **in
	}
	if in.ClusterUids != nil {
		in, out := &in.ClusterUids, &out.ClusterUids
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExpiryInHour != nil {
		in, out := &in.ExpiryInHour, &out.ExpiryInHour
		*out = new(float64)
		**out = **in
	}
	if in.IncludeAllClusters != nil {
		in, out := &in.IncludeAllClusters, &out.IncludeAllClusters
		*out = new(bool)
		**out = **in
	}
	if in.IncludeClusterResources != nil {
		in, out := &in.IncludeClusterResources, &out.IncludeClusterResources
		*out = new(bool)
		**out = **in
	}
	if in.IncludeDisks != nil {
		in, out := &in.IncludeDisks, &out.IncludeDisks
		*out = new(bool)
		**out = **in
	}
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenstackBackupPolicyObservation.
func (in *OpenstackBackupPolicyObservation) DeepCopy() *OpenstackBackupPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(OpenstackBackupPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenstackBackupPolicyParameters) DeepCopyInto(out *OpenstackBackupPolicyParameters) {
	*out = *in
	if in.BackupLocationID != nil {
		in, out := &in.BackupLocationID, &out.BackupLocationID
		*out = new(string)
		**out = **in
	}
	if in.ClusterUids != nil {
		in, out := &in.ClusterUids, &out.ClusterUids
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExpiryInHour != nil {
		in, out := &in.ExpiryInHour, &out.ExpiryInHour
		*out = new(float64)
		**out = **in
	}
	if in.IncludeAllClusters != nil {
		in, out := &in.IncludeAllClusters, &out.IncludeAllClusters
		*out = new(bool)
		**out = **in
	}
	if in.IncludeClusterResources != nil {
		in, out := &in.IncludeClusterResources, &out.IncludeClusterResources
		*out = new(bool)
		**out = **in
	}
	if in.IncludeDisks != nil {
		in, out := &in.IncludeDisks, &out.IncludeDisks
		*out = new(bool)
		**out = **in
	}
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenstackBackupPolicyParameters.
func (in *OpenstackBackupPolicyParameters) DeepCopy() *OpenstackBackupPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(OpenstackBackupPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenstackCloudConfigInitParameters) DeepCopyInto(out *OpenstackCloudConfigInitParameters) {
	*out = *in
	if in.DNSServers != nil {
		in, out := &in.DNSServers, &out.DNSServers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Domain != nil {
		in, out := &in.Domain, &out.Domain
		*out = new(string)
		**out = **in
	}
	if in.NetworkID != nil {
		in, out := &in.NetworkID, &out.NetworkID
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SSHKey != nil {
		in, out := &in.SSHKey, &out.SSHKey
		*out = new(string)
		**out = **in
	}
	if in.SubnetCidr != nil {
		in, out := &in.SubnetCidr, &out.SubnetCidr
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenstackCloudConfigInitParameters.
func (in *OpenstackCloudConfigInitParameters) DeepCopy() *OpenstackCloudConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(OpenstackCloudConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenstackCloudConfigObservation) DeepCopyInto(out *OpenstackCloudConfigObservation) {
	*out = *in
	if in.DNSServers != nil {
		in, out := &in.DNSServers, &out.DNSServers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Domain != nil {
		in, out := &in.Domain, &out.Domain
		*out = new(string)
		**out = **in
	}
	if in.NetworkID != nil {
		in, out := &in.NetworkID, &out.NetworkID
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SSHKey != nil {
		in, out := &in.SSHKey, &out.SSHKey
		*out = new(string)
		**out = **in
	}
	if in.SubnetCidr != nil {
		in, out := &in.SubnetCidr, &out.SubnetCidr
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenstackCloudConfigObservation.
func (in *OpenstackCloudConfigObservation) DeepCopy() *OpenstackCloudConfigObservation {
	if in == nil {
		return nil
	}
	out := new(OpenstackCloudConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenstackCloudConfigParameters) DeepCopyInto(out *OpenstackCloudConfigParameters) {
	*out = *in
	if in.DNSServers != nil {
		in, out := &in.DNSServers, &out.DNSServers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Domain != nil {
		in, out := &in.Domain, &out.Domain
		*out = new(string)
		**out = **in
	}
	if in.NetworkID != nil {
		in, out := &in.NetworkID, &out.NetworkID
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SSHKey != nil {
		in, out := &in.SSHKey, &out.SSHKey
		*out = new(string)
		**out = **in
	}
	if in.SubnetCidr != nil {
		in, out := &in.SubnetCidr, &out.SubnetCidr
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenstackCloudConfigParameters.
func (in *OpenstackCloudConfigParameters) DeepCopy() *OpenstackCloudConfigParameters {
	if in == nil {
		return nil
	}
	out := new(OpenstackCloudConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenstackClusterProfileInitParameters) DeepCopyInto(out *OpenstackClusterProfileInitParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Pack != nil {
		in, out := &in.Pack, &out.Pack
		*out = make([]OpenstackClusterProfilePackInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenstackClusterProfileInitParameters.
func (in *OpenstackClusterProfileInitParameters) DeepCopy() *OpenstackClusterProfileInitParameters {
	if in == nil {
		return nil
	}
	out := new(OpenstackClusterProfileInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenstackClusterProfileObservation) DeepCopyInto(out *OpenstackClusterProfileObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Pack != nil {
		in, out := &in.Pack, &out.Pack
		*out = make([]OpenstackClusterProfilePackObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenstackClusterProfileObservation.
func (in *OpenstackClusterProfileObservation) DeepCopy() *OpenstackClusterProfileObservation {
	if in == nil {
		return nil
	}
	out := new(OpenstackClusterProfileObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenstackClusterProfilePackInitParameters) DeepCopyInto(out *OpenstackClusterProfilePackInitParameters) {
	*out = *in
	if in.Manifest != nil {
		in, out := &in.Manifest, &out.Manifest
		*out = make([]OpenstackClusterProfilePackManifestInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RegistryUID != nil {
		in, out := &in.RegistryUID, &out.RegistryUID
		*out = new(string)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenstackClusterProfilePackInitParameters.
func (in *OpenstackClusterProfilePackInitParameters) DeepCopy() *OpenstackClusterProfilePackInitParameters {
	if in == nil {
		return nil
	}
	out := new(OpenstackClusterProfilePackInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenstackClusterProfilePackManifestInitParameters) DeepCopyInto(out *OpenstackClusterProfilePackManifestInitParameters) {
	*out = *in
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenstackClusterProfilePackManifestInitParameters.
func (in *OpenstackClusterProfilePackManifestInitParameters) DeepCopy() *OpenstackClusterProfilePackManifestInitParameters {
	if in == nil {
		return nil
	}
	out := new(OpenstackClusterProfilePackManifestInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenstackClusterProfilePackManifestObservation) DeepCopyInto(out *OpenstackClusterProfilePackManifestObservation) {
	*out = *in
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenstackClusterProfilePackManifestObservation.
func (in *OpenstackClusterProfilePackManifestObservation) DeepCopy() *OpenstackClusterProfilePackManifestObservation {
	if in == nil {
		return nil
	}
	out := new(OpenstackClusterProfilePackManifestObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenstackClusterProfilePackManifestParameters) DeepCopyInto(out *OpenstackClusterProfilePackManifestParameters) {
	*out = *in
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenstackClusterProfilePackManifestParameters.
func (in *OpenstackClusterProfilePackManifestParameters) DeepCopy() *OpenstackClusterProfilePackManifestParameters {
	if in == nil {
		return nil
	}
	out := new(OpenstackClusterProfilePackManifestParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenstackClusterProfilePackObservation) DeepCopyInto(out *OpenstackClusterProfilePackObservation) {
	*out = *in
	if in.Manifest != nil {
		in, out := &in.Manifest, &out.Manifest
		*out = make([]OpenstackClusterProfilePackManifestObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RegistryUID != nil {
		in, out := &in.RegistryUID, &out.RegistryUID
		*out = new(string)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenstackClusterProfilePackObservation.
func (in *OpenstackClusterProfilePackObservation) DeepCopy() *OpenstackClusterProfilePackObservation {
	if in == nil {
		return nil
	}
	out := new(OpenstackClusterProfilePackObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenstackClusterProfilePackParameters) DeepCopyInto(out *OpenstackClusterProfilePackParameters) {
	*out = *in
	if in.Manifest != nil {
		in, out := &in.Manifest, &out.Manifest
		*out = make([]OpenstackClusterProfilePackManifestParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RegistryUID != nil {
		in, out := &in.RegistryUID, &out.RegistryUID
		*out = new(string)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenstackClusterProfilePackParameters.
func (in *OpenstackClusterProfilePackParameters) DeepCopy() *OpenstackClusterProfilePackParameters {
	if in == nil {
		return nil
	}
	out := new(OpenstackClusterProfilePackParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenstackClusterProfileParameters) DeepCopyInto(out *OpenstackClusterProfileParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Pack != nil {
		in, out := &in.Pack, &out.Pack
		*out = make([]OpenstackClusterProfilePackParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenstackClusterProfileParameters.
func (in *OpenstackClusterProfileParameters) DeepCopy() *OpenstackClusterProfileParameters {
	if in == nil {
		return nil
	}
	out := new(OpenstackClusterProfileParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenstackClusterRbacBindingInitParameters) DeepCopyInto(out *OpenstackClusterRbacBindingInitParameters) {
	*out = *in
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Subjects != nil {
		in, out := &in.Subjects, &out.Subjects
		*out = make([]OpenstackClusterRbacBindingSubjectsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenstackClusterRbacBindingInitParameters.
func (in *OpenstackClusterRbacBindingInitParameters) DeepCopy() *OpenstackClusterRbacBindingInitParameters {
	if in == nil {
		return nil
	}
	out := new(OpenstackClusterRbacBindingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenstackClusterRbacBindingObservation) DeepCopyInto(out *OpenstackClusterRbacBindingObservation) {
	*out = *in
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Subjects != nil {
		in, out := &in.Subjects, &out.Subjects
		*out = make([]OpenstackClusterRbacBindingSubjectsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenstackClusterRbacBindingObservation.
func (in *OpenstackClusterRbacBindingObservation) DeepCopy() *OpenstackClusterRbacBindingObservation {
	if in == nil {
		return nil
	}
	out := new(OpenstackClusterRbacBindingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenstackClusterRbacBindingParameters) DeepCopyInto(out *OpenstackClusterRbacBindingParameters) {
	*out = *in
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Subjects != nil {
		in, out := &in.Subjects, &out.Subjects
		*out = make([]OpenstackClusterRbacBindingSubjectsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenstackClusterRbacBindingParameters.
func (in *OpenstackClusterRbacBindingParameters) DeepCopy() *OpenstackClusterRbacBindingParameters {
	if in == nil {
		return nil
	}
	out := new(OpenstackClusterRbacBindingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenstackClusterRbacBindingSubjectsInitParameters) DeepCopyInto(out *OpenstackClusterRbacBindingSubjectsInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenstackClusterRbacBindingSubjectsInitParameters.
func (in *OpenstackClusterRbacBindingSubjectsInitParameters) DeepCopy() *OpenstackClusterRbacBindingSubjectsInitParameters {
	if in == nil {
		return nil
	}
	out := new(OpenstackClusterRbacBindingSubjectsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenstackClusterRbacBindingSubjectsObservation) DeepCopyInto(out *OpenstackClusterRbacBindingSubjectsObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenstackClusterRbacBindingSubjectsObservation.
func (in *OpenstackClusterRbacBindingSubjectsObservation) DeepCopy() *OpenstackClusterRbacBindingSubjectsObservation {
	if in == nil {
		return nil
	}
	out := new(OpenstackClusterRbacBindingSubjectsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenstackClusterRbacBindingSubjectsParameters) DeepCopyInto(out *OpenstackClusterRbacBindingSubjectsParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenstackClusterRbacBindingSubjectsParameters.
func (in *OpenstackClusterRbacBindingSubjectsParameters) DeepCopy() *OpenstackClusterRbacBindingSubjectsParameters {
	if in == nil {
		return nil
	}
	out := new(OpenstackClusterRbacBindingSubjectsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenstackHostConfigInitParameters) DeepCopyInto(out *OpenstackHostConfigInitParameters) {
	*out = *in
	if in.ExternalTrafficPolicy != nil {
		in, out := &in.ExternalTrafficPolicy, &out.ExternalTrafficPolicy
		*out = new(string)
		**out = **in
	}
	if in.HostEndpointType != nil {
		in, out := &in.HostEndpointType, &out.HostEndpointType
		*out = new(string)
		**out = **in
	}
	if in.IngressHost != nil {
		in, out := &in.IngressHost, &out.IngressHost
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancerSourceRanges != nil {
		in, out := &in.LoadBalancerSourceRanges, &out.LoadBalancerSourceRanges
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenstackHostConfigInitParameters.
func (in *OpenstackHostConfigInitParameters) DeepCopy() *OpenstackHostConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(OpenstackHostConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenstackHostConfigObservation) DeepCopyInto(out *OpenstackHostConfigObservation) {
	*out = *in
	if in.ExternalTrafficPolicy != nil {
		in, out := &in.ExternalTrafficPolicy, &out.ExternalTrafficPolicy
		*out = new(string)
		**out = **in
	}
	if in.HostEndpointType != nil {
		in, out := &in.HostEndpointType, &out.HostEndpointType
		*out = new(string)
		**out = **in
	}
	if in.IngressHost != nil {
		in, out := &in.IngressHost, &out.IngressHost
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancerSourceRanges != nil {
		in, out := &in.LoadBalancerSourceRanges, &out.LoadBalancerSourceRanges
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenstackHostConfigObservation.
func (in *OpenstackHostConfigObservation) DeepCopy() *OpenstackHostConfigObservation {
	if in == nil {
		return nil
	}
	out := new(OpenstackHostConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenstackHostConfigParameters) DeepCopyInto(out *OpenstackHostConfigParameters) {
	*out = *in
	if in.ExternalTrafficPolicy != nil {
		in, out := &in.ExternalTrafficPolicy, &out.ExternalTrafficPolicy
		*out = new(string)
		**out = **in
	}
	if in.HostEndpointType != nil {
		in, out := &in.HostEndpointType, &out.HostEndpointType
		*out = new(string)
		**out = **in
	}
	if in.IngressHost != nil {
		in, out := &in.IngressHost, &out.IngressHost
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancerSourceRanges != nil {
		in, out := &in.LoadBalancerSourceRanges, &out.LoadBalancerSourceRanges
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenstackHostConfigParameters.
func (in *OpenstackHostConfigParameters) DeepCopy() *OpenstackHostConfigParameters {
	if in == nil {
		return nil
	}
	out := new(OpenstackHostConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenstackInitParameters) DeepCopyInto(out *OpenstackInitParameters) {
	*out = *in
	if in.ApplySetting != nil {
		in, out := &in.ApplySetting, &out.ApplySetting
		*out = new(string)
		**out = **in
	}
	if in.BackupPolicy != nil {
		in, out := &in.BackupPolicy, &out.BackupPolicy
		*out = make([]OpenstackBackupPolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CloudAccountID != nil {
		in, out := &in.CloudAccountID, &out.CloudAccountID
		*out = new(string)
		**out = **in
	}
	if in.CloudConfig != nil {
		in, out := &in.CloudConfig, &out.CloudConfig
		*out = make([]OpenstackCloudConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterMetaAttribute != nil {
		in, out := &in.ClusterMetaAttribute, &out.ClusterMetaAttribute
		*out = new(string)
		**out = **in
	}
	if in.ClusterProfile != nil {
		in, out := &in.ClusterProfile, &out.ClusterProfile
		*out = make([]OpenstackClusterProfileInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterRbacBinding != nil {
		in, out := &in.ClusterRbacBinding, &out.ClusterRbacBinding
		*out = make([]OpenstackClusterRbacBindingInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Context != nil {
		in, out := &in.Context, &out.Context
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ForceDelete != nil {
		in, out := &in.ForceDelete, &out.ForceDelete
		*out = new(bool)
		**out = **in
	}
	if in.ForceDeleteDelay != nil {
		in, out := &in.ForceDeleteDelay, &out.ForceDeleteDelay
		*out = new(float64)
		**out = **in
	}
	if in.HostConfig != nil {
		in, out := &in.HostConfig, &out.HostConfig
		*out = make([]OpenstackHostConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LocationConfig != nil {
		in, out := &in.LocationConfig, &out.LocationConfig
		*out = make([]OpenstackLocationConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MachinePool != nil {
		in, out := &in.MachinePool, &out.MachinePool
		*out = make([]OpenstackMachinePoolInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]OpenstackNamespacesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OsPatchAfter != nil {
		in, out := &in.OsPatchAfter, &out.OsPatchAfter
		*out = new(string)
		**out = **in
	}
	if in.OsPatchOnBoot != nil {
		in, out := &in.OsPatchOnBoot, &out.OsPatchOnBoot
		*out = new(bool)
		**out = **in
	}
	if in.OsPatchSchedule != nil {
		in, out := &in.OsPatchSchedule, &out.OsPatchSchedule
		*out = new(string)
		**out = **in
	}
	if in.PauseAgentUpgrades != nil {
		in, out := &in.PauseAgentUpgrades, &out.PauseAgentUpgrades
		*out = new(string)
		**out = **in
	}
	if in.ReviewRepaveState != nil {
		in, out := &in.ReviewRepaveState, &out.ReviewRepaveState
		*out = new(string)
		**out = **in
	}
	if in.ScanPolicy != nil {
		in, out := &in.ScanPolicy, &out.ScanPolicy
		*out = make([]OpenstackScanPolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SkipCompletion != nil {
		in, out := &in.SkipCompletion, &out.SkipCompletion
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenstackInitParameters.
func (in *OpenstackInitParameters) DeepCopy() *OpenstackInitParameters {
	if in == nil {
		return nil
	}
	out := new(OpenstackInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenstackList) DeepCopyInto(out *OpenstackList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Openstack, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenstackList.
func (in *OpenstackList) DeepCopy() *OpenstackList {
	if in == nil {
		return nil
	}
	out := new(OpenstackList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *OpenstackList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenstackLocationConfigInitParameters) DeepCopyInto(out *OpenstackLocationConfigInitParameters) {
	*out = *in
	if in.CountryCode != nil {
		in, out := &in.CountryCode, &out.CountryCode
		*out = new(string)
		**out = **in
	}
	if in.CountryName != nil {
		in, out := &in.CountryName, &out.CountryName
		*out = new(string)
		**out = **in
	}
	if in.Latitude != nil {
		in, out := &in.Latitude, &out.Latitude
		*out = new(float64)
		**out = **in
	}
	if in.Longitude != nil {
		in, out := &in.Longitude, &out.Longitude
		*out = new(float64)
		**out = **in
	}
	if in.RegionCode != nil {
		in, out := &in.RegionCode, &out.RegionCode
		*out = new(string)
		**out = **in
	}
	if in.RegionName != nil {
		in, out := &in.RegionName, &out.RegionName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenstackLocationConfigInitParameters.
func (in *OpenstackLocationConfigInitParameters) DeepCopy() *OpenstackLocationConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(OpenstackLocationConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenstackLocationConfigObservation) DeepCopyInto(out *OpenstackLocationConfigObservation) {
	*out = *in
	if in.CountryCode != nil {
		in, out := &in.CountryCode, &out.CountryCode
		*out = new(string)
		**out = **in
	}
	if in.CountryName != nil {
		in, out := &in.CountryName, &out.CountryName
		*out = new(string)
		**out = **in
	}
	if in.Latitude != nil {
		in, out := &in.Latitude, &out.Latitude
		*out = new(float64)
		**out = **in
	}
	if in.Longitude != nil {
		in, out := &in.Longitude, &out.Longitude
		*out = new(float64)
		**out = **in
	}
	if in.RegionCode != nil {
		in, out := &in.RegionCode, &out.RegionCode
		*out = new(string)
		**out = **in
	}
	if in.RegionName != nil {
		in, out := &in.RegionName, &out.RegionName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenstackLocationConfigObservation.
func (in *OpenstackLocationConfigObservation) DeepCopy() *OpenstackLocationConfigObservation {
	if in == nil {
		return nil
	}
	out := new(OpenstackLocationConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenstackLocationConfigParameters) DeepCopyInto(out *OpenstackLocationConfigParameters) {
	*out = *in
	if in.CountryCode != nil {
		in, out := &in.CountryCode, &out.CountryCode
		*out = new(string)
		**out = **in
	}
	if in.CountryName != nil {
		in, out := &in.CountryName, &out.CountryName
		*out = new(string)
		**out = **in
	}
	if in.Latitude != nil {
		in, out := &in.Latitude, &out.Latitude
		*out = new(float64)
		**out = **in
	}
	if in.Longitude != nil {
		in, out := &in.Longitude, &out.Longitude
		*out = new(float64)
		**out = **in
	}
	if in.RegionCode != nil {
		in, out := &in.RegionCode, &out.RegionCode
		*out = new(string)
		**out = **in
	}
	if in.RegionName != nil {
		in, out := &in.RegionName, &out.RegionName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenstackLocationConfigParameters.
func (in *OpenstackLocationConfigParameters) DeepCopy() *OpenstackLocationConfigParameters {
	if in == nil {
		return nil
	}
	out := new(OpenstackLocationConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenstackMachinePoolInitParameters) DeepCopyInto(out *OpenstackMachinePoolInitParameters) {
	*out = *in
	if in.AdditionalLabels != nil {
		in, out := &in.AdditionalLabels, &out.AdditionalLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Azs != nil {
		in, out := &in.Azs, &out.Azs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ControlPlane != nil {
		in, out := &in.ControlPlane, &out.ControlPlane
		*out = new(bool)
		**out = **in
	}
	if in.ControlPlaneAsWorker != nil {
		in, out := &in.ControlPlaneAsWorker, &out.ControlPlaneAsWorker
		*out = new(bool)
		**out = **in
	}
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Node != nil {
		in, out := &in.Node, &out.Node
		*out = make([]OpenstackMachinePoolNodeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NodeRepaveInterval != nil {
		in, out := &in.NodeRepaveInterval, &out.NodeRepaveInterval
		*out = new(float64)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.Taints != nil {
		in, out := &in.Taints, &out.Taints
		*out = make([]OpenstackMachinePoolTaintsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UpdateStrategy != nil {
		in, out := &in.UpdateStrategy, &out.UpdateStrategy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenstackMachinePoolInitParameters.
func (in *OpenstackMachinePoolInitParameters) DeepCopy() *OpenstackMachinePoolInitParameters {
	if in == nil {
		return nil
	}
	out := new(OpenstackMachinePoolInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenstackMachinePoolNodeInitParameters) DeepCopyInto(out *OpenstackMachinePoolNodeInitParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.NodeID != nil {
		in, out := &in.NodeID, &out.NodeID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenstackMachinePoolNodeInitParameters.
func (in *OpenstackMachinePoolNodeInitParameters) DeepCopy() *OpenstackMachinePoolNodeInitParameters {
	if in == nil {
		return nil
	}
	out := new(OpenstackMachinePoolNodeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenstackMachinePoolNodeObservation) DeepCopyInto(out *OpenstackMachinePoolNodeObservation) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.NodeID != nil {
		in, out := &in.NodeID, &out.NodeID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenstackMachinePoolNodeObservation.
func (in *OpenstackMachinePoolNodeObservation) DeepCopy() *OpenstackMachinePoolNodeObservation {
	if in == nil {
		return nil
	}
	out := new(OpenstackMachinePoolNodeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenstackMachinePoolNodeParameters) DeepCopyInto(out *OpenstackMachinePoolNodeParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.NodeID != nil {
		in, out := &in.NodeID, &out.NodeID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenstackMachinePoolNodeParameters.
func (in *OpenstackMachinePoolNodeParameters) DeepCopy() *OpenstackMachinePoolNodeParameters {
	if in == nil {
		return nil
	}
	out := new(OpenstackMachinePoolNodeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenstackMachinePoolObservation) DeepCopyInto(out *OpenstackMachinePoolObservation) {
	*out = *in
	if in.AdditionalLabels != nil {
		in, out := &in.AdditionalLabels, &out.AdditionalLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Azs != nil {
		in, out := &in.Azs, &out.Azs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ControlPlane != nil {
		in, out := &in.ControlPlane, &out.ControlPlane
		*out = new(bool)
		**out = **in
	}
	if in.ControlPlaneAsWorker != nil {
		in, out := &in.ControlPlaneAsWorker, &out.ControlPlaneAsWorker
		*out = new(bool)
		**out = **in
	}
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Node != nil {
		in, out := &in.Node, &out.Node
		*out = make([]OpenstackMachinePoolNodeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NodeRepaveInterval != nil {
		in, out := &in.NodeRepaveInterval, &out.NodeRepaveInterval
		*out = new(float64)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.Taints != nil {
		in, out := &in.Taints, &out.Taints
		*out = make([]OpenstackMachinePoolTaintsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UpdateStrategy != nil {
		in, out := &in.UpdateStrategy, &out.UpdateStrategy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenstackMachinePoolObservation.
func (in *OpenstackMachinePoolObservation) DeepCopy() *OpenstackMachinePoolObservation {
	if in == nil {
		return nil
	}
	out := new(OpenstackMachinePoolObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenstackMachinePoolParameters) DeepCopyInto(out *OpenstackMachinePoolParameters) {
	*out = *in
	if in.AdditionalLabels != nil {
		in, out := &in.AdditionalLabels, &out.AdditionalLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Azs != nil {
		in, out := &in.Azs, &out.Azs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ControlPlane != nil {
		in, out := &in.ControlPlane, &out.ControlPlane
		*out = new(bool)
		**out = **in
	}
	if in.ControlPlaneAsWorker != nil {
		in, out := &in.ControlPlaneAsWorker, &out.ControlPlaneAsWorker
		*out = new(bool)
		**out = **in
	}
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Node != nil {
		in, out := &in.Node, &out.Node
		*out = make([]OpenstackMachinePoolNodeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NodeRepaveInterval != nil {
		in, out := &in.NodeRepaveInterval, &out.NodeRepaveInterval
		*out = new(float64)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.Taints != nil {
		in, out := &in.Taints, &out.Taints
		*out = make([]OpenstackMachinePoolTaintsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UpdateStrategy != nil {
		in, out := &in.UpdateStrategy, &out.UpdateStrategy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenstackMachinePoolParameters.
func (in *OpenstackMachinePoolParameters) DeepCopy() *OpenstackMachinePoolParameters {
	if in == nil {
		return nil
	}
	out := new(OpenstackMachinePoolParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenstackMachinePoolTaintsInitParameters) DeepCopyInto(out *OpenstackMachinePoolTaintsInitParameters) {
	*out = *in
	if in.Effect != nil {
		in, out := &in.Effect, &out.Effect
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenstackMachinePoolTaintsInitParameters.
func (in *OpenstackMachinePoolTaintsInitParameters) DeepCopy() *OpenstackMachinePoolTaintsInitParameters {
	if in == nil {
		return nil
	}
	out := new(OpenstackMachinePoolTaintsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenstackMachinePoolTaintsObservation) DeepCopyInto(out *OpenstackMachinePoolTaintsObservation) {
	*out = *in
	if in.Effect != nil {
		in, out := &in.Effect, &out.Effect
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenstackMachinePoolTaintsObservation.
func (in *OpenstackMachinePoolTaintsObservation) DeepCopy() *OpenstackMachinePoolTaintsObservation {
	if in == nil {
		return nil
	}
	out := new(OpenstackMachinePoolTaintsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenstackMachinePoolTaintsParameters) DeepCopyInto(out *OpenstackMachinePoolTaintsParameters) {
	*out = *in
	if in.Effect != nil {
		in, out := &in.Effect, &out.Effect
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenstackMachinePoolTaintsParameters.
func (in *OpenstackMachinePoolTaintsParameters) DeepCopy() *OpenstackMachinePoolTaintsParameters {
	if in == nil {
		return nil
	}
	out := new(OpenstackMachinePoolTaintsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenstackNamespacesInitParameters) DeepCopyInto(out *OpenstackNamespacesInitParameters) {
	*out = *in
	if in.ImagesBlacklist != nil {
		in, out := &in.ImagesBlacklist, &out.ImagesBlacklist
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ResourceAllocation != nil {
		in, out := &in.ResourceAllocation, &out.ResourceAllocation
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenstackNamespacesInitParameters.
func (in *OpenstackNamespacesInitParameters) DeepCopy() *OpenstackNamespacesInitParameters {
	if in == nil {
		return nil
	}
	out := new(OpenstackNamespacesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenstackNamespacesObservation) DeepCopyInto(out *OpenstackNamespacesObservation) {
	*out = *in
	if in.ImagesBlacklist != nil {
		in, out := &in.ImagesBlacklist, &out.ImagesBlacklist
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ResourceAllocation != nil {
		in, out := &in.ResourceAllocation, &out.ResourceAllocation
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenstackNamespacesObservation.
func (in *OpenstackNamespacesObservation) DeepCopy() *OpenstackNamespacesObservation {
	if in == nil {
		return nil
	}
	out := new(OpenstackNamespacesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenstackNamespacesParameters) DeepCopyInto(out *OpenstackNamespacesParameters) {
	*out = *in
	if in.ImagesBlacklist != nil {
		in, out := &in.ImagesBlacklist, &out.ImagesBlacklist
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ResourceAllocation != nil {
		in, out := &in.ResourceAllocation, &out.ResourceAllocation
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenstackNamespacesParameters.
func (in *OpenstackNamespacesParameters) DeepCopy() *OpenstackNamespacesParameters {
	if in == nil {
		return nil
	}
	out := new(OpenstackNamespacesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenstackObservation) DeepCopyInto(out *OpenstackObservation) {
	*out = *in
	if in.AdminKubeConfig != nil {
		in, out := &in.AdminKubeConfig, &out.AdminKubeConfig
		*out = new(string)
		**out = **in
	}
	if in.ApplySetting != nil {
		in, out := &in.ApplySetting, &out.ApplySetting
		*out = new(string)
		**out = **in
	}
	if in.BackupPolicy != nil {
		in, out := &in.BackupPolicy, &out.BackupPolicy
		*out = make([]OpenstackBackupPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CloudAccountID != nil {
		in, out := &in.CloudAccountID, &out.CloudAccountID
		*out = new(string)
		**out = **in
	}
	if in.CloudConfig != nil {
		in, out := &in.CloudConfig, &out.CloudConfig
		*out = make([]OpenstackCloudConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CloudConfigID != nil {
		in, out := &in.CloudConfigID, &out.CloudConfigID
		*out = new(string)
		**out = **in
	}
	if in.ClusterMetaAttribute != nil {
		in, out := &in.ClusterMetaAttribute, &out.ClusterMetaAttribute
		*out = new(string)
		**out = **in
	}
	if in.ClusterProfile != nil {
		in, out := &in.ClusterProfile, &out.ClusterProfile
		*out = make([]OpenstackClusterProfileObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterRbacBinding != nil {
		in, out := &in.ClusterRbacBinding, &out.ClusterRbacBinding
		*out = make([]OpenstackClusterRbacBindingObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Context != nil {
		in, out := &in.Context, &out.Context
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ForceDelete != nil {
		in, out := &in.ForceDelete, &out.ForceDelete
		*out = new(bool)
		**out = **in
	}
	if in.ForceDeleteDelay != nil {
		in, out := &in.ForceDeleteDelay, &out.ForceDeleteDelay
		*out = new(float64)
		**out = **in
	}
	if in.HostConfig != nil {
		in, out := &in.HostConfig, &out.HostConfig
		*out = make([]OpenstackHostConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Kubeconfig != nil {
		in, out := &in.Kubeconfig, &out.Kubeconfig
		*out = new(string)
		**out = **in
	}
	if in.LocationConfig != nil {
		in, out := &in.LocationConfig, &out.LocationConfig
		*out = make([]OpenstackLocationConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MachinePool != nil {
		in, out := &in.MachinePool, &out.MachinePool
		*out = make([]OpenstackMachinePoolObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]OpenstackNamespacesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OsPatchAfter != nil {
		in, out := &in.OsPatchAfter, &out.OsPatchAfter
		*out = new(string)
		**out = **in
	}
	if in.OsPatchOnBoot != nil {
		in, out := &in.OsPatchOnBoot, &out.OsPatchOnBoot
		*out = new(bool)
		**out = **in
	}
	if in.OsPatchSchedule != nil {
		in, out := &in.OsPatchSchedule, &out.OsPatchSchedule
		*out = new(string)
		**out = **in
	}
	if in.PauseAgentUpgrades != nil {
		in, out := &in.PauseAgentUpgrades, &out.PauseAgentUpgrades
		*out = new(string)
		**out = **in
	}
	if in.ReviewRepaveState != nil {
		in, out := &in.ReviewRepaveState, &out.ReviewRepaveState
		*out = new(string)
		**out = **in
	}
	if in.ScanPolicy != nil {
		in, out := &in.ScanPolicy, &out.ScanPolicy
		*out = make([]OpenstackScanPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SkipCompletion != nil {
		in, out := &in.SkipCompletion, &out.SkipCompletion
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenstackObservation.
func (in *OpenstackObservation) DeepCopy() *OpenstackObservation {
	if in == nil {
		return nil
	}
	out := new(OpenstackObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenstackParameters) DeepCopyInto(out *OpenstackParameters) {
	*out = *in
	if in.ApplySetting != nil {
		in, out := &in.ApplySetting, &out.ApplySetting
		*out = new(string)
		**out = **in
	}
	if in.BackupPolicy != nil {
		in, out := &in.BackupPolicy, &out.BackupPolicy
		*out = make([]OpenstackBackupPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CloudAccountID != nil {
		in, out := &in.CloudAccountID, &out.CloudAccountID
		*out = new(string)
		**out = **in
	}
	if in.CloudConfig != nil {
		in, out := &in.CloudConfig, &out.CloudConfig
		*out = make([]OpenstackCloudConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterMetaAttribute != nil {
		in, out := &in.ClusterMetaAttribute, &out.ClusterMetaAttribute
		*out = new(string)
		**out = **in
	}
	if in.ClusterProfile != nil {
		in, out := &in.ClusterProfile, &out.ClusterProfile
		*out = make([]OpenstackClusterProfileParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterRbacBinding != nil {
		in, out := &in.ClusterRbacBinding, &out.ClusterRbacBinding
		*out = make([]OpenstackClusterRbacBindingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Context != nil {
		in, out := &in.Context, &out.Context
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ForceDelete != nil {
		in, out := &in.ForceDelete, &out.ForceDelete
		*out = new(bool)
		**out = **in
	}
	if in.ForceDeleteDelay != nil {
		in, out := &in.ForceDeleteDelay, &out.ForceDeleteDelay
		*out = new(float64)
		**out = **in
	}
	if in.HostConfig != nil {
		in, out := &in.HostConfig, &out.HostConfig
		*out = make([]OpenstackHostConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LocationConfig != nil {
		in, out := &in.LocationConfig, &out.LocationConfig
		*out = make([]OpenstackLocationConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MachinePool != nil {
		in, out := &in.MachinePool, &out.MachinePool
		*out = make([]OpenstackMachinePoolParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]OpenstackNamespacesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OsPatchAfter != nil {
		in, out := &in.OsPatchAfter, &out.OsPatchAfter
		*out = new(string)
		**out = **in
	}
	if in.OsPatchOnBoot != nil {
		in, out := &in.OsPatchOnBoot, &out.OsPatchOnBoot
		*out = new(bool)
		**out = **in
	}
	if in.OsPatchSchedule != nil {
		in, out := &in.OsPatchSchedule, &out.OsPatchSchedule
		*out = new(string)
		**out = **in
	}
	if in.PauseAgentUpgrades != nil {
		in, out := &in.PauseAgentUpgrades, &out.PauseAgentUpgrades
		*out = new(string)
		**out = **in
	}
	if in.ReviewRepaveState != nil {
		in, out := &in.ReviewRepaveState, &out.ReviewRepaveState
		*out = new(string)
		**out = **in
	}
	if in.ScanPolicy != nil {
		in, out := &in.ScanPolicy, &out.ScanPolicy
		*out = make([]OpenstackScanPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SkipCompletion != nil {
		in, out := &in.SkipCompletion, &out.SkipCompletion
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenstackParameters.
func (in *OpenstackParameters) DeepCopy() *OpenstackParameters {
	if in == nil {
		return nil
	}
	out := new(OpenstackParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenstackScanPolicyInitParameters) DeepCopyInto(out *OpenstackScanPolicyInitParameters) {
	*out = *in
	if in.ConfigurationScanSchedule != nil {
		in, out := &in.ConfigurationScanSchedule, &out.ConfigurationScanSchedule
		*out = new(string)
		**out = **in
	}
	if in.ConformanceScanSchedule != nil {
		in, out := &in.ConformanceScanSchedule, &out.ConformanceScanSchedule
		*out = new(string)
		**out = **in
	}
	if in.PenetrationScanSchedule != nil {
		in, out := &in.PenetrationScanSchedule, &out.PenetrationScanSchedule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenstackScanPolicyInitParameters.
func (in *OpenstackScanPolicyInitParameters) DeepCopy() *OpenstackScanPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(OpenstackScanPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenstackScanPolicyObservation) DeepCopyInto(out *OpenstackScanPolicyObservation) {
	*out = *in
	if in.ConfigurationScanSchedule != nil {
		in, out := &in.ConfigurationScanSchedule, &out.ConfigurationScanSchedule
		*out = new(string)
		**out = **in
	}
	if in.ConformanceScanSchedule != nil {
		in, out := &in.ConformanceScanSchedule, &out.ConformanceScanSchedule
		*out = new(string)
		**out = **in
	}
	if in.PenetrationScanSchedule != nil {
		in, out := &in.PenetrationScanSchedule, &out.PenetrationScanSchedule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenstackScanPolicyObservation.
func (in *OpenstackScanPolicyObservation) DeepCopy() *OpenstackScanPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(OpenstackScanPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenstackScanPolicyParameters) DeepCopyInto(out *OpenstackScanPolicyParameters) {
	*out = *in
	if in.ConfigurationScanSchedule != nil {
		in, out := &in.ConfigurationScanSchedule, &out.ConfigurationScanSchedule
		*out = new(string)
		**out = **in
	}
	if in.ConformanceScanSchedule != nil {
		in, out := &in.ConformanceScanSchedule, &out.ConformanceScanSchedule
		*out = new(string)
		**out = **in
	}
	if in.PenetrationScanSchedule != nil {
		in, out := &in.PenetrationScanSchedule, &out.PenetrationScanSchedule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenstackScanPolicyParameters.
func (in *OpenstackScanPolicyParameters) DeepCopy() *OpenstackScanPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(OpenstackScanPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenstackSpec) DeepCopyInto(out *OpenstackSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenstackSpec.
func (in *OpenstackSpec) DeepCopy() *OpenstackSpec {
	if in == nil {
		return nil
	}
	out := new(OpenstackSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenstackStatus) DeepCopyInto(out *OpenstackStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenstackStatus.
func (in *OpenstackStatus) DeepCopy() *OpenstackStatus {
	if in == nil {
		return nil
	}
	out := new(OpenstackStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PackInitParameters) DeepCopyInto(out *PackInitParameters) {
	*out = *in
	if in.Manifest != nil {
		in, out := &in.Manifest, &out.Manifest
		*out = make([]ManifestInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RegistryUID != nil {
		in, out := &in.RegistryUID, &out.RegistryUID
		*out = new(string)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PackInitParameters.
func (in *PackInitParameters) DeepCopy() *PackInitParameters {
	if in == nil {
		return nil
	}
	out := new(PackInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PackManifestInitParameters) DeepCopyInto(out *PackManifestInitParameters) {
	*out = *in
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PackManifestInitParameters.
func (in *PackManifestInitParameters) DeepCopy() *PackManifestInitParameters {
	if in == nil {
		return nil
	}
	out := new(PackManifestInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PackManifestObservation) DeepCopyInto(out *PackManifestObservation) {
	*out = *in
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PackManifestObservation.
func (in *PackManifestObservation) DeepCopy() *PackManifestObservation {
	if in == nil {
		return nil
	}
	out := new(PackManifestObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PackManifestParameters) DeepCopyInto(out *PackManifestParameters) {
	*out = *in
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PackManifestParameters.
func (in *PackManifestParameters) DeepCopy() *PackManifestParameters {
	if in == nil {
		return nil
	}
	out := new(PackManifestParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PackObservation) DeepCopyInto(out *PackObservation) {
	*out = *in
	if in.Manifest != nil {
		in, out := &in.Manifest, &out.Manifest
		*out = make([]ManifestObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RegistryUID != nil {
		in, out := &in.RegistryUID, &out.RegistryUID
		*out = new(string)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PackObservation.
func (in *PackObservation) DeepCopy() *PackObservation {
	if in == nil {
		return nil
	}
	out := new(PackObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PackParameters) DeepCopyInto(out *PackParameters) {
	*out = *in
	if in.Manifest != nil {
		in, out := &in.Manifest, &out.Manifest
		*out = make([]ManifestParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RegistryUID != nil {
		in, out := &in.RegistryUID, &out.RegistryUID
		*out = new(string)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PackParameters.
func (in *PackParameters) DeepCopy() *PackParameters {
	if in == nil {
		return nil
	}
	out := new(PackParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementInitParameters) DeepCopyInto(out *PlacementInitParameters) {
	*out = *in
	if in.Cluster != nil {
		in, out := &in.Cluster, &out.Cluster
		*out = new(string)
		**out = **in
	}
	if in.Datastore != nil {
		in, out := &in.Datastore, &out.Datastore
		*out = new(string)
		**out = **in
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.ResourcePool != nil {
		in, out := &in.ResourcePool, &out.ResourcePool
		*out = new(string)
		**out = **in
	}
	if in.StaticIPPoolID != nil {
		in, out := &in.StaticIPPoolID, &out.StaticIPPoolID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementInitParameters.
func (in *PlacementInitParameters) DeepCopy() *PlacementInitParameters {
	if in == nil {
		return nil
	}
	out := new(PlacementInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementObservation) DeepCopyInto(out *PlacementObservation) {
	*out = *in
	if in.Cluster != nil {
		in, out := &in.Cluster, &out.Cluster
		*out = new(string)
		**out = **in
	}
	if in.Datastore != nil {
		in, out := &in.Datastore, &out.Datastore
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.ResourcePool != nil {
		in, out := &in.ResourcePool, &out.ResourcePool
		*out = new(string)
		**out = **in
	}
	if in.StaticIPPoolID != nil {
		in, out := &in.StaticIPPoolID, &out.StaticIPPoolID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementObservation.
func (in *PlacementObservation) DeepCopy() *PlacementObservation {
	if in == nil {
		return nil
	}
	out := new(PlacementObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementParameters) DeepCopyInto(out *PlacementParameters) {
	*out = *in
	if in.Cluster != nil {
		in, out := &in.Cluster, &out.Cluster
		*out = new(string)
		**out = **in
	}
	if in.Datastore != nil {
		in, out := &in.Datastore, &out.Datastore
		*out = new(string)
		**out = **in
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.ResourcePool != nil {
		in, out := &in.ResourcePool, &out.ResourcePool
		*out = new(string)
		**out = **in
	}
	if in.StaticIPPoolID != nil {
		in, out := &in.StaticIPPoolID, &out.StaticIPPoolID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementParameters.
func (in *PlacementParameters) DeepCopy() *PlacementParameters {
	if in == nil {
		return nil
	}
	out := new(PlacementParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementsInitParameters) DeepCopyInto(out *PlacementsInitParameters) {
	*out = *in
	if in.ApplianceID != nil {
		in, out := &in.ApplianceID, &out.ApplianceID
		*out = new(string)
		**out = **in
	}
	if in.DataStoragePool != nil {
		in, out := &in.DataStoragePool, &out.DataStoragePool
		*out = new(string)
		**out = **in
	}
	if in.GpuDevice != nil {
		in, out := &in.GpuDevice, &out.GpuDevice
		*out = make([]GpuDeviceInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ImageStoragePool != nil {
		in, out := &in.ImageStoragePool, &out.ImageStoragePool
		*out = new(string)
		**out = **in
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.NetworkNames != nil {
		in, out := &in.NetworkNames, &out.NetworkNames
		*out = new(string)
		**out = **in
	}
	if in.NetworkType != nil {
		in, out := &in.NetworkType, &out.NetworkType
		*out = new(string)
		**out = **in
	}
	if in.TargetStoragePool != nil {
		in, out := &in.TargetStoragePool, &out.TargetStoragePool
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementsInitParameters.
func (in *PlacementsInitParameters) DeepCopy() *PlacementsInitParameters {
	if in == nil {
		return nil
	}
	out := new(PlacementsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementsObservation) DeepCopyInto(out *PlacementsObservation) {
	*out = *in
	if in.ApplianceID != nil {
		in, out := &in.ApplianceID, &out.ApplianceID
		*out = new(string)
		**out = **in
	}
	if in.DataStoragePool != nil {
		in, out := &in.DataStoragePool, &out.DataStoragePool
		*out = new(string)
		**out = **in
	}
	if in.GpuDevice != nil {
		in, out := &in.GpuDevice, &out.GpuDevice
		*out = make([]GpuDeviceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ImageStoragePool != nil {
		in, out := &in.ImageStoragePool, &out.ImageStoragePool
		*out = new(string)
		**out = **in
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.NetworkNames != nil {
		in, out := &in.NetworkNames, &out.NetworkNames
		*out = new(string)
		**out = **in
	}
	if in.NetworkType != nil {
		in, out := &in.NetworkType, &out.NetworkType
		*out = new(string)
		**out = **in
	}
	if in.TargetStoragePool != nil {
		in, out := &in.TargetStoragePool, &out.TargetStoragePool
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementsObservation.
func (in *PlacementsObservation) DeepCopy() *PlacementsObservation {
	if in == nil {
		return nil
	}
	out := new(PlacementsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementsParameters) DeepCopyInto(out *PlacementsParameters) {
	*out = *in
	if in.ApplianceID != nil {
		in, out := &in.ApplianceID, &out.ApplianceID
		*out = new(string)
		**out = **in
	}
	if in.DataStoragePool != nil {
		in, out := &in.DataStoragePool, &out.DataStoragePool
		*out = new(string)
		**out = **in
	}
	if in.GpuDevice != nil {
		in, out := &in.GpuDevice, &out.GpuDevice
		*out = make([]GpuDeviceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ImageStoragePool != nil {
		in, out := &in.ImageStoragePool, &out.ImageStoragePool
		*out = new(string)
		**out = **in
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.NetworkNames != nil {
		in, out := &in.NetworkNames, &out.NetworkNames
		*out = new(string)
		**out = **in
	}
	if in.NetworkType != nil {
		in, out := &in.NetworkType, &out.NetworkType
		*out = new(string)
		**out = **in
	}
	if in.TargetStoragePool != nil {
		in, out := &in.TargetStoragePool, &out.TargetStoragePool
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementsParameters.
func (in *PlacementsParameters) DeepCopy() *PlacementsParameters {
	if in == nil {
		return nil
	}
	out := new(PlacementsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Profile) DeepCopyInto(out *Profile) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Profile.
func (in *Profile) DeepCopy() *Profile {
	if in == nil {
		return nil
	}
	out := new(Profile)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Profile) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProfileInitParameters) DeepCopyInto(out *ProfileInitParameters) {
	*out = *in
	if in.Cloud != nil {
		in, out := &in.Cloud, &out.Cloud
		*out = new(string)
		**out = **in
	}
	if in.Context != nil {
		in, out := &in.Context, &out.Context
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Pack != nil {
		in, out := &in.Pack, &out.Pack
		*out = make([]ProfilePackInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ProfileVariables != nil {
		in, out := &in.ProfileVariables, &out.ProfileVariables
		*out = make([]ProfileVariablesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProfileInitParameters.
func (in *ProfileInitParameters) DeepCopy() *ProfileInitParameters {
	if in == nil {
		return nil
	}
	out := new(ProfileInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProfileList) DeepCopyInto(out *ProfileList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Profile, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProfileList.
func (in *ProfileList) DeepCopy() *ProfileList {
	if in == nil {
		return nil
	}
	out := new(ProfileList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProfileList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProfileObservation) DeepCopyInto(out *ProfileObservation) {
	*out = *in
	if in.Cloud != nil {
		in, out := &in.Cloud, &out.Cloud
		*out = new(string)
		**out = **in
	}
	if in.Context != nil {
		in, out := &in.Context, &out.Context
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Pack != nil {
		in, out := &in.Pack, &out.Pack
		*out = make([]ProfilePackObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ProfileVariables != nil {
		in, out := &in.ProfileVariables, &out.ProfileVariables
		*out = make([]ProfileVariablesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProfileObservation.
func (in *ProfileObservation) DeepCopy() *ProfileObservation {
	if in == nil {
		return nil
	}
	out := new(ProfileObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProfilePackInitParameters) DeepCopyInto(out *ProfilePackInitParameters) {
	*out = *in
	if in.Manifest != nil {
		in, out := &in.Manifest, &out.Manifest
		*out = make([]ProfilePackManifestInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RegistryUID != nil {
		in, out := &in.RegistryUID, &out.RegistryUID
		*out = new(string)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProfilePackInitParameters.
func (in *ProfilePackInitParameters) DeepCopy() *ProfilePackInitParameters {
	if in == nil {
		return nil
	}
	out := new(ProfilePackInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProfilePackManifestInitParameters) DeepCopyInto(out *ProfilePackManifestInitParameters) {
	*out = *in
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProfilePackManifestInitParameters.
func (in *ProfilePackManifestInitParameters) DeepCopy() *ProfilePackManifestInitParameters {
	if in == nil {
		return nil
	}
	out := new(ProfilePackManifestInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProfilePackManifestObservation) DeepCopyInto(out *ProfilePackManifestObservation) {
	*out = *in
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProfilePackManifestObservation.
func (in *ProfilePackManifestObservation) DeepCopy() *ProfilePackManifestObservation {
	if in == nil {
		return nil
	}
	out := new(ProfilePackManifestObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProfilePackManifestParameters) DeepCopyInto(out *ProfilePackManifestParameters) {
	*out = *in
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProfilePackManifestParameters.
func (in *ProfilePackManifestParameters) DeepCopy() *ProfilePackManifestParameters {
	if in == nil {
		return nil
	}
	out := new(ProfilePackManifestParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProfilePackObservation) DeepCopyInto(out *ProfilePackObservation) {
	*out = *in
	if in.Manifest != nil {
		in, out := &in.Manifest, &out.Manifest
		*out = make([]ProfilePackManifestObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RegistryUID != nil {
		in, out := &in.RegistryUID, &out.RegistryUID
		*out = new(string)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProfilePackObservation.
func (in *ProfilePackObservation) DeepCopy() *ProfilePackObservation {
	if in == nil {
		return nil
	}
	out := new(ProfilePackObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProfilePackParameters) DeepCopyInto(out *ProfilePackParameters) {
	*out = *in
	if in.Manifest != nil {
		in, out := &in.Manifest, &out.Manifest
		*out = make([]ProfilePackManifestParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RegistryUID != nil {
		in, out := &in.RegistryUID, &out.RegistryUID
		*out = new(string)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProfilePackParameters.
func (in *ProfilePackParameters) DeepCopy() *ProfilePackParameters {
	if in == nil {
		return nil
	}
	out := new(ProfilePackParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProfileParameters) DeepCopyInto(out *ProfileParameters) {
	*out = *in
	if in.Cloud != nil {
		in, out := &in.Cloud, &out.Cloud
		*out = new(string)
		**out = **in
	}
	if in.Context != nil {
		in, out := &in.Context, &out.Context
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Pack != nil {
		in, out := &in.Pack, &out.Pack
		*out = make([]ProfilePackParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ProfileVariables != nil {
		in, out := &in.ProfileVariables, &out.ProfileVariables
		*out = make([]ProfileVariablesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProfileParameters.
func (in *ProfileParameters) DeepCopy() *ProfileParameters {
	if in == nil {
		return nil
	}
	out := new(ProfileParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProfileSpec) DeepCopyInto(out *ProfileSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProfileSpec.
func (in *ProfileSpec) DeepCopy() *ProfileSpec {
	if in == nil {
		return nil
	}
	out := new(ProfileSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProfileStatus) DeepCopyInto(out *ProfileStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProfileStatus.
func (in *ProfileStatus) DeepCopy() *ProfileStatus {
	if in == nil {
		return nil
	}
	out := new(ProfileStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProfileVariablesInitParameters) DeepCopyInto(out *ProfileVariablesInitParameters) {
	*out = *in
	if in.Variable != nil {
		in, out := &in.Variable, &out.Variable
		*out = make([]VariableInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProfileVariablesInitParameters.
func (in *ProfileVariablesInitParameters) DeepCopy() *ProfileVariablesInitParameters {
	if in == nil {
		return nil
	}
	out := new(ProfileVariablesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProfileVariablesObservation) DeepCopyInto(out *ProfileVariablesObservation) {
	*out = *in
	if in.Variable != nil {
		in, out := &in.Variable, &out.Variable
		*out = make([]VariableObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProfileVariablesObservation.
func (in *ProfileVariablesObservation) DeepCopy() *ProfileVariablesObservation {
	if in == nil {
		return nil
	}
	out := new(ProfileVariablesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProfileVariablesParameters) DeepCopyInto(out *ProfileVariablesParameters) {
	*out = *in
	if in.Variable != nil {
		in, out := &in.Variable, &out.Variable
		*out = make([]VariableParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProfileVariablesParameters.
func (in *ProfileVariablesParameters) DeepCopy() *ProfileVariablesParameters {
	if in == nil {
		return nil
	}
	out := new(ProfileVariablesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScanPolicyInitParameters) DeepCopyInto(out *ScanPolicyInitParameters) {
	*out = *in
	if in.ConfigurationScanSchedule != nil {
		in, out := &in.ConfigurationScanSchedule, &out.ConfigurationScanSchedule
		*out = new(string)
		**out = **in
	}
	if in.ConformanceScanSchedule != nil {
		in, out := &in.ConformanceScanSchedule, &out.ConformanceScanSchedule
		*out = new(string)
		**out = **in
	}
	if in.PenetrationScanSchedule != nil {
		in, out := &in.PenetrationScanSchedule, &out.PenetrationScanSchedule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScanPolicyInitParameters.
func (in *ScanPolicyInitParameters) DeepCopy() *ScanPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(ScanPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScanPolicyObservation) DeepCopyInto(out *ScanPolicyObservation) {
	*out = *in
	if in.ConfigurationScanSchedule != nil {
		in, out := &in.ConfigurationScanSchedule, &out.ConfigurationScanSchedule
		*out = new(string)
		**out = **in
	}
	if in.ConformanceScanSchedule != nil {
		in, out := &in.ConformanceScanSchedule, &out.ConformanceScanSchedule
		*out = new(string)
		**out = **in
	}
	if in.PenetrationScanSchedule != nil {
		in, out := &in.PenetrationScanSchedule, &out.PenetrationScanSchedule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScanPolicyObservation.
func (in *ScanPolicyObservation) DeepCopy() *ScanPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(ScanPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScanPolicyParameters) DeepCopyInto(out *ScanPolicyParameters) {
	*out = *in
	if in.ConfigurationScanSchedule != nil {
		in, out := &in.ConfigurationScanSchedule, &out.ConfigurationScanSchedule
		*out = new(string)
		**out = **in
	}
	if in.ConformanceScanSchedule != nil {
		in, out := &in.ConformanceScanSchedule, &out.ConformanceScanSchedule
		*out = new(string)
		**out = **in
	}
	if in.PenetrationScanSchedule != nil {
		in, out := &in.PenetrationScanSchedule, &out.PenetrationScanSchedule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScanPolicyParameters.
func (in *ScanPolicyParameters) DeepCopy() *ScanPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(ScanPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SelectorInitParameters) DeepCopyInto(out *SelectorInitParameters) {
	*out = *in
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SelectorInitParameters.
func (in *SelectorInitParameters) DeepCopy() *SelectorInitParameters {
	if in == nil {
		return nil
	}
	out := new(SelectorInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SelectorObservation) DeepCopyInto(out *SelectorObservation) {
	*out = *in
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SelectorObservation.
func (in *SelectorObservation) DeepCopy() *SelectorObservation {
	if in == nil {
		return nil
	}
	out := new(SelectorObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SelectorParameters) DeepCopyInto(out *SelectorParameters) {
	*out = *in
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SelectorParameters.
func (in *SelectorParameters) DeepCopy() *SelectorParameters {
	if in == nil {
		return nil
	}
	out := new(SelectorParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubjectsInitParameters) DeepCopyInto(out *SubjectsInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubjectsInitParameters.
func (in *SubjectsInitParameters) DeepCopy() *SubjectsInitParameters {
	if in == nil {
		return nil
	}
	out := new(SubjectsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubjectsObservation) DeepCopyInto(out *SubjectsObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubjectsObservation.
func (in *SubjectsObservation) DeepCopy() *SubjectsObservation {
	if in == nil {
		return nil
	}
	out := new(SubjectsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubjectsParameters) DeepCopyInto(out *SubjectsParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubjectsParameters.
func (in *SubjectsParameters) DeepCopy() *SubjectsParameters {
	if in == nil {
		return nil
	}
	out := new(SubjectsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaintsInitParameters) DeepCopyInto(out *TaintsInitParameters) {
	*out = *in
	if in.Effect != nil {
		in, out := &in.Effect, &out.Effect
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaintsInitParameters.
func (in *TaintsInitParameters) DeepCopy() *TaintsInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaintsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaintsObservation) DeepCopyInto(out *TaintsObservation) {
	*out = *in
	if in.Effect != nil {
		in, out := &in.Effect, &out.Effect
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaintsObservation.
func (in *TaintsObservation) DeepCopy() *TaintsObservation {
	if in == nil {
		return nil
	}
	out := new(TaintsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaintsParameters) DeepCopyInto(out *TaintsParameters) {
	*out = *in
	if in.Effect != nil {
		in, out := &in.Effect, &out.Effect
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaintsParameters.
func (in *TaintsParameters) DeepCopy() *TaintsParameters {
	if in == nil {
		return nil
	}
	out := new(TaintsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Tke) DeepCopyInto(out *Tke) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Tke.
func (in *Tke) DeepCopy() *Tke {
	if in == nil {
		return nil
	}
	out := new(Tke)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Tke) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TkeBackupPolicyInitParameters) DeepCopyInto(out *TkeBackupPolicyInitParameters) {
	*out = *in
	if in.BackupLocationID != nil {
		in, out := &in.BackupLocationID, &out.BackupLocationID
		*out = new(string)
		**out = **in
	}
	if in.ClusterUids != nil {
		in, out := &in.ClusterUids, &out.ClusterUids
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExpiryInHour != nil {
		in, out := &in.ExpiryInHour, &out.ExpiryInHour
		*out = new(float64)
		**out = **in
	}
	if in.IncludeAllClusters != nil {
		in, out := &in.IncludeAllClusters, &out.IncludeAllClusters
		*out = new(bool)
		**out = **in
	}
	if in.IncludeClusterResources != nil {
		in, out := &in.IncludeClusterResources, &out.IncludeClusterResources
		*out = new(bool)
		**out = **in
	}
	if in.IncludeDisks != nil {
		in, out := &in.IncludeDisks, &out.IncludeDisks
		*out = new(bool)
		**out = **in
	}
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TkeBackupPolicyInitParameters.
func (in *TkeBackupPolicyInitParameters) DeepCopy() *TkeBackupPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(TkeBackupPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TkeBackupPolicyObservation) DeepCopyInto(out *TkeBackupPolicyObservation) {
	*out = *in
	if in.BackupLocationID != nil {
		in, out := &in.BackupLocationID, &out.BackupLocationID
		*out = new(string)
		**out = **in
	}
	if in.ClusterUids != nil {
		in, out := &in.ClusterUids, &out.ClusterUids
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExpiryInHour != nil {
		in, out := &in.ExpiryInHour, &out.ExpiryInHour
		*out = new(float64)
		**out = **in
	}
	if in.IncludeAllClusters != nil {
		in, out := &in.IncludeAllClusters, &out.IncludeAllClusters
		*out = new(bool)
		**out = **in
	}
	if in.IncludeClusterResources != nil {
		in, out := &in.IncludeClusterResources, &out.IncludeClusterResources
		*out = new(bool)
		**out = **in
	}
	if in.IncludeDisks != nil {
		in, out := &in.IncludeDisks, &out.IncludeDisks
		*out = new(bool)
		**out = **in
	}
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TkeBackupPolicyObservation.
func (in *TkeBackupPolicyObservation) DeepCopy() *TkeBackupPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(TkeBackupPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TkeBackupPolicyParameters) DeepCopyInto(out *TkeBackupPolicyParameters) {
	*out = *in
	if in.BackupLocationID != nil {
		in, out := &in.BackupLocationID, &out.BackupLocationID
		*out = new(string)
		**out = **in
	}
	if in.ClusterUids != nil {
		in, out := &in.ClusterUids, &out.ClusterUids
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExpiryInHour != nil {
		in, out := &in.ExpiryInHour, &out.ExpiryInHour
		*out = new(float64)
		**out = **in
	}
	if in.IncludeAllClusters != nil {
		in, out := &in.IncludeAllClusters, &out.IncludeAllClusters
		*out = new(bool)
		**out = **in
	}
	if in.IncludeClusterResources != nil {
		in, out := &in.IncludeClusterResources, &out.IncludeClusterResources
		*out = new(bool)
		**out = **in
	}
	if in.IncludeDisks != nil {
		in, out := &in.IncludeDisks, &out.IncludeDisks
		*out = new(bool)
		**out = **in
	}
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TkeBackupPolicyParameters.
func (in *TkeBackupPolicyParameters) DeepCopy() *TkeBackupPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(TkeBackupPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TkeCloudConfigInitParameters) DeepCopyInto(out *TkeCloudConfigInitParameters) {
	*out = *in
	if in.AzSubnets != nil {
		in, out := &in.AzSubnets, &out.AzSubnets
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Azs != nil {
		in, out := &in.Azs, &out.Azs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.EndpointAccess != nil {
		in, out := &in.EndpointAccess, &out.EndpointAccess
		*out = new(string)
		**out = **in
	}
	if in.PublicAccessCidrs != nil {
		in, out := &in.PublicAccessCidrs, &out.PublicAccessCidrs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SSHKeyName != nil {
		in, out := &in.SSHKeyName, &out.SSHKeyName
		*out = new(string)
		**out = **in
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TkeCloudConfigInitParameters.
func (in *TkeCloudConfigInitParameters) DeepCopy() *TkeCloudConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(TkeCloudConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TkeCloudConfigObservation) DeepCopyInto(out *TkeCloudConfigObservation) {
	*out = *in
	if in.AzSubnets != nil {
		in, out := &in.AzSubnets, &out.AzSubnets
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Azs != nil {
		in, out := &in.Azs, &out.Azs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.EndpointAccess != nil {
		in, out := &in.EndpointAccess, &out.EndpointAccess
		*out = new(string)
		**out = **in
	}
	if in.PublicAccessCidrs != nil {
		in, out := &in.PublicAccessCidrs, &out.PublicAccessCidrs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SSHKeyName != nil {
		in, out := &in.SSHKeyName, &out.SSHKeyName
		*out = new(string)
		**out = **in
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TkeCloudConfigObservation.
func (in *TkeCloudConfigObservation) DeepCopy() *TkeCloudConfigObservation {
	if in == nil {
		return nil
	}
	out := new(TkeCloudConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TkeCloudConfigParameters) DeepCopyInto(out *TkeCloudConfigParameters) {
	*out = *in
	if in.AzSubnets != nil {
		in, out := &in.AzSubnets, &out.AzSubnets
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Azs != nil {
		in, out := &in.Azs, &out.Azs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.EndpointAccess != nil {
		in, out := &in.EndpointAccess, &out.EndpointAccess
		*out = new(string)
		**out = **in
	}
	if in.PublicAccessCidrs != nil {
		in, out := &in.PublicAccessCidrs, &out.PublicAccessCidrs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SSHKeyName != nil {
		in, out := &in.SSHKeyName, &out.SSHKeyName
		*out = new(string)
		**out = **in
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TkeCloudConfigParameters.
func (in *TkeCloudConfigParameters) DeepCopy() *TkeCloudConfigParameters {
	if in == nil {
		return nil
	}
	out := new(TkeCloudConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TkeClusterProfileInitParameters) DeepCopyInto(out *TkeClusterProfileInitParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Pack != nil {
		in, out := &in.Pack, &out.Pack
		*out = make([]TkeClusterProfilePackInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TkeClusterProfileInitParameters.
func (in *TkeClusterProfileInitParameters) DeepCopy() *TkeClusterProfileInitParameters {
	if in == nil {
		return nil
	}
	out := new(TkeClusterProfileInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TkeClusterProfileObservation) DeepCopyInto(out *TkeClusterProfileObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Pack != nil {
		in, out := &in.Pack, &out.Pack
		*out = make([]TkeClusterProfilePackObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TkeClusterProfileObservation.
func (in *TkeClusterProfileObservation) DeepCopy() *TkeClusterProfileObservation {
	if in == nil {
		return nil
	}
	out := new(TkeClusterProfileObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TkeClusterProfilePackInitParameters) DeepCopyInto(out *TkeClusterProfilePackInitParameters) {
	*out = *in
	if in.Manifest != nil {
		in, out := &in.Manifest, &out.Manifest
		*out = make([]TkeClusterProfilePackManifestInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RegistryUID != nil {
		in, out := &in.RegistryUID, &out.RegistryUID
		*out = new(string)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TkeClusterProfilePackInitParameters.
func (in *TkeClusterProfilePackInitParameters) DeepCopy() *TkeClusterProfilePackInitParameters {
	if in == nil {
		return nil
	}
	out := new(TkeClusterProfilePackInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TkeClusterProfilePackManifestInitParameters) DeepCopyInto(out *TkeClusterProfilePackManifestInitParameters) {
	*out = *in
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TkeClusterProfilePackManifestInitParameters.
func (in *TkeClusterProfilePackManifestInitParameters) DeepCopy() *TkeClusterProfilePackManifestInitParameters {
	if in == nil {
		return nil
	}
	out := new(TkeClusterProfilePackManifestInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TkeClusterProfilePackManifestObservation) DeepCopyInto(out *TkeClusterProfilePackManifestObservation) {
	*out = *in
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TkeClusterProfilePackManifestObservation.
func (in *TkeClusterProfilePackManifestObservation) DeepCopy() *TkeClusterProfilePackManifestObservation {
	if in == nil {
		return nil
	}
	out := new(TkeClusterProfilePackManifestObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TkeClusterProfilePackManifestParameters) DeepCopyInto(out *TkeClusterProfilePackManifestParameters) {
	*out = *in
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TkeClusterProfilePackManifestParameters.
func (in *TkeClusterProfilePackManifestParameters) DeepCopy() *TkeClusterProfilePackManifestParameters {
	if in == nil {
		return nil
	}
	out := new(TkeClusterProfilePackManifestParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TkeClusterProfilePackObservation) DeepCopyInto(out *TkeClusterProfilePackObservation) {
	*out = *in
	if in.Manifest != nil {
		in, out := &in.Manifest, &out.Manifest
		*out = make([]TkeClusterProfilePackManifestObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RegistryUID != nil {
		in, out := &in.RegistryUID, &out.RegistryUID
		*out = new(string)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TkeClusterProfilePackObservation.
func (in *TkeClusterProfilePackObservation) DeepCopy() *TkeClusterProfilePackObservation {
	if in == nil {
		return nil
	}
	out := new(TkeClusterProfilePackObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TkeClusterProfilePackParameters) DeepCopyInto(out *TkeClusterProfilePackParameters) {
	*out = *in
	if in.Manifest != nil {
		in, out := &in.Manifest, &out.Manifest
		*out = make([]TkeClusterProfilePackManifestParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RegistryUID != nil {
		in, out := &in.RegistryUID, &out.RegistryUID
		*out = new(string)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TkeClusterProfilePackParameters.
func (in *TkeClusterProfilePackParameters) DeepCopy() *TkeClusterProfilePackParameters {
	if in == nil {
		return nil
	}
	out := new(TkeClusterProfilePackParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TkeClusterProfileParameters) DeepCopyInto(out *TkeClusterProfileParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Pack != nil {
		in, out := &in.Pack, &out.Pack
		*out = make([]TkeClusterProfilePackParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TkeClusterProfileParameters.
func (in *TkeClusterProfileParameters) DeepCopy() *TkeClusterProfileParameters {
	if in == nil {
		return nil
	}
	out := new(TkeClusterProfileParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TkeClusterRbacBindingInitParameters) DeepCopyInto(out *TkeClusterRbacBindingInitParameters) {
	*out = *in
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Subjects != nil {
		in, out := &in.Subjects, &out.Subjects
		*out = make([]TkeClusterRbacBindingSubjectsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TkeClusterRbacBindingInitParameters.
func (in *TkeClusterRbacBindingInitParameters) DeepCopy() *TkeClusterRbacBindingInitParameters {
	if in == nil {
		return nil
	}
	out := new(TkeClusterRbacBindingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TkeClusterRbacBindingObservation) DeepCopyInto(out *TkeClusterRbacBindingObservation) {
	*out = *in
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Subjects != nil {
		in, out := &in.Subjects, &out.Subjects
		*out = make([]TkeClusterRbacBindingSubjectsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TkeClusterRbacBindingObservation.
func (in *TkeClusterRbacBindingObservation) DeepCopy() *TkeClusterRbacBindingObservation {
	if in == nil {
		return nil
	}
	out := new(TkeClusterRbacBindingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TkeClusterRbacBindingParameters) DeepCopyInto(out *TkeClusterRbacBindingParameters) {
	*out = *in
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Subjects != nil {
		in, out := &in.Subjects, &out.Subjects
		*out = make([]TkeClusterRbacBindingSubjectsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TkeClusterRbacBindingParameters.
func (in *TkeClusterRbacBindingParameters) DeepCopy() *TkeClusterRbacBindingParameters {
	if in == nil {
		return nil
	}
	out := new(TkeClusterRbacBindingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TkeClusterRbacBindingSubjectsInitParameters) DeepCopyInto(out *TkeClusterRbacBindingSubjectsInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TkeClusterRbacBindingSubjectsInitParameters.
func (in *TkeClusterRbacBindingSubjectsInitParameters) DeepCopy() *TkeClusterRbacBindingSubjectsInitParameters {
	if in == nil {
		return nil
	}
	out := new(TkeClusterRbacBindingSubjectsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TkeClusterRbacBindingSubjectsObservation) DeepCopyInto(out *TkeClusterRbacBindingSubjectsObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TkeClusterRbacBindingSubjectsObservation.
func (in *TkeClusterRbacBindingSubjectsObservation) DeepCopy() *TkeClusterRbacBindingSubjectsObservation {
	if in == nil {
		return nil
	}
	out := new(TkeClusterRbacBindingSubjectsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TkeClusterRbacBindingSubjectsParameters) DeepCopyInto(out *TkeClusterRbacBindingSubjectsParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TkeClusterRbacBindingSubjectsParameters.
func (in *TkeClusterRbacBindingSubjectsParameters) DeepCopy() *TkeClusterRbacBindingSubjectsParameters {
	if in == nil {
		return nil
	}
	out := new(TkeClusterRbacBindingSubjectsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TkeHostConfigInitParameters) DeepCopyInto(out *TkeHostConfigInitParameters) {
	*out = *in
	if in.ExternalTrafficPolicy != nil {
		in, out := &in.ExternalTrafficPolicy, &out.ExternalTrafficPolicy
		*out = new(string)
		**out = **in
	}
	if in.HostEndpointType != nil {
		in, out := &in.HostEndpointType, &out.HostEndpointType
		*out = new(string)
		**out = **in
	}
	if in.IngressHost != nil {
		in, out := &in.IngressHost, &out.IngressHost
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancerSourceRanges != nil {
		in, out := &in.LoadBalancerSourceRanges, &out.LoadBalancerSourceRanges
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TkeHostConfigInitParameters.
func (in *TkeHostConfigInitParameters) DeepCopy() *TkeHostConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(TkeHostConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TkeHostConfigObservation) DeepCopyInto(out *TkeHostConfigObservation) {
	*out = *in
	if in.ExternalTrafficPolicy != nil {
		in, out := &in.ExternalTrafficPolicy, &out.ExternalTrafficPolicy
		*out = new(string)
		**out = **in
	}
	if in.HostEndpointType != nil {
		in, out := &in.HostEndpointType, &out.HostEndpointType
		*out = new(string)
		**out = **in
	}
	if in.IngressHost != nil {
		in, out := &in.IngressHost, &out.IngressHost
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancerSourceRanges != nil {
		in, out := &in.LoadBalancerSourceRanges, &out.LoadBalancerSourceRanges
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TkeHostConfigObservation.
func (in *TkeHostConfigObservation) DeepCopy() *TkeHostConfigObservation {
	if in == nil {
		return nil
	}
	out := new(TkeHostConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TkeHostConfigParameters) DeepCopyInto(out *TkeHostConfigParameters) {
	*out = *in
	if in.ExternalTrafficPolicy != nil {
		in, out := &in.ExternalTrafficPolicy, &out.ExternalTrafficPolicy
		*out = new(string)
		**out = **in
	}
	if in.HostEndpointType != nil {
		in, out := &in.HostEndpointType, &out.HostEndpointType
		*out = new(string)
		**out = **in
	}
	if in.IngressHost != nil {
		in, out := &in.IngressHost, &out.IngressHost
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancerSourceRanges != nil {
		in, out := &in.LoadBalancerSourceRanges, &out.LoadBalancerSourceRanges
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TkeHostConfigParameters.
func (in *TkeHostConfigParameters) DeepCopy() *TkeHostConfigParameters {
	if in == nil {
		return nil
	}
	out := new(TkeHostConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TkeInitParameters) DeepCopyInto(out *TkeInitParameters) {
	*out = *in
	if in.ApplySetting != nil {
		in, out := &in.ApplySetting, &out.ApplySetting
		*out = new(string)
		**out = **in
	}
	if in.BackupPolicy != nil {
		in, out := &in.BackupPolicy, &out.BackupPolicy
		*out = make([]TkeBackupPolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CloudAccountID != nil {
		in, out := &in.CloudAccountID, &out.CloudAccountID
		*out = new(string)
		**out = **in
	}
	if in.CloudConfig != nil {
		in, out := &in.CloudConfig, &out.CloudConfig
		*out = make([]TkeCloudConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterMetaAttribute != nil {
		in, out := &in.ClusterMetaAttribute, &out.ClusterMetaAttribute
		*out = new(string)
		**out = **in
	}
	if in.ClusterProfile != nil {
		in, out := &in.ClusterProfile, &out.ClusterProfile
		*out = make([]TkeClusterProfileInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterRbacBinding != nil {
		in, out := &in.ClusterRbacBinding, &out.ClusterRbacBinding
		*out = make([]TkeClusterRbacBindingInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Context != nil {
		in, out := &in.Context, &out.Context
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ForceDelete != nil {
		in, out := &in.ForceDelete, &out.ForceDelete
		*out = new(bool)
		**out = **in
	}
	if in.ForceDeleteDelay != nil {
		in, out := &in.ForceDeleteDelay, &out.ForceDeleteDelay
		*out = new(float64)
		**out = **in
	}
	if in.HostConfig != nil {
		in, out := &in.HostConfig, &out.HostConfig
		*out = make([]TkeHostConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MachinePool != nil {
		in, out := &in.MachinePool, &out.MachinePool
		*out = make([]TkeMachinePoolInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]TkeNamespacesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PauseAgentUpgrades != nil {
		in, out := &in.PauseAgentUpgrades, &out.PauseAgentUpgrades
		*out = new(string)
		**out = **in
	}
	if in.ReviewRepaveState != nil {
		in, out := &in.ReviewRepaveState, &out.ReviewRepaveState
		*out = new(string)
		**out = **in
	}
	if in.ScanPolicy != nil {
		in, out := &in.ScanPolicy, &out.ScanPolicy
		*out = make([]TkeScanPolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SkipCompletion != nil {
		in, out := &in.SkipCompletion, &out.SkipCompletion
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TkeInitParameters.
func (in *TkeInitParameters) DeepCopy() *TkeInitParameters {
	if in == nil {
		return nil
	}
	out := new(TkeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TkeList) DeepCopyInto(out *TkeList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Tke, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TkeList.
func (in *TkeList) DeepCopy() *TkeList {
	if in == nil {
		return nil
	}
	out := new(TkeList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TkeList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TkeLocationConfigInitParameters) DeepCopyInto(out *TkeLocationConfigInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TkeLocationConfigInitParameters.
func (in *TkeLocationConfigInitParameters) DeepCopy() *TkeLocationConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(TkeLocationConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TkeLocationConfigObservation) DeepCopyInto(out *TkeLocationConfigObservation) {
	*out = *in
	if in.CountryCode != nil {
		in, out := &in.CountryCode, &out.CountryCode
		*out = new(string)
		**out = **in
	}
	if in.CountryName != nil {
		in, out := &in.CountryName, &out.CountryName
		*out = new(string)
		**out = **in
	}
	if in.Latitude != nil {
		in, out := &in.Latitude, &out.Latitude
		*out = new(float64)
		**out = **in
	}
	if in.Longitude != nil {
		in, out := &in.Longitude, &out.Longitude
		*out = new(float64)
		**out = **in
	}
	if in.RegionCode != nil {
		in, out := &in.RegionCode, &out.RegionCode
		*out = new(string)
		**out = **in
	}
	if in.RegionName != nil {
		in, out := &in.RegionName, &out.RegionName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TkeLocationConfigObservation.
func (in *TkeLocationConfigObservation) DeepCopy() *TkeLocationConfigObservation {
	if in == nil {
		return nil
	}
	out := new(TkeLocationConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TkeLocationConfigParameters) DeepCopyInto(out *TkeLocationConfigParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TkeLocationConfigParameters.
func (in *TkeLocationConfigParameters) DeepCopy() *TkeLocationConfigParameters {
	if in == nil {
		return nil
	}
	out := new(TkeLocationConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TkeMachinePoolInitParameters) DeepCopyInto(out *TkeMachinePoolInitParameters) {
	*out = *in
	if in.AdditionalLabels != nil {
		in, out := &in.AdditionalLabels, &out.AdditionalLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.AzSubnets != nil {
		in, out := &in.AzSubnets, &out.AzSubnets
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Azs != nil {
		in, out := &in.Azs, &out.Azs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CapacityType != nil {
		in, out := &in.CapacityType, &out.CapacityType
		*out = new(string)
		**out = **in
	}
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.DiskSizeGb != nil {
		in, out := &in.DiskSizeGb, &out.DiskSizeGb
		*out = new(float64)
		**out = **in
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.MaxPrice != nil {
		in, out := &in.MaxPrice, &out.MaxPrice
		*out = new(string)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Node != nil {
		in, out := &in.Node, &out.Node
		*out = make([]TkeMachinePoolNodeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Taints != nil {
		in, out := &in.Taints, &out.Taints
		*out = make([]TkeMachinePoolTaintsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UpdateStrategy != nil {
		in, out := &in.UpdateStrategy, &out.UpdateStrategy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TkeMachinePoolInitParameters.
func (in *TkeMachinePoolInitParameters) DeepCopy() *TkeMachinePoolInitParameters {
	if in == nil {
		return nil
	}
	out := new(TkeMachinePoolInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TkeMachinePoolNodeInitParameters) DeepCopyInto(out *TkeMachinePoolNodeInitParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.NodeID != nil {
		in, out := &in.NodeID, &out.NodeID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TkeMachinePoolNodeInitParameters.
func (in *TkeMachinePoolNodeInitParameters) DeepCopy() *TkeMachinePoolNodeInitParameters {
	if in == nil {
		return nil
	}
	out := new(TkeMachinePoolNodeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TkeMachinePoolNodeObservation) DeepCopyInto(out *TkeMachinePoolNodeObservation) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.NodeID != nil {
		in, out := &in.NodeID, &out.NodeID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TkeMachinePoolNodeObservation.
func (in *TkeMachinePoolNodeObservation) DeepCopy() *TkeMachinePoolNodeObservation {
	if in == nil {
		return nil
	}
	out := new(TkeMachinePoolNodeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TkeMachinePoolNodeParameters) DeepCopyInto(out *TkeMachinePoolNodeParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.NodeID != nil {
		in, out := &in.NodeID, &out.NodeID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TkeMachinePoolNodeParameters.
func (in *TkeMachinePoolNodeParameters) DeepCopy() *TkeMachinePoolNodeParameters {
	if in == nil {
		return nil
	}
	out := new(TkeMachinePoolNodeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TkeMachinePoolObservation) DeepCopyInto(out *TkeMachinePoolObservation) {
	*out = *in
	if in.AdditionalLabels != nil {
		in, out := &in.AdditionalLabels, &out.AdditionalLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.AzSubnets != nil {
		in, out := &in.AzSubnets, &out.AzSubnets
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Azs != nil {
		in, out := &in.Azs, &out.Azs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CapacityType != nil {
		in, out := &in.CapacityType, &out.CapacityType
		*out = new(string)
		**out = **in
	}
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.DiskSizeGb != nil {
		in, out := &in.DiskSizeGb, &out.DiskSizeGb
		*out = new(float64)
		**out = **in
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.MaxPrice != nil {
		in, out := &in.MaxPrice, &out.MaxPrice
		*out = new(string)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Node != nil {
		in, out := &in.Node, &out.Node
		*out = make([]TkeMachinePoolNodeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Taints != nil {
		in, out := &in.Taints, &out.Taints
		*out = make([]TkeMachinePoolTaintsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UpdateStrategy != nil {
		in, out := &in.UpdateStrategy, &out.UpdateStrategy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TkeMachinePoolObservation.
func (in *TkeMachinePoolObservation) DeepCopy() *TkeMachinePoolObservation {
	if in == nil {
		return nil
	}
	out := new(TkeMachinePoolObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TkeMachinePoolParameters) DeepCopyInto(out *TkeMachinePoolParameters) {
	*out = *in
	if in.AdditionalLabels != nil {
		in, out := &in.AdditionalLabels, &out.AdditionalLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.AzSubnets != nil {
		in, out := &in.AzSubnets, &out.AzSubnets
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Azs != nil {
		in, out := &in.Azs, &out.Azs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CapacityType != nil {
		in, out := &in.CapacityType, &out.CapacityType
		*out = new(string)
		**out = **in
	}
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.DiskSizeGb != nil {
		in, out := &in.DiskSizeGb, &out.DiskSizeGb
		*out = new(float64)
		**out = **in
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.MaxPrice != nil {
		in, out := &in.MaxPrice, &out.MaxPrice
		*out = new(string)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Node != nil {
		in, out := &in.Node, &out.Node
		*out = make([]TkeMachinePoolNodeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Taints != nil {
		in, out := &in.Taints, &out.Taints
		*out = make([]TkeMachinePoolTaintsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UpdateStrategy != nil {
		in, out := &in.UpdateStrategy, &out.UpdateStrategy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TkeMachinePoolParameters.
func (in *TkeMachinePoolParameters) DeepCopy() *TkeMachinePoolParameters {
	if in == nil {
		return nil
	}
	out := new(TkeMachinePoolParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TkeMachinePoolTaintsInitParameters) DeepCopyInto(out *TkeMachinePoolTaintsInitParameters) {
	*out = *in
	if in.Effect != nil {
		in, out := &in.Effect, &out.Effect
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TkeMachinePoolTaintsInitParameters.
func (in *TkeMachinePoolTaintsInitParameters) DeepCopy() *TkeMachinePoolTaintsInitParameters {
	if in == nil {
		return nil
	}
	out := new(TkeMachinePoolTaintsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TkeMachinePoolTaintsObservation) DeepCopyInto(out *TkeMachinePoolTaintsObservation) {
	*out = *in
	if in.Effect != nil {
		in, out := &in.Effect, &out.Effect
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TkeMachinePoolTaintsObservation.
func (in *TkeMachinePoolTaintsObservation) DeepCopy() *TkeMachinePoolTaintsObservation {
	if in == nil {
		return nil
	}
	out := new(TkeMachinePoolTaintsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TkeMachinePoolTaintsParameters) DeepCopyInto(out *TkeMachinePoolTaintsParameters) {
	*out = *in
	if in.Effect != nil {
		in, out := &in.Effect, &out.Effect
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TkeMachinePoolTaintsParameters.
func (in *TkeMachinePoolTaintsParameters) DeepCopy() *TkeMachinePoolTaintsParameters {
	if in == nil {
		return nil
	}
	out := new(TkeMachinePoolTaintsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TkeNamespacesInitParameters) DeepCopyInto(out *TkeNamespacesInitParameters) {
	*out = *in
	if in.ImagesBlacklist != nil {
		in, out := &in.ImagesBlacklist, &out.ImagesBlacklist
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ResourceAllocation != nil {
		in, out := &in.ResourceAllocation, &out.ResourceAllocation
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TkeNamespacesInitParameters.
func (in *TkeNamespacesInitParameters) DeepCopy() *TkeNamespacesInitParameters {
	if in == nil {
		return nil
	}
	out := new(TkeNamespacesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TkeNamespacesObservation) DeepCopyInto(out *TkeNamespacesObservation) {
	*out = *in
	if in.ImagesBlacklist != nil {
		in, out := &in.ImagesBlacklist, &out.ImagesBlacklist
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ResourceAllocation != nil {
		in, out := &in.ResourceAllocation, &out.ResourceAllocation
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TkeNamespacesObservation.
func (in *TkeNamespacesObservation) DeepCopy() *TkeNamespacesObservation {
	if in == nil {
		return nil
	}
	out := new(TkeNamespacesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TkeNamespacesParameters) DeepCopyInto(out *TkeNamespacesParameters) {
	*out = *in
	if in.ImagesBlacklist != nil {
		in, out := &in.ImagesBlacklist, &out.ImagesBlacklist
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ResourceAllocation != nil {
		in, out := &in.ResourceAllocation, &out.ResourceAllocation
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TkeNamespacesParameters.
func (in *TkeNamespacesParameters) DeepCopy() *TkeNamespacesParameters {
	if in == nil {
		return nil
	}
	out := new(TkeNamespacesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TkeObservation) DeepCopyInto(out *TkeObservation) {
	*out = *in
	if in.AdminKubeConfig != nil {
		in, out := &in.AdminKubeConfig, &out.AdminKubeConfig
		*out = new(string)
		**out = **in
	}
	if in.ApplySetting != nil {
		in, out := &in.ApplySetting, &out.ApplySetting
		*out = new(string)
		**out = **in
	}
	if in.BackupPolicy != nil {
		in, out := &in.BackupPolicy, &out.BackupPolicy
		*out = make([]TkeBackupPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CloudAccountID != nil {
		in, out := &in.CloudAccountID, &out.CloudAccountID
		*out = new(string)
		**out = **in
	}
	if in.CloudConfig != nil {
		in, out := &in.CloudConfig, &out.CloudConfig
		*out = make([]TkeCloudConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CloudConfigID != nil {
		in, out := &in.CloudConfigID, &out.CloudConfigID
		*out = new(string)
		**out = **in
	}
	if in.ClusterMetaAttribute != nil {
		in, out := &in.ClusterMetaAttribute, &out.ClusterMetaAttribute
		*out = new(string)
		**out = **in
	}
	if in.ClusterProfile != nil {
		in, out := &in.ClusterProfile, &out.ClusterProfile
		*out = make([]TkeClusterProfileObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterRbacBinding != nil {
		in, out := &in.ClusterRbacBinding, &out.ClusterRbacBinding
		*out = make([]TkeClusterRbacBindingObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Context != nil {
		in, out := &in.Context, &out.Context
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ForceDelete != nil {
		in, out := &in.ForceDelete, &out.ForceDelete
		*out = new(bool)
		**out = **in
	}
	if in.ForceDeleteDelay != nil {
		in, out := &in.ForceDeleteDelay, &out.ForceDeleteDelay
		*out = new(float64)
		**out = **in
	}
	if in.HostConfig != nil {
		in, out := &in.HostConfig, &out.HostConfig
		*out = make([]TkeHostConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Kubeconfig != nil {
		in, out := &in.Kubeconfig, &out.Kubeconfig
		*out = new(string)
		**out = **in
	}
	if in.LocationConfig != nil {
		in, out := &in.LocationConfig, &out.LocationConfig
		*out = make([]TkeLocationConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MachinePool != nil {
		in, out := &in.MachinePool, &out.MachinePool
		*out = make([]TkeMachinePoolObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]TkeNamespacesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PauseAgentUpgrades != nil {
		in, out := &in.PauseAgentUpgrades, &out.PauseAgentUpgrades
		*out = new(string)
		**out = **in
	}
	if in.ReviewRepaveState != nil {
		in, out := &in.ReviewRepaveState, &out.ReviewRepaveState
		*out = new(string)
		**out = **in
	}
	if in.ScanPolicy != nil {
		in, out := &in.ScanPolicy, &out.ScanPolicy
		*out = make([]TkeScanPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SkipCompletion != nil {
		in, out := &in.SkipCompletion, &out.SkipCompletion
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TkeObservation.
func (in *TkeObservation) DeepCopy() *TkeObservation {
	if in == nil {
		return nil
	}
	out := new(TkeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TkeParameters) DeepCopyInto(out *TkeParameters) {
	*out = *in
	if in.ApplySetting != nil {
		in, out := &in.ApplySetting, &out.ApplySetting
		*out = new(string)
		**out = **in
	}
	if in.BackupPolicy != nil {
		in, out := &in.BackupPolicy, &out.BackupPolicy
		*out = make([]TkeBackupPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CloudAccountID != nil {
		in, out := &in.CloudAccountID, &out.CloudAccountID
		*out = new(string)
		**out = **in
	}
	if in.CloudConfig != nil {
		in, out := &in.CloudConfig, &out.CloudConfig
		*out = make([]TkeCloudConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterMetaAttribute != nil {
		in, out := &in.ClusterMetaAttribute, &out.ClusterMetaAttribute
		*out = new(string)
		**out = **in
	}
	if in.ClusterProfile != nil {
		in, out := &in.ClusterProfile, &out.ClusterProfile
		*out = make([]TkeClusterProfileParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterRbacBinding != nil {
		in, out := &in.ClusterRbacBinding, &out.ClusterRbacBinding
		*out = make([]TkeClusterRbacBindingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Context != nil {
		in, out := &in.Context, &out.Context
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ForceDelete != nil {
		in, out := &in.ForceDelete, &out.ForceDelete
		*out = new(bool)
		**out = **in
	}
	if in.ForceDeleteDelay != nil {
		in, out := &in.ForceDeleteDelay, &out.ForceDeleteDelay
		*out = new(float64)
		**out = **in
	}
	if in.HostConfig != nil {
		in, out := &in.HostConfig, &out.HostConfig
		*out = make([]TkeHostConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MachinePool != nil {
		in, out := &in.MachinePool, &out.MachinePool
		*out = make([]TkeMachinePoolParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]TkeNamespacesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PauseAgentUpgrades != nil {
		in, out := &in.PauseAgentUpgrades, &out.PauseAgentUpgrades
		*out = new(string)
		**out = **in
	}
	if in.ReviewRepaveState != nil {
		in, out := &in.ReviewRepaveState, &out.ReviewRepaveState
		*out = new(string)
		**out = **in
	}
	if in.ScanPolicy != nil {
		in, out := &in.ScanPolicy, &out.ScanPolicy
		*out = make([]TkeScanPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SkipCompletion != nil {
		in, out := &in.SkipCompletion, &out.SkipCompletion
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TkeParameters.
func (in *TkeParameters) DeepCopy() *TkeParameters {
	if in == nil {
		return nil
	}
	out := new(TkeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TkeScanPolicyInitParameters) DeepCopyInto(out *TkeScanPolicyInitParameters) {
	*out = *in
	if in.ConfigurationScanSchedule != nil {
		in, out := &in.ConfigurationScanSchedule, &out.ConfigurationScanSchedule
		*out = new(string)
		**out = **in
	}
	if in.ConformanceScanSchedule != nil {
		in, out := &in.ConformanceScanSchedule, &out.ConformanceScanSchedule
		*out = new(string)
		**out = **in
	}
	if in.PenetrationScanSchedule != nil {
		in, out := &in.PenetrationScanSchedule, &out.PenetrationScanSchedule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TkeScanPolicyInitParameters.
func (in *TkeScanPolicyInitParameters) DeepCopy() *TkeScanPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(TkeScanPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TkeScanPolicyObservation) DeepCopyInto(out *TkeScanPolicyObservation) {
	*out = *in
	if in.ConfigurationScanSchedule != nil {
		in, out := &in.ConfigurationScanSchedule, &out.ConfigurationScanSchedule
		*out = new(string)
		**out = **in
	}
	if in.ConformanceScanSchedule != nil {
		in, out := &in.ConformanceScanSchedule, &out.ConformanceScanSchedule
		*out = new(string)
		**out = **in
	}
	if in.PenetrationScanSchedule != nil {
		in, out := &in.PenetrationScanSchedule, &out.PenetrationScanSchedule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TkeScanPolicyObservation.
func (in *TkeScanPolicyObservation) DeepCopy() *TkeScanPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(TkeScanPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TkeScanPolicyParameters) DeepCopyInto(out *TkeScanPolicyParameters) {
	*out = *in
	if in.ConfigurationScanSchedule != nil {
		in, out := &in.ConfigurationScanSchedule, &out.ConfigurationScanSchedule
		*out = new(string)
		**out = **in
	}
	if in.ConformanceScanSchedule != nil {
		in, out := &in.ConformanceScanSchedule, &out.ConformanceScanSchedule
		*out = new(string)
		**out = **in
	}
	if in.PenetrationScanSchedule != nil {
		in, out := &in.PenetrationScanSchedule, &out.PenetrationScanSchedule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TkeScanPolicyParameters.
func (in *TkeScanPolicyParameters) DeepCopy() *TkeScanPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(TkeScanPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TkeSpec) DeepCopyInto(out *TkeSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TkeSpec.
func (in *TkeSpec) DeepCopy() *TkeSpec {
	if in == nil {
		return nil
	}
	out := new(TkeSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TkeStatus) DeepCopyInto(out *TkeStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TkeStatus.
func (in *TkeStatus) DeepCopy() *TkeStatus {
	if in == nil {
		return nil
	}
	out := new(TkeStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VariableInitParameters) DeepCopyInto(out *VariableInitParameters) {
	*out = *in
	if in.DefaultValue != nil {
		in, out := &in.DefaultValue, &out.DefaultValue
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.Hidden != nil {
		in, out := &in.Hidden, &out.Hidden
		*out = new(bool)
		**out = **in
	}
	if in.Immutable != nil {
		in, out := &in.Immutable, &out.Immutable
		*out = new(bool)
		**out = **in
	}
	if in.IsSensitive != nil {
		in, out := &in.IsSensitive, &out.IsSensitive
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Regex != nil {
		in, out := &in.Regex, &out.Regex
		*out = new(string)
		**out = **in
	}
	if in.Required != nil {
		in, out := &in.Required, &out.Required
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VariableInitParameters.
func (in *VariableInitParameters) DeepCopy() *VariableInitParameters {
	if in == nil {
		return nil
	}
	out := new(VariableInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VariableObservation) DeepCopyInto(out *VariableObservation) {
	*out = *in
	if in.DefaultValue != nil {
		in, out := &in.DefaultValue, &out.DefaultValue
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.Hidden != nil {
		in, out := &in.Hidden, &out.Hidden
		*out = new(bool)
		**out = **in
	}
	if in.Immutable != nil {
		in, out := &in.Immutable, &out.Immutable
		*out = new(bool)
		**out = **in
	}
	if in.IsSensitive != nil {
		in, out := &in.IsSensitive, &out.IsSensitive
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Regex != nil {
		in, out := &in.Regex, &out.Regex
		*out = new(string)
		**out = **in
	}
	if in.Required != nil {
		in, out := &in.Required, &out.Required
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VariableObservation.
func (in *VariableObservation) DeepCopy() *VariableObservation {
	if in == nil {
		return nil
	}
	out := new(VariableObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VariableParameters) DeepCopyInto(out *VariableParameters) {
	*out = *in
	if in.DefaultValue != nil {
		in, out := &in.DefaultValue, &out.DefaultValue
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.Hidden != nil {
		in, out := &in.Hidden, &out.Hidden
		*out = new(bool)
		**out = **in
	}
	if in.Immutable != nil {
		in, out := &in.Immutable, &out.Immutable
		*out = new(bool)
		**out = **in
	}
	if in.IsSensitive != nil {
		in, out := &in.IsSensitive, &out.IsSensitive
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Regex != nil {
		in, out := &in.Regex, &out.Regex
		*out = new(string)
		**out = **in
	}
	if in.Required != nil {
		in, out := &in.Required, &out.Required
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VariableParameters.
func (in *VariableParameters) DeepCopy() *VariableParameters {
	if in == nil {
		return nil
	}
	out := new(VariableParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Vsphere) DeepCopyInto(out *Vsphere) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Vsphere.
func (in *Vsphere) DeepCopy() *Vsphere {
	if in == nil {
		return nil
	}
	out := new(Vsphere)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Vsphere) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VsphereBackupPolicyInitParameters) DeepCopyInto(out *VsphereBackupPolicyInitParameters) {
	*out = *in
	if in.BackupLocationID != nil {
		in, out := &in.BackupLocationID, &out.BackupLocationID
		*out = new(string)
		**out = **in
	}
	if in.ClusterUids != nil {
		in, out := &in.ClusterUids, &out.ClusterUids
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExpiryInHour != nil {
		in, out := &in.ExpiryInHour, &out.ExpiryInHour
		*out = new(float64)
		**out = **in
	}
	if in.IncludeAllClusters != nil {
		in, out := &in.IncludeAllClusters, &out.IncludeAllClusters
		*out = new(bool)
		**out = **in
	}
	if in.IncludeClusterResources != nil {
		in, out := &in.IncludeClusterResources, &out.IncludeClusterResources
		*out = new(bool)
		**out = **in
	}
	if in.IncludeDisks != nil {
		in, out := &in.IncludeDisks, &out.IncludeDisks
		*out = new(bool)
		**out = **in
	}
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VsphereBackupPolicyInitParameters.
func (in *VsphereBackupPolicyInitParameters) DeepCopy() *VsphereBackupPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(VsphereBackupPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VsphereBackupPolicyObservation) DeepCopyInto(out *VsphereBackupPolicyObservation) {
	*out = *in
	if in.BackupLocationID != nil {
		in, out := &in.BackupLocationID, &out.BackupLocationID
		*out = new(string)
		**out = **in
	}
	if in.ClusterUids != nil {
		in, out := &in.ClusterUids, &out.ClusterUids
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExpiryInHour != nil {
		in, out := &in.ExpiryInHour, &out.ExpiryInHour
		*out = new(float64)
		**out = **in
	}
	if in.IncludeAllClusters != nil {
		in, out := &in.IncludeAllClusters, &out.IncludeAllClusters
		*out = new(bool)
		**out = **in
	}
	if in.IncludeClusterResources != nil {
		in, out := &in.IncludeClusterResources, &out.IncludeClusterResources
		*out = new(bool)
		**out = **in
	}
	if in.IncludeDisks != nil {
		in, out := &in.IncludeDisks, &out.IncludeDisks
		*out = new(bool)
		**out = **in
	}
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VsphereBackupPolicyObservation.
func (in *VsphereBackupPolicyObservation) DeepCopy() *VsphereBackupPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(VsphereBackupPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VsphereBackupPolicyParameters) DeepCopyInto(out *VsphereBackupPolicyParameters) {
	*out = *in
	if in.BackupLocationID != nil {
		in, out := &in.BackupLocationID, &out.BackupLocationID
		*out = new(string)
		**out = **in
	}
	if in.ClusterUids != nil {
		in, out := &in.ClusterUids, &out.ClusterUids
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExpiryInHour != nil {
		in, out := &in.ExpiryInHour, &out.ExpiryInHour
		*out = new(float64)
		**out = **in
	}
	if in.IncludeAllClusters != nil {
		in, out := &in.IncludeAllClusters, &out.IncludeAllClusters
		*out = new(bool)
		**out = **in
	}
	if in.IncludeClusterResources != nil {
		in, out := &in.IncludeClusterResources, &out.IncludeClusterResources
		*out = new(bool)
		**out = **in
	}
	if in.IncludeDisks != nil {
		in, out := &in.IncludeDisks, &out.IncludeDisks
		*out = new(bool)
		**out = **in
	}
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VsphereBackupPolicyParameters.
func (in *VsphereBackupPolicyParameters) DeepCopy() *VsphereBackupPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(VsphereBackupPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VsphereCloudConfigInitParameters) DeepCopyInto(out *VsphereCloudConfigInitParameters) {
	*out = *in
	if in.Datacenter != nil {
		in, out := &in.Datacenter, &out.Datacenter
		*out = new(string)
		**out = **in
	}
	if in.Folder != nil {
		in, out := &in.Folder, &out.Folder
		*out = new(string)
		**out = **in
	}
	if in.ImageTemplateFolder != nil {
		in, out := &in.ImageTemplateFolder, &out.ImageTemplateFolder
		*out = new(string)
		**out = **in
	}
	if in.NetworkSearchDomain != nil {
		in, out := &in.NetworkSearchDomain, &out.NetworkSearchDomain
		*out = new(string)
		**out = **in
	}
	if in.NetworkType != nil {
		in, out := &in.NetworkType, &out.NetworkType
		*out = new(string)
		**out = **in
	}
	if in.NtpServers != nil {
		in, out := &in.NtpServers, &out.NtpServers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SSHKey != nil {
		in, out := &in.SSHKey, &out.SSHKey
		*out = new(string)
		**out = **in
	}
	if in.SSHKeys != nil {
		in, out := &in.SSHKeys, &out.SSHKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.StaticIP != nil {
		in, out := &in.StaticIP, &out.StaticIP
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VsphereCloudConfigInitParameters.
func (in *VsphereCloudConfigInitParameters) DeepCopy() *VsphereCloudConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(VsphereCloudConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VsphereCloudConfigObservation) DeepCopyInto(out *VsphereCloudConfigObservation) {
	*out = *in
	if in.Datacenter != nil {
		in, out := &in.Datacenter, &out.Datacenter
		*out = new(string)
		**out = **in
	}
	if in.Folder != nil {
		in, out := &in.Folder, &out.Folder
		*out = new(string)
		**out = **in
	}
	if in.ImageTemplateFolder != nil {
		in, out := &in.ImageTemplateFolder, &out.ImageTemplateFolder
		*out = new(string)
		**out = **in
	}
	if in.NetworkSearchDomain != nil {
		in, out := &in.NetworkSearchDomain, &out.NetworkSearchDomain
		*out = new(string)
		**out = **in
	}
	if in.NetworkType != nil {
		in, out := &in.NetworkType, &out.NetworkType
		*out = new(string)
		**out = **in
	}
	if in.NtpServers != nil {
		in, out := &in.NtpServers, &out.NtpServers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SSHKey != nil {
		in, out := &in.SSHKey, &out.SSHKey
		*out = new(string)
		**out = **in
	}
	if in.SSHKeys != nil {
		in, out := &in.SSHKeys, &out.SSHKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.StaticIP != nil {
		in, out := &in.StaticIP, &out.StaticIP
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VsphereCloudConfigObservation.
func (in *VsphereCloudConfigObservation) DeepCopy() *VsphereCloudConfigObservation {
	if in == nil {
		return nil
	}
	out := new(VsphereCloudConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VsphereCloudConfigParameters) DeepCopyInto(out *VsphereCloudConfigParameters) {
	*out = *in
	if in.Datacenter != nil {
		in, out := &in.Datacenter, &out.Datacenter
		*out = new(string)
		**out = **in
	}
	if in.Folder != nil {
		in, out := &in.Folder, &out.Folder
		*out = new(string)
		**out = **in
	}
	if in.ImageTemplateFolder != nil {
		in, out := &in.ImageTemplateFolder, &out.ImageTemplateFolder
		*out = new(string)
		**out = **in
	}
	if in.NetworkSearchDomain != nil {
		in, out := &in.NetworkSearchDomain, &out.NetworkSearchDomain
		*out = new(string)
		**out = **in
	}
	if in.NetworkType != nil {
		in, out := &in.NetworkType, &out.NetworkType
		*out = new(string)
		**out = **in
	}
	if in.NtpServers != nil {
		in, out := &in.NtpServers, &out.NtpServers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SSHKey != nil {
		in, out := &in.SSHKey, &out.SSHKey
		*out = new(string)
		**out = **in
	}
	if in.SSHKeys != nil {
		in, out := &in.SSHKeys, &out.SSHKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.StaticIP != nil {
		in, out := &in.StaticIP, &out.StaticIP
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VsphereCloudConfigParameters.
func (in *VsphereCloudConfigParameters) DeepCopy() *VsphereCloudConfigParameters {
	if in == nil {
		return nil
	}
	out := new(VsphereCloudConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VsphereClusterProfileInitParameters) DeepCopyInto(out *VsphereClusterProfileInitParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Pack != nil {
		in, out := &in.Pack, &out.Pack
		*out = make([]VsphereClusterProfilePackInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VsphereClusterProfileInitParameters.
func (in *VsphereClusterProfileInitParameters) DeepCopy() *VsphereClusterProfileInitParameters {
	if in == nil {
		return nil
	}
	out := new(VsphereClusterProfileInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VsphereClusterProfileObservation) DeepCopyInto(out *VsphereClusterProfileObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Pack != nil {
		in, out := &in.Pack, &out.Pack
		*out = make([]VsphereClusterProfilePackObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VsphereClusterProfileObservation.
func (in *VsphereClusterProfileObservation) DeepCopy() *VsphereClusterProfileObservation {
	if in == nil {
		return nil
	}
	out := new(VsphereClusterProfileObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VsphereClusterProfilePackInitParameters) DeepCopyInto(out *VsphereClusterProfilePackInitParameters) {
	*out = *in
	if in.Manifest != nil {
		in, out := &in.Manifest, &out.Manifest
		*out = make([]VsphereClusterProfilePackManifestInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RegistryUID != nil {
		in, out := &in.RegistryUID, &out.RegistryUID
		*out = new(string)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VsphereClusterProfilePackInitParameters.
func (in *VsphereClusterProfilePackInitParameters) DeepCopy() *VsphereClusterProfilePackInitParameters {
	if in == nil {
		return nil
	}
	out := new(VsphereClusterProfilePackInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VsphereClusterProfilePackManifestInitParameters) DeepCopyInto(out *VsphereClusterProfilePackManifestInitParameters) {
	*out = *in
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VsphereClusterProfilePackManifestInitParameters.
func (in *VsphereClusterProfilePackManifestInitParameters) DeepCopy() *VsphereClusterProfilePackManifestInitParameters {
	if in == nil {
		return nil
	}
	out := new(VsphereClusterProfilePackManifestInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VsphereClusterProfilePackManifestObservation) DeepCopyInto(out *VsphereClusterProfilePackManifestObservation) {
	*out = *in
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VsphereClusterProfilePackManifestObservation.
func (in *VsphereClusterProfilePackManifestObservation) DeepCopy() *VsphereClusterProfilePackManifestObservation {
	if in == nil {
		return nil
	}
	out := new(VsphereClusterProfilePackManifestObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VsphereClusterProfilePackManifestParameters) DeepCopyInto(out *VsphereClusterProfilePackManifestParameters) {
	*out = *in
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VsphereClusterProfilePackManifestParameters.
func (in *VsphereClusterProfilePackManifestParameters) DeepCopy() *VsphereClusterProfilePackManifestParameters {
	if in == nil {
		return nil
	}
	out := new(VsphereClusterProfilePackManifestParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VsphereClusterProfilePackObservation) DeepCopyInto(out *VsphereClusterProfilePackObservation) {
	*out = *in
	if in.Manifest != nil {
		in, out := &in.Manifest, &out.Manifest
		*out = make([]VsphereClusterProfilePackManifestObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RegistryUID != nil {
		in, out := &in.RegistryUID, &out.RegistryUID
		*out = new(string)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VsphereClusterProfilePackObservation.
func (in *VsphereClusterProfilePackObservation) DeepCopy() *VsphereClusterProfilePackObservation {
	if in == nil {
		return nil
	}
	out := new(VsphereClusterProfilePackObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VsphereClusterProfilePackParameters) DeepCopyInto(out *VsphereClusterProfilePackParameters) {
	*out = *in
	if in.Manifest != nil {
		in, out := &in.Manifest, &out.Manifest
		*out = make([]VsphereClusterProfilePackManifestParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RegistryUID != nil {
		in, out := &in.RegistryUID, &out.RegistryUID
		*out = new(string)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VsphereClusterProfilePackParameters.
func (in *VsphereClusterProfilePackParameters) DeepCopy() *VsphereClusterProfilePackParameters {
	if in == nil {
		return nil
	}
	out := new(VsphereClusterProfilePackParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VsphereClusterProfileParameters) DeepCopyInto(out *VsphereClusterProfileParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Pack != nil {
		in, out := &in.Pack, &out.Pack
		*out = make([]VsphereClusterProfilePackParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VsphereClusterProfileParameters.
func (in *VsphereClusterProfileParameters) DeepCopy() *VsphereClusterProfileParameters {
	if in == nil {
		return nil
	}
	out := new(VsphereClusterProfileParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VsphereClusterRbacBindingInitParameters) DeepCopyInto(out *VsphereClusterRbacBindingInitParameters) {
	*out = *in
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Subjects != nil {
		in, out := &in.Subjects, &out.Subjects
		*out = make([]VsphereClusterRbacBindingSubjectsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VsphereClusterRbacBindingInitParameters.
func (in *VsphereClusterRbacBindingInitParameters) DeepCopy() *VsphereClusterRbacBindingInitParameters {
	if in == nil {
		return nil
	}
	out := new(VsphereClusterRbacBindingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VsphereClusterRbacBindingObservation) DeepCopyInto(out *VsphereClusterRbacBindingObservation) {
	*out = *in
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Subjects != nil {
		in, out := &in.Subjects, &out.Subjects
		*out = make([]VsphereClusterRbacBindingSubjectsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VsphereClusterRbacBindingObservation.
func (in *VsphereClusterRbacBindingObservation) DeepCopy() *VsphereClusterRbacBindingObservation {
	if in == nil {
		return nil
	}
	out := new(VsphereClusterRbacBindingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VsphereClusterRbacBindingParameters) DeepCopyInto(out *VsphereClusterRbacBindingParameters) {
	*out = *in
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Subjects != nil {
		in, out := &in.Subjects, &out.Subjects
		*out = make([]VsphereClusterRbacBindingSubjectsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VsphereClusterRbacBindingParameters.
func (in *VsphereClusterRbacBindingParameters) DeepCopy() *VsphereClusterRbacBindingParameters {
	if in == nil {
		return nil
	}
	out := new(VsphereClusterRbacBindingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VsphereClusterRbacBindingSubjectsInitParameters) DeepCopyInto(out *VsphereClusterRbacBindingSubjectsInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VsphereClusterRbacBindingSubjectsInitParameters.
func (in *VsphereClusterRbacBindingSubjectsInitParameters) DeepCopy() *VsphereClusterRbacBindingSubjectsInitParameters {
	if in == nil {
		return nil
	}
	out := new(VsphereClusterRbacBindingSubjectsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VsphereClusterRbacBindingSubjectsObservation) DeepCopyInto(out *VsphereClusterRbacBindingSubjectsObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VsphereClusterRbacBindingSubjectsObservation.
func (in *VsphereClusterRbacBindingSubjectsObservation) DeepCopy() *VsphereClusterRbacBindingSubjectsObservation {
	if in == nil {
		return nil
	}
	out := new(VsphereClusterRbacBindingSubjectsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VsphereClusterRbacBindingSubjectsParameters) DeepCopyInto(out *VsphereClusterRbacBindingSubjectsParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VsphereClusterRbacBindingSubjectsParameters.
func (in *VsphereClusterRbacBindingSubjectsParameters) DeepCopy() *VsphereClusterRbacBindingSubjectsParameters {
	if in == nil {
		return nil
	}
	out := new(VsphereClusterRbacBindingSubjectsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VsphereHostConfigInitParameters) DeepCopyInto(out *VsphereHostConfigInitParameters) {
	*out = *in
	if in.ExternalTrafficPolicy != nil {
		in, out := &in.ExternalTrafficPolicy, &out.ExternalTrafficPolicy
		*out = new(string)
		**out = **in
	}
	if in.HostEndpointType != nil {
		in, out := &in.HostEndpointType, &out.HostEndpointType
		*out = new(string)
		**out = **in
	}
	if in.IngressHost != nil {
		in, out := &in.IngressHost, &out.IngressHost
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancerSourceRanges != nil {
		in, out := &in.LoadBalancerSourceRanges, &out.LoadBalancerSourceRanges
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VsphereHostConfigInitParameters.
func (in *VsphereHostConfigInitParameters) DeepCopy() *VsphereHostConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(VsphereHostConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VsphereHostConfigObservation) DeepCopyInto(out *VsphereHostConfigObservation) {
	*out = *in
	if in.ExternalTrafficPolicy != nil {
		in, out := &in.ExternalTrafficPolicy, &out.ExternalTrafficPolicy
		*out = new(string)
		**out = **in
	}
	if in.HostEndpointType != nil {
		in, out := &in.HostEndpointType, &out.HostEndpointType
		*out = new(string)
		**out = **in
	}
	if in.IngressHost != nil {
		in, out := &in.IngressHost, &out.IngressHost
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancerSourceRanges != nil {
		in, out := &in.LoadBalancerSourceRanges, &out.LoadBalancerSourceRanges
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VsphereHostConfigObservation.
func (in *VsphereHostConfigObservation) DeepCopy() *VsphereHostConfigObservation {
	if in == nil {
		return nil
	}
	out := new(VsphereHostConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VsphereHostConfigParameters) DeepCopyInto(out *VsphereHostConfigParameters) {
	*out = *in
	if in.ExternalTrafficPolicy != nil {
		in, out := &in.ExternalTrafficPolicy, &out.ExternalTrafficPolicy
		*out = new(string)
		**out = **in
	}
	if in.HostEndpointType != nil {
		in, out := &in.HostEndpointType, &out.HostEndpointType
		*out = new(string)
		**out = **in
	}
	if in.IngressHost != nil {
		in, out := &in.IngressHost, &out.IngressHost
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancerSourceRanges != nil {
		in, out := &in.LoadBalancerSourceRanges, &out.LoadBalancerSourceRanges
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VsphereHostConfigParameters.
func (in *VsphereHostConfigParameters) DeepCopy() *VsphereHostConfigParameters {
	if in == nil {
		return nil
	}
	out := new(VsphereHostConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VsphereInitParameters) DeepCopyInto(out *VsphereInitParameters) {
	*out = *in
	if in.ApplySetting != nil {
		in, out := &in.ApplySetting, &out.ApplySetting
		*out = new(string)
		**out = **in
	}
	if in.BackupPolicy != nil {
		in, out := &in.BackupPolicy, &out.BackupPolicy
		*out = make([]VsphereBackupPolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CloudAccountID != nil {
		in, out := &in.CloudAccountID, &out.CloudAccountID
		*out = new(string)
		**out = **in
	}
	if in.CloudConfig != nil {
		in, out := &in.CloudConfig, &out.CloudConfig
		*out = make([]VsphereCloudConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterMetaAttribute != nil {
		in, out := &in.ClusterMetaAttribute, &out.ClusterMetaAttribute
		*out = new(string)
		**out = **in
	}
	if in.ClusterProfile != nil {
		in, out := &in.ClusterProfile, &out.ClusterProfile
		*out = make([]VsphereClusterProfileInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterRbacBinding != nil {
		in, out := &in.ClusterRbacBinding, &out.ClusterRbacBinding
		*out = make([]VsphereClusterRbacBindingInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Context != nil {
		in, out := &in.Context, &out.Context
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ForceDelete != nil {
		in, out := &in.ForceDelete, &out.ForceDelete
		*out = new(bool)
		**out = **in
	}
	if in.ForceDeleteDelay != nil {
		in, out := &in.ForceDeleteDelay, &out.ForceDeleteDelay
		*out = new(float64)
		**out = **in
	}
	if in.HostConfig != nil {
		in, out := &in.HostConfig, &out.HostConfig
		*out = make([]VsphereHostConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LocationConfig != nil {
		in, out := &in.LocationConfig, &out.LocationConfig
		*out = make([]VsphereLocationConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MachinePool != nil {
		in, out := &in.MachinePool, &out.MachinePool
		*out = make([]VsphereMachinePoolInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]VsphereNamespacesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OsPatchAfter != nil {
		in, out := &in.OsPatchAfter, &out.OsPatchAfter
		*out = new(string)
		**out = **in
	}
	if in.OsPatchOnBoot != nil {
		in, out := &in.OsPatchOnBoot, &out.OsPatchOnBoot
		*out = new(bool)
		**out = **in
	}
	if in.OsPatchSchedule != nil {
		in, out := &in.OsPatchSchedule, &out.OsPatchSchedule
		*out = new(string)
		**out = **in
	}
	if in.PauseAgentUpgrades != nil {
		in, out := &in.PauseAgentUpgrades, &out.PauseAgentUpgrades
		*out = new(string)
		**out = **in
	}
	if in.ReviewRepaveState != nil {
		in, out := &in.ReviewRepaveState, &out.ReviewRepaveState
		*out = new(string)
		**out = **in
	}
	if in.ScanPolicy != nil {
		in, out := &in.ScanPolicy, &out.ScanPolicy
		*out = make([]VsphereScanPolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SkipCompletion != nil {
		in, out := &in.SkipCompletion, &out.SkipCompletion
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VsphereInitParameters.
func (in *VsphereInitParameters) DeepCopy() *VsphereInitParameters {
	if in == nil {
		return nil
	}
	out := new(VsphereInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VsphereList) DeepCopyInto(out *VsphereList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Vsphere, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VsphereList.
func (in *VsphereList) DeepCopy() *VsphereList {
	if in == nil {
		return nil
	}
	out := new(VsphereList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VsphereList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VsphereLocationConfigInitParameters) DeepCopyInto(out *VsphereLocationConfigInitParameters) {
	*out = *in
	if in.CountryCode != nil {
		in, out := &in.CountryCode, &out.CountryCode
		*out = new(string)
		**out = **in
	}
	if in.CountryName != nil {
		in, out := &in.CountryName, &out.CountryName
		*out = new(string)
		**out = **in
	}
	if in.Latitude != nil {
		in, out := &in.Latitude, &out.Latitude
		*out = new(float64)
		**out = **in
	}
	if in.Longitude != nil {
		in, out := &in.Longitude, &out.Longitude
		*out = new(float64)
		**out = **in
	}
	if in.RegionCode != nil {
		in, out := &in.RegionCode, &out.RegionCode
		*out = new(string)
		**out = **in
	}
	if in.RegionName != nil {
		in, out := &in.RegionName, &out.RegionName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VsphereLocationConfigInitParameters.
func (in *VsphereLocationConfigInitParameters) DeepCopy() *VsphereLocationConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(VsphereLocationConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VsphereLocationConfigObservation) DeepCopyInto(out *VsphereLocationConfigObservation) {
	*out = *in
	if in.CountryCode != nil {
		in, out := &in.CountryCode, &out.CountryCode
		*out = new(string)
		**out = **in
	}
	if in.CountryName != nil {
		in, out := &in.CountryName, &out.CountryName
		*out = new(string)
		**out = **in
	}
	if in.Latitude != nil {
		in, out := &in.Latitude, &out.Latitude
		*out = new(float64)
		**out = **in
	}
	if in.Longitude != nil {
		in, out := &in.Longitude, &out.Longitude
		*out = new(float64)
		**out = **in
	}
	if in.RegionCode != nil {
		in, out := &in.RegionCode, &out.RegionCode
		*out = new(string)
		**out = **in
	}
	if in.RegionName != nil {
		in, out := &in.RegionName, &out.RegionName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VsphereLocationConfigObservation.
func (in *VsphereLocationConfigObservation) DeepCopy() *VsphereLocationConfigObservation {
	if in == nil {
		return nil
	}
	out := new(VsphereLocationConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VsphereLocationConfigParameters) DeepCopyInto(out *VsphereLocationConfigParameters) {
	*out = *in
	if in.CountryCode != nil {
		in, out := &in.CountryCode, &out.CountryCode
		*out = new(string)
		**out = **in
	}
	if in.CountryName != nil {
		in, out := &in.CountryName, &out.CountryName
		*out = new(string)
		**out = **in
	}
	if in.Latitude != nil {
		in, out := &in.Latitude, &out.Latitude
		*out = new(float64)
		**out = **in
	}
	if in.Longitude != nil {
		in, out := &in.Longitude, &out.Longitude
		*out = new(float64)
		**out = **in
	}
	if in.RegionCode != nil {
		in, out := &in.RegionCode, &out.RegionCode
		*out = new(string)
		**out = **in
	}
	if in.RegionName != nil {
		in, out := &in.RegionName, &out.RegionName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VsphereLocationConfigParameters.
func (in *VsphereLocationConfigParameters) DeepCopy() *VsphereLocationConfigParameters {
	if in == nil {
		return nil
	}
	out := new(VsphereLocationConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VsphereMachinePoolInitParameters) DeepCopyInto(out *VsphereMachinePoolInitParameters) {
	*out = *in
	if in.AdditionalLabels != nil {
		in, out := &in.AdditionalLabels, &out.AdditionalLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ControlPlane != nil {
		in, out := &in.ControlPlane, &out.ControlPlane
		*out = new(bool)
		**out = **in
	}
	if in.ControlPlaneAsWorker != nil {
		in, out := &in.ControlPlaneAsWorker, &out.ControlPlaneAsWorker
		*out = new(bool)
		**out = **in
	}
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = make([]VsphereMachinePoolInstanceTypeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Node != nil {
		in, out := &in.Node, &out.Node
		*out = make([]VsphereMachinePoolNodeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NodeRepaveInterval != nil {
		in, out := &in.NodeRepaveInterval, &out.NodeRepaveInterval
		*out = new(float64)
		**out = **in
	}
	if in.Placement != nil {
		in, out := &in.Placement, &out.Placement
		*out = make([]VsphereMachinePoolPlacementInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Taints != nil {
		in, out := &in.Taints, &out.Taints
		*out = make([]VsphereMachinePoolTaintsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UpdateStrategy != nil {
		in, out := &in.UpdateStrategy, &out.UpdateStrategy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VsphereMachinePoolInitParameters.
func (in *VsphereMachinePoolInitParameters) DeepCopy() *VsphereMachinePoolInitParameters {
	if in == nil {
		return nil
	}
	out := new(VsphereMachinePoolInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VsphereMachinePoolInstanceTypeInitParameters) DeepCopyInto(out *VsphereMachinePoolInstanceTypeInitParameters) {
	*out = *in
	if in.CPU != nil {
		in, out := &in.CPU, &out.CPU
		*out = new(float64)
		**out = **in
	}
	if in.DiskSizeGb != nil {
		in, out := &in.DiskSizeGb, &out.DiskSizeGb
		*out = new(float64)
		**out = **in
	}
	if in.MemoryMb != nil {
		in, out := &in.MemoryMb, &out.MemoryMb
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VsphereMachinePoolInstanceTypeInitParameters.
func (in *VsphereMachinePoolInstanceTypeInitParameters) DeepCopy() *VsphereMachinePoolInstanceTypeInitParameters {
	if in == nil {
		return nil
	}
	out := new(VsphereMachinePoolInstanceTypeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VsphereMachinePoolInstanceTypeObservation) DeepCopyInto(out *VsphereMachinePoolInstanceTypeObservation) {
	*out = *in
	if in.CPU != nil {
		in, out := &in.CPU, &out.CPU
		*out = new(float64)
		**out = **in
	}
	if in.DiskSizeGb != nil {
		in, out := &in.DiskSizeGb, &out.DiskSizeGb
		*out = new(float64)
		**out = **in
	}
	if in.MemoryMb != nil {
		in, out := &in.MemoryMb, &out.MemoryMb
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VsphereMachinePoolInstanceTypeObservation.
func (in *VsphereMachinePoolInstanceTypeObservation) DeepCopy() *VsphereMachinePoolInstanceTypeObservation {
	if in == nil {
		return nil
	}
	out := new(VsphereMachinePoolInstanceTypeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VsphereMachinePoolInstanceTypeParameters) DeepCopyInto(out *VsphereMachinePoolInstanceTypeParameters) {
	*out = *in
	if in.CPU != nil {
		in, out := &in.CPU, &out.CPU
		*out = new(float64)
		**out = **in
	}
	if in.DiskSizeGb != nil {
		in, out := &in.DiskSizeGb, &out.DiskSizeGb
		*out = new(float64)
		**out = **in
	}
	if in.MemoryMb != nil {
		in, out := &in.MemoryMb, &out.MemoryMb
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VsphereMachinePoolInstanceTypeParameters.
func (in *VsphereMachinePoolInstanceTypeParameters) DeepCopy() *VsphereMachinePoolInstanceTypeParameters {
	if in == nil {
		return nil
	}
	out := new(VsphereMachinePoolInstanceTypeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VsphereMachinePoolNodeInitParameters) DeepCopyInto(out *VsphereMachinePoolNodeInitParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.NodeID != nil {
		in, out := &in.NodeID, &out.NodeID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VsphereMachinePoolNodeInitParameters.
func (in *VsphereMachinePoolNodeInitParameters) DeepCopy() *VsphereMachinePoolNodeInitParameters {
	if in == nil {
		return nil
	}
	out := new(VsphereMachinePoolNodeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VsphereMachinePoolNodeObservation) DeepCopyInto(out *VsphereMachinePoolNodeObservation) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.NodeID != nil {
		in, out := &in.NodeID, &out.NodeID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VsphereMachinePoolNodeObservation.
func (in *VsphereMachinePoolNodeObservation) DeepCopy() *VsphereMachinePoolNodeObservation {
	if in == nil {
		return nil
	}
	out := new(VsphereMachinePoolNodeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VsphereMachinePoolNodeParameters) DeepCopyInto(out *VsphereMachinePoolNodeParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.NodeID != nil {
		in, out := &in.NodeID, &out.NodeID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VsphereMachinePoolNodeParameters.
func (in *VsphereMachinePoolNodeParameters) DeepCopy() *VsphereMachinePoolNodeParameters {
	if in == nil {
		return nil
	}
	out := new(VsphereMachinePoolNodeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VsphereMachinePoolObservation) DeepCopyInto(out *VsphereMachinePoolObservation) {
	*out = *in
	if in.AdditionalLabels != nil {
		in, out := &in.AdditionalLabels, &out.AdditionalLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ControlPlane != nil {
		in, out := &in.ControlPlane, &out.ControlPlane
		*out = new(bool)
		**out = **in
	}
	if in.ControlPlaneAsWorker != nil {
		in, out := &in.ControlPlaneAsWorker, &out.ControlPlaneAsWorker
		*out = new(bool)
		**out = **in
	}
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = make([]VsphereMachinePoolInstanceTypeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Node != nil {
		in, out := &in.Node, &out.Node
		*out = make([]VsphereMachinePoolNodeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NodeRepaveInterval != nil {
		in, out := &in.NodeRepaveInterval, &out.NodeRepaveInterval
		*out = new(float64)
		**out = **in
	}
	if in.Placement != nil {
		in, out := &in.Placement, &out.Placement
		*out = make([]VsphereMachinePoolPlacementObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Taints != nil {
		in, out := &in.Taints, &out.Taints
		*out = make([]VsphereMachinePoolTaintsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UpdateStrategy != nil {
		in, out := &in.UpdateStrategy, &out.UpdateStrategy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VsphereMachinePoolObservation.
func (in *VsphereMachinePoolObservation) DeepCopy() *VsphereMachinePoolObservation {
	if in == nil {
		return nil
	}
	out := new(VsphereMachinePoolObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VsphereMachinePoolParameters) DeepCopyInto(out *VsphereMachinePoolParameters) {
	*out = *in
	if in.AdditionalLabels != nil {
		in, out := &in.AdditionalLabels, &out.AdditionalLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ControlPlane != nil {
		in, out := &in.ControlPlane, &out.ControlPlane
		*out = new(bool)
		**out = **in
	}
	if in.ControlPlaneAsWorker != nil {
		in, out := &in.ControlPlaneAsWorker, &out.ControlPlaneAsWorker
		*out = new(bool)
		**out = **in
	}
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = make([]VsphereMachinePoolInstanceTypeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Node != nil {
		in, out := &in.Node, &out.Node
		*out = make([]VsphereMachinePoolNodeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NodeRepaveInterval != nil {
		in, out := &in.NodeRepaveInterval, &out.NodeRepaveInterval
		*out = new(float64)
		**out = **in
	}
	if in.Placement != nil {
		in, out := &in.Placement, &out.Placement
		*out = make([]VsphereMachinePoolPlacementParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Taints != nil {
		in, out := &in.Taints, &out.Taints
		*out = make([]VsphereMachinePoolTaintsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UpdateStrategy != nil {
		in, out := &in.UpdateStrategy, &out.UpdateStrategy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VsphereMachinePoolParameters.
func (in *VsphereMachinePoolParameters) DeepCopy() *VsphereMachinePoolParameters {
	if in == nil {
		return nil
	}
	out := new(VsphereMachinePoolParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VsphereMachinePoolPlacementInitParameters) DeepCopyInto(out *VsphereMachinePoolPlacementInitParameters) {
	*out = *in
	if in.Cluster != nil {
		in, out := &in.Cluster, &out.Cluster
		*out = new(string)
		**out = **in
	}
	if in.Datastore != nil {
		in, out := &in.Datastore, &out.Datastore
		*out = new(string)
		**out = **in
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.ResourcePool != nil {
		in, out := &in.ResourcePool, &out.ResourcePool
		*out = new(string)
		**out = **in
	}
	if in.StaticIPPoolID != nil {
		in, out := &in.StaticIPPoolID, &out.StaticIPPoolID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VsphereMachinePoolPlacementInitParameters.
func (in *VsphereMachinePoolPlacementInitParameters) DeepCopy() *VsphereMachinePoolPlacementInitParameters {
	if in == nil {
		return nil
	}
	out := new(VsphereMachinePoolPlacementInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VsphereMachinePoolPlacementObservation) DeepCopyInto(out *VsphereMachinePoolPlacementObservation) {
	*out = *in
	if in.Cluster != nil {
		in, out := &in.Cluster, &out.Cluster
		*out = new(string)
		**out = **in
	}
	if in.Datastore != nil {
		in, out := &in.Datastore, &out.Datastore
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.ResourcePool != nil {
		in, out := &in.ResourcePool, &out.ResourcePool
		*out = new(string)
		**out = **in
	}
	if in.StaticIPPoolID != nil {
		in, out := &in.StaticIPPoolID, &out.StaticIPPoolID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VsphereMachinePoolPlacementObservation.
func (in *VsphereMachinePoolPlacementObservation) DeepCopy() *VsphereMachinePoolPlacementObservation {
	if in == nil {
		return nil
	}
	out := new(VsphereMachinePoolPlacementObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VsphereMachinePoolPlacementParameters) DeepCopyInto(out *VsphereMachinePoolPlacementParameters) {
	*out = *in
	if in.Cluster != nil {
		in, out := &in.Cluster, &out.Cluster
		*out = new(string)
		**out = **in
	}
	if in.Datastore != nil {
		in, out := &in.Datastore, &out.Datastore
		*out = new(string)
		**out = **in
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.ResourcePool != nil {
		in, out := &in.ResourcePool, &out.ResourcePool
		*out = new(string)
		**out = **in
	}
	if in.StaticIPPoolID != nil {
		in, out := &in.StaticIPPoolID, &out.StaticIPPoolID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VsphereMachinePoolPlacementParameters.
func (in *VsphereMachinePoolPlacementParameters) DeepCopy() *VsphereMachinePoolPlacementParameters {
	if in == nil {
		return nil
	}
	out := new(VsphereMachinePoolPlacementParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VsphereMachinePoolTaintsInitParameters) DeepCopyInto(out *VsphereMachinePoolTaintsInitParameters) {
	*out = *in
	if in.Effect != nil {
		in, out := &in.Effect, &out.Effect
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VsphereMachinePoolTaintsInitParameters.
func (in *VsphereMachinePoolTaintsInitParameters) DeepCopy() *VsphereMachinePoolTaintsInitParameters {
	if in == nil {
		return nil
	}
	out := new(VsphereMachinePoolTaintsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VsphereMachinePoolTaintsObservation) DeepCopyInto(out *VsphereMachinePoolTaintsObservation) {
	*out = *in
	if in.Effect != nil {
		in, out := &in.Effect, &out.Effect
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VsphereMachinePoolTaintsObservation.
func (in *VsphereMachinePoolTaintsObservation) DeepCopy() *VsphereMachinePoolTaintsObservation {
	if in == nil {
		return nil
	}
	out := new(VsphereMachinePoolTaintsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VsphereMachinePoolTaintsParameters) DeepCopyInto(out *VsphereMachinePoolTaintsParameters) {
	*out = *in
	if in.Effect != nil {
		in, out := &in.Effect, &out.Effect
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VsphereMachinePoolTaintsParameters.
func (in *VsphereMachinePoolTaintsParameters) DeepCopy() *VsphereMachinePoolTaintsParameters {
	if in == nil {
		return nil
	}
	out := new(VsphereMachinePoolTaintsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VsphereNamespacesInitParameters) DeepCopyInto(out *VsphereNamespacesInitParameters) {
	*out = *in
	if in.ImagesBlacklist != nil {
		in, out := &in.ImagesBlacklist, &out.ImagesBlacklist
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ResourceAllocation != nil {
		in, out := &in.ResourceAllocation, &out.ResourceAllocation
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VsphereNamespacesInitParameters.
func (in *VsphereNamespacesInitParameters) DeepCopy() *VsphereNamespacesInitParameters {
	if in == nil {
		return nil
	}
	out := new(VsphereNamespacesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VsphereNamespacesObservation) DeepCopyInto(out *VsphereNamespacesObservation) {
	*out = *in
	if in.ImagesBlacklist != nil {
		in, out := &in.ImagesBlacklist, &out.ImagesBlacklist
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ResourceAllocation != nil {
		in, out := &in.ResourceAllocation, &out.ResourceAllocation
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VsphereNamespacesObservation.
func (in *VsphereNamespacesObservation) DeepCopy() *VsphereNamespacesObservation {
	if in == nil {
		return nil
	}
	out := new(VsphereNamespacesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VsphereNamespacesParameters) DeepCopyInto(out *VsphereNamespacesParameters) {
	*out = *in
	if in.ImagesBlacklist != nil {
		in, out := &in.ImagesBlacklist, &out.ImagesBlacklist
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ResourceAllocation != nil {
		in, out := &in.ResourceAllocation, &out.ResourceAllocation
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VsphereNamespacesParameters.
func (in *VsphereNamespacesParameters) DeepCopy() *VsphereNamespacesParameters {
	if in == nil {
		return nil
	}
	out := new(VsphereNamespacesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VsphereObservation) DeepCopyInto(out *VsphereObservation) {
	*out = *in
	if in.AdminKubeConfig != nil {
		in, out := &in.AdminKubeConfig, &out.AdminKubeConfig
		*out = new(string)
		**out = **in
	}
	if in.ApplySetting != nil {
		in, out := &in.ApplySetting, &out.ApplySetting
		*out = new(string)
		**out = **in
	}
	if in.BackupPolicy != nil {
		in, out := &in.BackupPolicy, &out.BackupPolicy
		*out = make([]VsphereBackupPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CloudAccountID != nil {
		in, out := &in.CloudAccountID, &out.CloudAccountID
		*out = new(string)
		**out = **in
	}
	if in.CloudConfig != nil {
		in, out := &in.CloudConfig, &out.CloudConfig
		*out = make([]VsphereCloudConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CloudConfigID != nil {
		in, out := &in.CloudConfigID, &out.CloudConfigID
		*out = new(string)
		**out = **in
	}
	if in.ClusterMetaAttribute != nil {
		in, out := &in.ClusterMetaAttribute, &out.ClusterMetaAttribute
		*out = new(string)
		**out = **in
	}
	if in.ClusterProfile != nil {
		in, out := &in.ClusterProfile, &out.ClusterProfile
		*out = make([]VsphereClusterProfileObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterRbacBinding != nil {
		in, out := &in.ClusterRbacBinding, &out.ClusterRbacBinding
		*out = make([]VsphereClusterRbacBindingObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Context != nil {
		in, out := &in.Context, &out.Context
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ForceDelete != nil {
		in, out := &in.ForceDelete, &out.ForceDelete
		*out = new(bool)
		**out = **in
	}
	if in.ForceDeleteDelay != nil {
		in, out := &in.ForceDeleteDelay, &out.ForceDeleteDelay
		*out = new(float64)
		**out = **in
	}
	if in.HostConfig != nil {
		in, out := &in.HostConfig, &out.HostConfig
		*out = make([]VsphereHostConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Kubeconfig != nil {
		in, out := &in.Kubeconfig, &out.Kubeconfig
		*out = new(string)
		**out = **in
	}
	if in.LocationConfig != nil {
		in, out := &in.LocationConfig, &out.LocationConfig
		*out = make([]VsphereLocationConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MachinePool != nil {
		in, out := &in.MachinePool, &out.MachinePool
		*out = make([]VsphereMachinePoolObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]VsphereNamespacesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OsPatchAfter != nil {
		in, out := &in.OsPatchAfter, &out.OsPatchAfter
		*out = new(string)
		**out = **in
	}
	if in.OsPatchOnBoot != nil {
		in, out := &in.OsPatchOnBoot, &out.OsPatchOnBoot
		*out = new(bool)
		**out = **in
	}
	if in.OsPatchSchedule != nil {
		in, out := &in.OsPatchSchedule, &out.OsPatchSchedule
		*out = new(string)
		**out = **in
	}
	if in.PauseAgentUpgrades != nil {
		in, out := &in.PauseAgentUpgrades, &out.PauseAgentUpgrades
		*out = new(string)
		**out = **in
	}
	if in.ReviewRepaveState != nil {
		in, out := &in.ReviewRepaveState, &out.ReviewRepaveState
		*out = new(string)
		**out = **in
	}
	if in.ScanPolicy != nil {
		in, out := &in.ScanPolicy, &out.ScanPolicy
		*out = make([]VsphereScanPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SkipCompletion != nil {
		in, out := &in.SkipCompletion, &out.SkipCompletion
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VsphereObservation.
func (in *VsphereObservation) DeepCopy() *VsphereObservation {
	if in == nil {
		return nil
	}
	out := new(VsphereObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VsphereParameters) DeepCopyInto(out *VsphereParameters) {
	*out = *in
	if in.ApplySetting != nil {
		in, out := &in.ApplySetting, &out.ApplySetting
		*out = new(string)
		**out = **in
	}
	if in.BackupPolicy != nil {
		in, out := &in.BackupPolicy, &out.BackupPolicy
		*out = make([]VsphereBackupPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CloudAccountID != nil {
		in, out := &in.CloudAccountID, &out.CloudAccountID
		*out = new(string)
		**out = **in
	}
	if in.CloudConfig != nil {
		in, out := &in.CloudConfig, &out.CloudConfig
		*out = make([]VsphereCloudConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterMetaAttribute != nil {
		in, out := &in.ClusterMetaAttribute, &out.ClusterMetaAttribute
		*out = new(string)
		**out = **in
	}
	if in.ClusterProfile != nil {
		in, out := &in.ClusterProfile, &out.ClusterProfile
		*out = make([]VsphereClusterProfileParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterRbacBinding != nil {
		in, out := &in.ClusterRbacBinding, &out.ClusterRbacBinding
		*out = make([]VsphereClusterRbacBindingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Context != nil {
		in, out := &in.Context, &out.Context
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ForceDelete != nil {
		in, out := &in.ForceDelete, &out.ForceDelete
		*out = new(bool)
		**out = **in
	}
	if in.ForceDeleteDelay != nil {
		in, out := &in.ForceDeleteDelay, &out.ForceDeleteDelay
		*out = new(float64)
		**out = **in
	}
	if in.HostConfig != nil {
		in, out := &in.HostConfig, &out.HostConfig
		*out = make([]VsphereHostConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LocationConfig != nil {
		in, out := &in.LocationConfig, &out.LocationConfig
		*out = make([]VsphereLocationConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MachinePool != nil {
		in, out := &in.MachinePool, &out.MachinePool
		*out = make([]VsphereMachinePoolParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]VsphereNamespacesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OsPatchAfter != nil {
		in, out := &in.OsPatchAfter, &out.OsPatchAfter
		*out = new(string)
		**out = **in
	}
	if in.OsPatchOnBoot != nil {
		in, out := &in.OsPatchOnBoot, &out.OsPatchOnBoot
		*out = new(bool)
		**out = **in
	}
	if in.OsPatchSchedule != nil {
		in, out := &in.OsPatchSchedule, &out.OsPatchSchedule
		*out = new(string)
		**out = **in
	}
	if in.PauseAgentUpgrades != nil {
		in, out := &in.PauseAgentUpgrades, &out.PauseAgentUpgrades
		*out = new(string)
		**out = **in
	}
	if in.ReviewRepaveState != nil {
		in, out := &in.ReviewRepaveState, &out.ReviewRepaveState
		*out = new(string)
		**out = **in
	}
	if in.ScanPolicy != nil {
		in, out := &in.ScanPolicy, &out.ScanPolicy
		*out = make([]VsphereScanPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SkipCompletion != nil {
		in, out := &in.SkipCompletion, &out.SkipCompletion
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VsphereParameters.
func (in *VsphereParameters) DeepCopy() *VsphereParameters {
	if in == nil {
		return nil
	}
	out := new(VsphereParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VsphereScanPolicyInitParameters) DeepCopyInto(out *VsphereScanPolicyInitParameters) {
	*out = *in
	if in.ConfigurationScanSchedule != nil {
		in, out := &in.ConfigurationScanSchedule, &out.ConfigurationScanSchedule
		*out = new(string)
		**out = **in
	}
	if in.ConformanceScanSchedule != nil {
		in, out := &in.ConformanceScanSchedule, &out.ConformanceScanSchedule
		*out = new(string)
		**out = **in
	}
	if in.PenetrationScanSchedule != nil {
		in, out := &in.PenetrationScanSchedule, &out.PenetrationScanSchedule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VsphereScanPolicyInitParameters.
func (in *VsphereScanPolicyInitParameters) DeepCopy() *VsphereScanPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(VsphereScanPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VsphereScanPolicyObservation) DeepCopyInto(out *VsphereScanPolicyObservation) {
	*out = *in
	if in.ConfigurationScanSchedule != nil {
		in, out := &in.ConfigurationScanSchedule, &out.ConfigurationScanSchedule
		*out = new(string)
		**out = **in
	}
	if in.ConformanceScanSchedule != nil {
		in, out := &in.ConformanceScanSchedule, &out.ConformanceScanSchedule
		*out = new(string)
		**out = **in
	}
	if in.PenetrationScanSchedule != nil {
		in, out := &in.PenetrationScanSchedule, &out.PenetrationScanSchedule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VsphereScanPolicyObservation.
func (in *VsphereScanPolicyObservation) DeepCopy() *VsphereScanPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(VsphereScanPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VsphereScanPolicyParameters) DeepCopyInto(out *VsphereScanPolicyParameters) {
	*out = *in
	if in.ConfigurationScanSchedule != nil {
		in, out := &in.ConfigurationScanSchedule, &out.ConfigurationScanSchedule
		*out = new(string)
		**out = **in
	}
	if in.ConformanceScanSchedule != nil {
		in, out := &in.ConformanceScanSchedule, &out.ConformanceScanSchedule
		*out = new(string)
		**out = **in
	}
	if in.PenetrationScanSchedule != nil {
		in, out := &in.PenetrationScanSchedule, &out.PenetrationScanSchedule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VsphereScanPolicyParameters.
func (in *VsphereScanPolicyParameters) DeepCopy() *VsphereScanPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(VsphereScanPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VsphereSpec) DeepCopyInto(out *VsphereSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VsphereSpec.
func (in *VsphereSpec) DeepCopy() *VsphereSpec {
	if in == nil {
		return nil
	}
	out := new(VsphereSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VsphereStatus) DeepCopyInto(out *VsphereStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VsphereStatus.
func (in *VsphereStatus) DeepCopy() *VsphereStatus {
	if in == nil {
		return nil
	}
	out := new(VsphereStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkerNodeSubnetInitParameters) DeepCopyInto(out *WorkerNodeSubnetInitParameters) {
	*out = *in
	if in.CidrBlock != nil {
		in, out := &in.CidrBlock, &out.CidrBlock
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroupName != nil {
		in, out := &in.SecurityGroupName, &out.SecurityGroupName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkerNodeSubnetInitParameters.
func (in *WorkerNodeSubnetInitParameters) DeepCopy() *WorkerNodeSubnetInitParameters {
	if in == nil {
		return nil
	}
	out := new(WorkerNodeSubnetInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkerNodeSubnetObservation) DeepCopyInto(out *WorkerNodeSubnetObservation) {
	*out = *in
	if in.CidrBlock != nil {
		in, out := &in.CidrBlock, &out.CidrBlock
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroupName != nil {
		in, out := &in.SecurityGroupName, &out.SecurityGroupName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkerNodeSubnetObservation.
func (in *WorkerNodeSubnetObservation) DeepCopy() *WorkerNodeSubnetObservation {
	if in == nil {
		return nil
	}
	out := new(WorkerNodeSubnetObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkerNodeSubnetParameters) DeepCopyInto(out *WorkerNodeSubnetParameters) {
	*out = *in
	if in.CidrBlock != nil {
		in, out := &in.CidrBlock, &out.CidrBlock
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroupName != nil {
		in, out := &in.SecurityGroupName, &out.SecurityGroupName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkerNodeSubnetParameters.
func (in *WorkerNodeSubnetParameters) DeepCopy() *WorkerNodeSubnetParameters {
	if in == nil {
		return nil
	}
	out := new(WorkerNodeSubnetParameters)
	in.DeepCopyInto(out)
	return out
}
