/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/v2/apis/common/v1"
)

type LimitInitParameters struct {

	// (Number) The maximum number of API keys that can be generated. Must be between 1 and 10,000.
	// The maximum number of API keys that can be generated. Must be between 1 and 10,000.
	APIKeys *float64 `json:"apiKeys,omitempty" tf:"api_keys,omitempty"`

	// (Number) The maximum number of alerts that can be created. Must be between 1 and 10,000.
	// The maximum number of alerts that can be created. Must be between 1 and 10,000.
	Alert *float64 `json:"alert,omitempty" tf:"alert,omitempty"`

	// (Number) The maximum number of appliances that can be managed. Must be between 1 and 50,000.
	// The maximum number of appliances that can be managed. Must be between 1 and 50,000.
	Appliance *float64 `json:"appliance,omitempty" tf:"appliance,omitempty"`

	// (Number) The maximum number of appliance tokens that can be issued. Must be between 1 and 10,000.
	// The maximum number of appliance tokens that can be issued. Must be between 1 and 10,000.
	ApplianceToken *float64 `json:"applianceToken,omitempty" tf:"appliance_token,omitempty"`

	// (Number) The maximum number of application deployments allowed. Must be between 1 and 10,000.
	// The maximum number of application deployments allowed. Must be between 1 and 10,000.
	ApplicationDeployment *float64 `json:"applicationDeployment,omitempty" tf:"application_deployment,omitempty"`

	// (Number) The maximum number of application profiles that can be configured. Must be between 1 and 10,000.
	// The maximum number of application profiles that can be configured. Must be between 1 and 10,000.
	ApplicationProfile *float64 `json:"applicationProfile,omitempty" tf:"application_profile,omitempty"`

	// (Number) The maximum number of certificates that can be managed. Must be between 1 and 10,000.
	// The maximum number of certificates that can be managed. Must be between 1 and 10,000.
	Certificate *float64 `json:"certificate,omitempty" tf:"certificate,omitempty"`

	// (Number) The maximum number of cloud accounts that can be added. Must be between 1 and 10,000.
	// The maximum number of cloud accounts that can be added. Must be between 1 and 10,000.
	CloudAccount *float64 `json:"cloudAccount,omitempty" tf:"cloud_account,omitempty"`

	// (Number) The maximum number of clusters that can be created. Must be between 1 and 50,000.
	// The maximum number of clusters that can be created. Must be between 1 and 50,000.
	Cluster *float64 `json:"cluster,omitempty" tf:"cluster,omitempty"`

	// (Number) The maximum number of cluster groups that can be created. Must be between 1 and 10,000.
	// The maximum number of cluster groups that can be created. Must be between 1 and 10,000.
	ClusterGroup *float64 `json:"clusterGroup,omitempty" tf:"cluster_group,omitempty"`

	// (Number) The maximum number of cluster profiles that can be configured. Must be between 1 and 10,000.
	// The maximum number of cluster profiles that can be configured. Must be between 1 and 10,000.
	ClusterProfile *float64 `json:"clusterProfile,omitempty" tf:"cluster_profile,omitempty"`

	// (Number) The maximum number of filters that can be defined. Must be between 1 and 10,000.
	// The maximum number of filters that can be defined. Must be between 1 and 10,000.
	Filter *float64 `json:"filter,omitempty" tf:"filter,omitempty"`

	// (Number) The maximum number of locations that can be configured. Must be between 1 and 10,000.
	// The maximum number of locations that can be configured. Must be between 1 and 10,000.
	Location *float64 `json:"location,omitempty" tf:"location,omitempty"`

	// (Number) The maximum number of macros that can be created. Must be between 1 and 10,000.
	// The maximum number of macros that can be created. Must be between 1 and 10,000.
	Macro *float64 `json:"macro,omitempty" tf:"macro,omitempty"`

	// (Number) The maximum number of private gateways that can be managed. Must be between 1 and 10,000.
	// The maximum number of private gateways that can be managed. Must be between 1 and 10,000.
	PrivateGateway *float64 `json:"privateGateway,omitempty" tf:"private_gateway,omitempty"`

	// (Number) The maximum number of projects that can be created. Must be between 1 and 10,000.
	// The maximum number of projects that can be created. Must be between 1 and 10,000.
	Project *float64 `json:"project,omitempty" tf:"project,omitempty"`

	// (Number) The maximum number of registries that can be configured. Must be between 1 and 10,000.
	// The maximum number of registries that can be configured. Must be between 1 and 10,000.
	Registry *float64 `json:"registry,omitempty" tf:"registry,omitempty"`

	// (Number) The maximum number of roles that can be assigned. Must be between 1 and 10,000.
	// The maximum number of roles that can be assigned. Must be between 1 and 10,000.
	Role *float64 `json:"role,omitempty" tf:"role,omitempty"`

	// (Number) The maximum number of SSH keys that can be managed. Must be between 1 and 10,000.
	// The maximum number of SSH keys that can be managed. Must be between 1 and 10,000.
	SSHKey *float64 `json:"sshKey,omitempty" tf:"ssh_key,omitempty"`

	// (Number) The maximum number of teams that can be created. Must be between 1 and 10,000.
	// The maximum number of teams that can be created. Must be between 1 and 10,000.
	Team *float64 `json:"team,omitempty" tf:"team,omitempty"`

	// (Number) The maximum number of users that can be added. Must be between 1 and 10,000.
	// The maximum number of users that can be added. Must be between 1 and 10,000.
	User *float64 `json:"user,omitempty" tf:"user,omitempty"`

	// (Number) The maximum number of workspaces that can be created. Must be between 1 and 10,000.
	// The maximum number of workspaces that can be created. Must be between 1 and 10,000.
	Workspace *float64 `json:"workspace,omitempty" tf:"workspace,omitempty"`
}

type LimitObservation struct {

	// (Number) The maximum number of API keys that can be generated. Must be between 1 and 10,000.
	// The maximum number of API keys that can be generated. Must be between 1 and 10,000.
	APIKeys *float64 `json:"apiKeys,omitempty" tf:"api_keys,omitempty"`

	// (Number) The maximum number of alerts that can be created. Must be between 1 and 10,000.
	// The maximum number of alerts that can be created. Must be between 1 and 10,000.
	Alert *float64 `json:"alert,omitempty" tf:"alert,omitempty"`

	// (Number) The maximum number of appliances that can be managed. Must be between 1 and 50,000.
	// The maximum number of appliances that can be managed. Must be between 1 and 50,000.
	Appliance *float64 `json:"appliance,omitempty" tf:"appliance,omitempty"`

	// (Number) The maximum number of appliance tokens that can be issued. Must be between 1 and 10,000.
	// The maximum number of appliance tokens that can be issued. Must be between 1 and 10,000.
	ApplianceToken *float64 `json:"applianceToken,omitempty" tf:"appliance_token,omitempty"`

	// (Number) The maximum number of application deployments allowed. Must be between 1 and 10,000.
	// The maximum number of application deployments allowed. Must be between 1 and 10,000.
	ApplicationDeployment *float64 `json:"applicationDeployment,omitempty" tf:"application_deployment,omitempty"`

	// (Number) The maximum number of application profiles that can be configured. Must be between 1 and 10,000.
	// The maximum number of application profiles that can be configured. Must be between 1 and 10,000.
	ApplicationProfile *float64 `json:"applicationProfile,omitempty" tf:"application_profile,omitempty"`

	// (Number) The maximum number of certificates that can be managed. Must be between 1 and 10,000.
	// The maximum number of certificates that can be managed. Must be between 1 and 10,000.
	Certificate *float64 `json:"certificate,omitempty" tf:"certificate,omitempty"`

	// (Number) The maximum number of cloud accounts that can be added. Must be between 1 and 10,000.
	// The maximum number of cloud accounts that can be added. Must be between 1 and 10,000.
	CloudAccount *float64 `json:"cloudAccount,omitempty" tf:"cloud_account,omitempty"`

	// (Number) The maximum number of clusters that can be created. Must be between 1 and 50,000.
	// The maximum number of clusters that can be created. Must be between 1 and 50,000.
	Cluster *float64 `json:"cluster,omitempty" tf:"cluster,omitempty"`

	// (Number) The maximum number of cluster groups that can be created. Must be between 1 and 10,000.
	// The maximum number of cluster groups that can be created. Must be between 1 and 10,000.
	ClusterGroup *float64 `json:"clusterGroup,omitempty" tf:"cluster_group,omitempty"`

	// (Number) The maximum number of cluster profiles that can be configured. Must be between 1 and 10,000.
	// The maximum number of cluster profiles that can be configured. Must be between 1 and 10,000.
	ClusterProfile *float64 `json:"clusterProfile,omitempty" tf:"cluster_profile,omitempty"`

	// (Number) The maximum number of filters that can be defined. Must be between 1 and 10,000.
	// The maximum number of filters that can be defined. Must be between 1 and 10,000.
	Filter *float64 `json:"filter,omitempty" tf:"filter,omitempty"`

	// (String) The ID of this resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (Number) The maximum number of locations that can be configured. Must be between 1 and 10,000.
	// The maximum number of locations that can be configured. Must be between 1 and 10,000.
	Location *float64 `json:"location,omitempty" tf:"location,omitempty"`

	// (Number) The maximum number of macros that can be created. Must be between 1 and 10,000.
	// The maximum number of macros that can be created. Must be between 1 and 10,000.
	Macro *float64 `json:"macro,omitempty" tf:"macro,omitempty"`

	// (Number) The maximum number of private gateways that can be managed. Must be between 1 and 10,000.
	// The maximum number of private gateways that can be managed. Must be between 1 and 10,000.
	PrivateGateway *float64 `json:"privateGateway,omitempty" tf:"private_gateway,omitempty"`

	// (Number) The maximum number of projects that can be created. Must be between 1 and 10,000.
	// The maximum number of projects that can be created. Must be between 1 and 10,000.
	Project *float64 `json:"project,omitempty" tf:"project,omitempty"`

	// (Number) The maximum number of registries that can be configured. Must be between 1 and 10,000.
	// The maximum number of registries that can be configured. Must be between 1 and 10,000.
	Registry *float64 `json:"registry,omitempty" tf:"registry,omitempty"`

	// (Number) The maximum number of roles that can be assigned. Must be between 1 and 10,000.
	// The maximum number of roles that can be assigned. Must be between 1 and 10,000.
	Role *float64 `json:"role,omitempty" tf:"role,omitempty"`

	// (Number) The maximum number of SSH keys that can be managed. Must be between 1 and 10,000.
	// The maximum number of SSH keys that can be managed. Must be between 1 and 10,000.
	SSHKey *float64 `json:"sshKey,omitempty" tf:"ssh_key,omitempty"`

	// (Number) The maximum number of teams that can be created. Must be between 1 and 10,000.
	// The maximum number of teams that can be created. Must be between 1 and 10,000.
	Team *float64 `json:"team,omitempty" tf:"team,omitempty"`

	// (Number) The maximum number of users that can be added. Must be between 1 and 10,000.
	// The maximum number of users that can be added. Must be between 1 and 10,000.
	User *float64 `json:"user,omitempty" tf:"user,omitempty"`

	// (Number) The maximum number of workspaces that can be created. Must be between 1 and 10,000.
	// The maximum number of workspaces that can be created. Must be between 1 and 10,000.
	Workspace *float64 `json:"workspace,omitempty" tf:"workspace,omitempty"`
}

type LimitParameters struct {

	// (Number) The maximum number of API keys that can be generated. Must be between 1 and 10,000.
	// The maximum number of API keys that can be generated. Must be between 1 and 10,000.
	// +kubebuilder:validation:Optional
	APIKeys *float64 `json:"apiKeys,omitempty" tf:"api_keys,omitempty"`

	// (Number) The maximum number of alerts that can be created. Must be between 1 and 10,000.
	// The maximum number of alerts that can be created. Must be between 1 and 10,000.
	// +kubebuilder:validation:Optional
	Alert *float64 `json:"alert,omitempty" tf:"alert,omitempty"`

	// (Number) The maximum number of appliances that can be managed. Must be between 1 and 50,000.
	// The maximum number of appliances that can be managed. Must be between 1 and 50,000.
	// +kubebuilder:validation:Optional
	Appliance *float64 `json:"appliance,omitempty" tf:"appliance,omitempty"`

	// (Number) The maximum number of appliance tokens that can be issued. Must be between 1 and 10,000.
	// The maximum number of appliance tokens that can be issued. Must be between 1 and 10,000.
	// +kubebuilder:validation:Optional
	ApplianceToken *float64 `json:"applianceToken,omitempty" tf:"appliance_token,omitempty"`

	// (Number) The maximum number of application deployments allowed. Must be between 1 and 10,000.
	// The maximum number of application deployments allowed. Must be between 1 and 10,000.
	// +kubebuilder:validation:Optional
	ApplicationDeployment *float64 `json:"applicationDeployment,omitempty" tf:"application_deployment,omitempty"`

	// (Number) The maximum number of application profiles that can be configured. Must be between 1 and 10,000.
	// The maximum number of application profiles that can be configured. Must be between 1 and 10,000.
	// +kubebuilder:validation:Optional
	ApplicationProfile *float64 `json:"applicationProfile,omitempty" tf:"application_profile,omitempty"`

	// (Number) The maximum number of certificates that can be managed. Must be between 1 and 10,000.
	// The maximum number of certificates that can be managed. Must be between 1 and 10,000.
	// +kubebuilder:validation:Optional
	Certificate *float64 `json:"certificate,omitempty" tf:"certificate,omitempty"`

	// (Number) The maximum number of cloud accounts that can be added. Must be between 1 and 10,000.
	// The maximum number of cloud accounts that can be added. Must be between 1 and 10,000.
	// +kubebuilder:validation:Optional
	CloudAccount *float64 `json:"cloudAccount,omitempty" tf:"cloud_account,omitempty"`

	// (Number) The maximum number of clusters that can be created. Must be between 1 and 50,000.
	// The maximum number of clusters that can be created. Must be between 1 and 50,000.
	// +kubebuilder:validation:Optional
	Cluster *float64 `json:"cluster,omitempty" tf:"cluster,omitempty"`

	// (Number) The maximum number of cluster groups that can be created. Must be between 1 and 10,000.
	// The maximum number of cluster groups that can be created. Must be between 1 and 10,000.
	// +kubebuilder:validation:Optional
	ClusterGroup *float64 `json:"clusterGroup,omitempty" tf:"cluster_group,omitempty"`

	// (Number) The maximum number of cluster profiles that can be configured. Must be between 1 and 10,000.
	// The maximum number of cluster profiles that can be configured. Must be between 1 and 10,000.
	// +kubebuilder:validation:Optional
	ClusterProfile *float64 `json:"clusterProfile,omitempty" tf:"cluster_profile,omitempty"`

	// (Number) The maximum number of filters that can be defined. Must be between 1 and 10,000.
	// The maximum number of filters that can be defined. Must be between 1 and 10,000.
	// +kubebuilder:validation:Optional
	Filter *float64 `json:"filter,omitempty" tf:"filter,omitempty"`

	// (Number) The maximum number of locations that can be configured. Must be between 1 and 10,000.
	// The maximum number of locations that can be configured. Must be between 1 and 10,000.
	// +kubebuilder:validation:Optional
	Location *float64 `json:"location,omitempty" tf:"location,omitempty"`

	// (Number) The maximum number of macros that can be created. Must be between 1 and 10,000.
	// The maximum number of macros that can be created. Must be between 1 and 10,000.
	// +kubebuilder:validation:Optional
	Macro *float64 `json:"macro,omitempty" tf:"macro,omitempty"`

	// (Number) The maximum number of private gateways that can be managed. Must be between 1 and 10,000.
	// The maximum number of private gateways that can be managed. Must be between 1 and 10,000.
	// +kubebuilder:validation:Optional
	PrivateGateway *float64 `json:"privateGateway,omitempty" tf:"private_gateway,omitempty"`

	// (Number) The maximum number of projects that can be created. Must be between 1 and 10,000.
	// The maximum number of projects that can be created. Must be between 1 and 10,000.
	// +kubebuilder:validation:Optional
	Project *float64 `json:"project,omitempty" tf:"project,omitempty"`

	// (Number) The maximum number of registries that can be configured. Must be between 1 and 10,000.
	// The maximum number of registries that can be configured. Must be between 1 and 10,000.
	// +kubebuilder:validation:Optional
	Registry *float64 `json:"registry,omitempty" tf:"registry,omitempty"`

	// (Number) The maximum number of roles that can be assigned. Must be between 1 and 10,000.
	// The maximum number of roles that can be assigned. Must be between 1 and 10,000.
	// +kubebuilder:validation:Optional
	Role *float64 `json:"role,omitempty" tf:"role,omitempty"`

	// (Number) The maximum number of SSH keys that can be managed. Must be between 1 and 10,000.
	// The maximum number of SSH keys that can be managed. Must be between 1 and 10,000.
	// +kubebuilder:validation:Optional
	SSHKey *float64 `json:"sshKey,omitempty" tf:"ssh_key,omitempty"`

	// (Number) The maximum number of teams that can be created. Must be between 1 and 10,000.
	// The maximum number of teams that can be created. Must be between 1 and 10,000.
	// +kubebuilder:validation:Optional
	Team *float64 `json:"team,omitempty" tf:"team,omitempty"`

	// (Number) The maximum number of users that can be added. Must be between 1 and 10,000.
	// The maximum number of users that can be added. Must be between 1 and 10,000.
	// +kubebuilder:validation:Optional
	User *float64 `json:"user,omitempty" tf:"user,omitempty"`

	// (Number) The maximum number of workspaces that can be created. Must be between 1 and 10,000.
	// The maximum number of workspaces that can be created. Must be between 1 and 10,000.
	// +kubebuilder:validation:Optional
	Workspace *float64 `json:"workspace,omitempty" tf:"workspace,omitempty"`
}

// LimitSpec defines the desired state of Limit
type LimitSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     LimitParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider LimitInitParameters `json:"initProvider,omitempty"`
}

// LimitStatus defines the observed state of Limit.
type LimitStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        LimitObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// Limit is the Schema for the Limits API.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,palette}
type Limit struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              LimitSpec   `json:"spec"`
	Status            LimitStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// LimitList contains a list of Limits
type LimitList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Limit `json:"items"`
}

// Repository type metadata.
var (
	Limit_Kind             = "Limit"
	Limit_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: Limit_Kind}.String()
	Limit_KindAPIVersion   = Limit_Kind + "." + CRDGroupVersion.String()
	Limit_GroupVersionKind = CRDGroupVersion.WithKind(Limit_Kind)
)

func init() {
	SchemeBuilder.Register(&Limit{}, &LimitList{})
}
